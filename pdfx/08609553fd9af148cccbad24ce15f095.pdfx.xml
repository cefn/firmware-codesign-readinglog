<?xml version='1.0' encoding='UTF-8'?>
<pdfx xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://pdfx.cs.man.ac.uk/static/article-schema.xsd">
  <meta>
    <job>ecc56cefeee04896b80044f6c78573413a7d17f826eae8a94dbf83fdf98a7dd8</job>
    <base_name>62o9</base_name>
    <doi confidence="possible">10.1145/153571.163268</doi>
    <warning>Original PDF was found to be an image-based/possible OCR document. Output quality may be degraded.</warning>
  </meta>
  <article>
    <front class="DoCO:FrontMatter">
      <title-group>
        <article-title class="DoCO:Title" id="1">Experiences using cooperative interactive storyboard prototyping</article-title>
      </title-group>
      <contrib-group class="DoCO:ListOfAuthors">
        <contrib contrib-type="author">
          <name id="2">Kim Halskov Madsen</name>
        </contrib>
        <contrib contrib-type="author">
          <name id="3">Peter H. Aiken</name>
        </contrib>
      </contrib-group>
      <region class="unknown" id="4">EXPERIENCES USING COOPERATIVE INTERACTIVE STORYBOARD PROTOTYPING The interfaces of computer systems embedded in certain types of consumer electronic products are frequently targets of criticism. PerhaPS the most frequently cited examples of poor user i n t e r f a c e s (UIS) a r e t h o s e a s s o c i a t e d w i t h v i d e o c a s s e t t e r e c o r d e r s (VCRS).</region>
    </front>
    <body class="DoCO:BodyMatter">
      <region class="DoCO:TextChunk" id="21" page="1" column="1">To cite a popular reference, the April 29, 1991 issue of Business Week reported only 3% of total television viewing time went to shows that were recorded by the users. Further surveys report high percentages of flashing V C R clocks, indicating the clocks are not set properly. Two of the obvious conse- quences of these poorly developed h u m a n - c o m p u t e r interfaces are: 1) a considerable portion of the population is unable to benefit from the primary functionality of these products; and 2) the loss of potential recording tape sales represented by the flashing clocks. The need for active end-user participation in development activities has been acknowledged and is re- flected as increasing interest in professional gatherings such as the Computer Supported Cooperative Work (CSCW) and Participatory Design (PD) conferences. Prototyping has contributed to the success of end- user design activities [ <xref ref-type="bibr" rid="R6" id="5" class="deo:Reference">6</xref>, <xref ref-type="bibr" rid="R7" id="6" class="deo:Reference">7</xref>]. Both the- oretical arguments and empirical evi- dence indicate a strong cause-and- effect relationship between development approaches permitting realistic conditions for prototype evaluation and successful interface development efforts. Better solutions are achieved when the user is better pre- pared to participate in development processes [<xref ref-type="bibr" rid="R10" id="7" class="deo:Reference">10</xref>, <xref ref-type="bibr" rid="R11" id="8" class="deo:Reference">11</xref>]. Storyboard prototyping is a varia- tion of the general 'plan to throw one away in order to get it right' school of software development promoted by Brooks and others [<xref ref-type="bibr" rid="R1" id="9" class="deo:Reference">1</xref>, <xref ref-type="bibr" rid="R3" id="10" class="deo:Reference">3</xref>, <xref ref-type="bibr" rid="R8" id="11" class="deo:Reference">8</xref>, <xref ref-type="bibr" rid="R13" id="12" class="deo:Reference">13</xref>]. Storyboard prototyping can be defined as " . . . a technique designed to generate consensus and closure via a tangi- ble, interactive systems concept. It<marker type="column" number="2"/><marker type="block"/> permits users to participate in the requirements validation process, and it provides an audit trail of the requirements analysis process . . . . The presentation of the interactive storyboard to users and managers is intended to evoke comments and criticisms" [13, p. 39]. As in film production, the use of storyboards in the development of computer systems is a way to 'sketch out' the future system early in the development process. In an effort to verify the requirements, the developer uses nonfunctional mock-ups, a technology dating at least to the 1930s, to illustrate a task-driven view of the proposed system for the user. T h e concept of iteration as a discovery process is the key to prototyping: each successive iteration brings the prototype one step closer to correctly representing the user needs. Delay associated with production of the next version of the storyboard is a source of frustration for storyboard developers. Too much time between user review sessions leads to loss of cognitive m o m e n t u m and can introduce errors to and perpetuate omissions in the development process. Inspired by Scandinavian research into cooperative design [<xref ref-type="bibr" rid="R11" id="14" class="deo:Reference">11</xref>], the thrust of the Cooperative Interactive Storyboarding Prototyping (CISP) approach is to more actively involve users in the prototype interface development. CISP empowers users with tools and techniques encourag- ing them to interactively contribute to real-time, storyboard use, evaluation and modification. Crucial here is the concept of the role of the user changing from reviewer to codeveloper.<marker type="column" number="3"/><marker type="block"/> By drawing the user into the production process itself, CISP seeks to reduce the delays typically associated with the production of the 'next iteration' of the storyhoard. In addition to reducing iteration delay, CISP also provides situations in which users can evaluate the storyboard prototypes u n d e r realistic circumstances and modify them in real time. Hence, the matter is not merely one of speeding up the design process but of creating a situation in which developers can respond to user requests in real time. While the effort described in this article is very much 'work-in-prog- ress,' we have some experience using CISP, having developed a VCR interface and evaluated the efforts of a small group of master's-level students, studying H u m a n - C o m p u t e r Interaction, as they used the interface to complete certain VCR- specific tasks. Preliminary results are promising. When applied to prototyping, the increased, collective, cognitive m o m e n t u m seems to favorably affect the quality of the resulting development efforts.<marker type="block"/> THE CISP-TOOL A large part o f the impetus for this investigation came shortly after we received a new piece of multimedia equipment for the Hypermedia Technologies Laboratory. We antici- pated the unit, the NEC PC-VCR S-VHS videocassette recorder with an RS-232 interface, would be an important tool--augmenting our efforts in the lab to apply hyper- media technologies to the analysis phase of decision making and problem solving. While the unit was tech-<marker type="page" number="2"/><marker type="column" number="1"/><marker type="block"/> nically functional, correctly interfac- ing with the lab's Macintosh TM c o m p u t e r network, the user- c o m p u t e r interface was no better and in some ways worse than the hun- dreds o f other available VCR interfaces, lacking features such as on- screen p r o g r a m m i n g . We decided that anything we could do would be an i m p r o v e m e n t over the c u r r e n t interface and began analyzing user interaction with the existing interface. As part of o u r analysis, we a t t e m p t e d to use scene and overhead cameras, as shown in Figures 1 and 2. Finding the 'talking- out-loud protocol s u p p l e m e n t e d with video images' a p p r o a c h unsuita- ble for eliciting user comments and even d e t e r m i n i n g what buttons were pushed, we began to develop the CISP-Tool with an eye toward creating a solution permitting a general a p p r o a c h to these difficult problems. VCRs have limited interaction modes; most user actions consist o f pushing buttons. Limited interaction modes m a d e it easy to develop a storyboard for this prototype. T h e CISP-Tool is an extension of Apple's H y p e r C a r d TM, offering a series o f features built on top o f the standard H y p e r C a r d capabilities. ( H y p e r C a r d - - b u n d l e d as an extension o f the Macintosh system soft- w a r e - - i s typically described as a multimedia-based personal tool kit offering a scripting language and a UI m e t a p h o r consisting o f buttons and text fields, most commonly represented as 3-by-5 note cards.) By building on H y p e r C a r d we can use external c o m m a n d s and functions to extend possible user interaction modes beyond button p u s h i n g - allowing developers to create fully functional interfaces such as the one we created for the PC-VCR.</region>
      <outsider class="DoCO:TextBox" type="footer" id="18" page="1" column="3">COMMUl41CA√çrlONSOItTHIEACMJune 1993/Vol.36, No.4 S 7</outsider>
      <region class="DoCO:FigureBox" id="F1">
        <caption class="deo:Caption" id="19" page="2" column="1">Figure 1. VideO recording s e t u p and v i e w f r o m scene camera</caption>
      </region>
      <region class="DoCO:FigureBox" id="F2">
        <caption class="deo:Caption" id="20" page="2" column="1">Figure 2. View f r o m o v e r h e a d c a m e r a</caption>
      </region>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="22" page="2" column="1">Interface Development Using Domain-Specific Building Blocks</h1>
        <region class="DoCO:TextChunk" id="51" page="2" column="1">T h e m o r e users can work with famil- iar objects the better they will be able to relate to the d e v e l o p m e n t process. CISP supports collaborative interface d e v e l o p m e n t by permitting the user to combine building blocks m a d e o f domain-specific objects. <xref ref-type="fig" rid="F3" id="23" class="deo:Reference">Figure 3</xref> shows a sample building block, switches used to move between sys-<marker type="page" number="3"/><marker type="block"/> tem states such as "power on/off," "s-vhs on/off," and "record speed fast/slow." T h e lower part of the il- lustration represents the VCR control panel and the upper part represents the VCR display panel. As the switch is turned on and off, the display changes accordingly. Typically, this type of building block is created in HyperCard using multiple button and text fields. CISP permits developers to deal with these separate objects as a single composite object. Switch objects (and others) can be duplicated using a single copy/paste operation and, if necessary, modified afterward. It can be moved around the screen as a unit using keyboard adjuncts. The lower part of Figure 4 represents the VCR control panel, while the upper part represents the VCR display panel. The figure shows two sets of domain-specific building blocks. Users can set the day of the week by clicking the button corre- sponding to the correct day and the display changes accordingly. The time control can be set by first clicking the 'time' button and subsequently clicking the 'up arrow' or the 'down arrow' buttons. Using a single menu selection CISP offers the possibility of altering the display panels and control panel styles. Figure 5 illustrates how the day of the week alternatively can be set by first clicking the 'day' button and subsequently clicking the 'up arrow' or the 'down arrow'. Users and developers can rapidly evaluate the effectiveness of different combinations during design sessions. Again these building blocks were created from collections of buttons and fields--standard HyperCard objects. Additional building blocks of this type can be created with copy/paste and subsequent labeling operations aided by a dialog box. These individual display objects can be manipu- lated as a single object once an initial configuration has been selected. An additional concept illustrated in Figures 4 and 5 is use of the gray shade. Gray shades emulate the use of plastic covers on VCR interfaces used to reduce interface complexity by hiding panels controlling more complex features. Users can reduce<marker type="column" number="3"/><marker type="block"/> clutter by determining how much, if any, of the interface features are "hidden" by the gray shade permitting developers to quickly modify the level of interface complexity. In this way, the CISP-Tool encourages rapid generation and efficient evaluation of a large number of completed, or partially completed, potential design alternatives.<marker type="page" number="4"/><marker type="column" number="1"/><marker type="block"/> Current prototyping tools do not provide much support for system use and evaluation. HyperCard's inher- ent ability to mimic other interfaces makes it an ideal base for adding application-specific functions via externals enabling the creation of evo- lutionary prototypes [<xref ref-type="bibr" rid="R9" id="47" class="deo:Reference">9</xref>]. This allows the user to interact with and evaluate a close surrogate of the system under development in order to quickly 'get a feel' for it. CISP is capable of cap- turing and reproducing user actions as they interact with the storyboard. At the sam(: time it eliminates one of the most glaring defects in our video capture process--identifying the specific buttons the user actually pushed during evaluation sessions. (Button selections were not clear even when user comments were added to tire videotape.) By recording and 'transcribing' actions and permitting 'slow motion' replay of the user interaction, CISP provides users and developers the opportu- nity to play back and evaluate the actual rather than the hypothesized user- system interaction.<marker type="block"/> There were three primary inspira- tions to the development of CISP. Each is discussed in the following paragraph,;. Trillium. Trillium is a computer- based environment for designing interfaces for machines such as copiers and printers [<xref ref-type="bibr" rid="R12" id="50" class="deo:Reference">12</xref>]. We adopted a key Trillium philosophy: reducing the impact of the use-evaluate-modify cycle by offering developers use of an interactive interface construction kit. Trillium is an industrial design environment, while CISP is in the experimental stage. CISP expands the Trillium concept in two direc- tions: first, it seeks to reduce the amount of programming required by substituting direct manipulation techniques, such as clicking, dragging, and copy/paste. Second, Trillium is a tool for software developers. We suggest an expanded role for this kind of tool: to be used by end users working in conjunction with devel-</region>
        <region class="DoCO:FigureBox" id="Fx25">
          <image class="DoCO:Figure" src="62o9.page_002.image_02.png" thmb="62o9.page_002.image_02-thumb.png"/>
        </region>
        <outsider class="DoCO:TextBox" type="footer" id="26" page="2" column="3">S8 June 1993/Vo1.36, No.4COMMUNI¬¢ATIONSOFTHEACM</outsider>
        <region class="DoCO:FigureBox" id="Fx28">
          <image class="DoCO:Figure" src="62o9.page_003.image_03.png" thmb="62o9.page_003.image_03-thumb.png"/>
        </region>
        <region class="unknown" id="29" page="3" column="2">POWER SVHS RECSPEED )N OFF FAS"</region>
        <region class="unknown" id="30" page="3" column="2">POWER VHS REC SPEED ON S SLOW ¬Æ ¬© ¬Æ OFF NO S FAST</region>
        <region class="unknown" id="31" page="3" column="2">F i g u r e 3. ClSP b u i l d i n g b l o c k s</region>
        <region class="unknown" id="32" page="3" column="2">rE1 FE] I-El r--I r--I r--I r--I I ~ l [~l</region>
        <region class="unknown" id="33" page="3" column="2">POWER VHS REC SPEED ON S SLOW ¬Æ O ¬Æ OFF NO S FAST</region>
        <region class="unknown" id="34" page="3" column="2">F i g u r e 4. T w o k i n d s o f i n t e r f a c e b u i l d i n g b l o c k s I POWER )N S OFF VHS REC FAS] SPEED POWER VHS REC SPEED ON S SLOW ¬Æ 0 ¬Æ OFF NO S FAST</region>
        <region class="unknown" id="35" page="3" column="2">II I I</region>
        <region class="unknown" id="36" page="3" column="2">F i g u r e S. A l t e r n a t e means of representing states</region>
        <region class="unknown" id="38" page="3" column="3">8:30:am</region>
        <region class="unknown" id="39" page="3" column="3">C13</region>
        <region class="unknown" id="40" page="3" column="3">8:30:am</region>
        <region class="unknown" id="41" page="3" column="3">F Yl [~l ~</region>
        <region class="unknown" id="42" page="3" column="3">[~i</region>
        <region class="unknown" id="43" page="3" column="3">system interfaces and</region>
        <outsider class="DoCO:TextBox" type="footer" id="44" page="3" column="3">COMMUNICAT|ONSOFTHEACMJtlnc</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="45" page="3" column="3">1993/Vol.36, No.4 S9</outsider>
        <region class="unknown" id="46" page="4" column="1">support For Interface Use, Evaluation and Modification By Users</region>
        <region class="unknown" id="49" page="4" column="1">Related Approaches</region>
        <region class="DoCO:FigureBox" id="Fx52">
          <image class="DoCO:Figure" src="62o9.page_004.image_04.png" thmb="62o9.page_004.image_04-thumb.png"/>
        </region>
        <region class="DoCO:TextChunk" id="53" confidence="possible" page="4" column="2">opers as the requirements for the product are being developed.</region>
        <region class="DoCO:TextChunk" id="65" page="4" column="2">The Scandinavian Approach. In the Scandinavian countries, a long- standing tradition of focusing on end-user's needs and situation requirements emphasizes ideals such as "quality at work" and "workplace democracy" [ <xref ref-type="bibr" rid="R2" id="54" class="deo:Reference">2</xref>]. Research results of the 1980s included such concepts as "creating a design situation with sim- ilarity with the future use situation," "taking practice seriously," and "from h u m a n factors to human ac- tors," (see [<xref ref-type="bibr" rid="R10" id="55" class="deo:Reference">10</xref>, <xref ref-type="bibr" rid="R11" id="56" class="deo:Reference">11</xref>]). Inspired by research such as the U T O P I A project [<xref ref-type="bibr" rid="R4" id="57" class="deo:Reference">4</xref>] and the COOP project, one of the promising paths currently being in- vestigated has end users actively taking part in design by applying a cooperative prototyping approach. According to BCdker and GrCnb~ek, a major obstacle is the developer's limited ability to respond smoothly to user ideas or requests for prototype changes during design sessions [<xref ref-type="bibr" rid="R6" id="58" class="deo:Reference">6</xref>]. Joint, cooperative development of the prototype permits users, as do- main experts/lay developers, and professional developers to each contribute their knowledge to prototype development tasks. Building on cooperative development aspects of the Scandinavian approach, CISP seeks to further explore the potential resulting from combined user/devel- oper abilities to manipulate computerized domain-specific building blocks during prototyping activities. Pietive. Also inspired by the Scandinavian approach, P I C T I V E (Plastic Interface for Collaborative Technology Initiatives through Video Exploration) is a participatory design (PD) technique combining the use of 'low tech' objects with video recording technology to increase end-user participation in system design; improve developers' ability to collect information about the use of the proposed system; and improve the sense of "design ownership" of the final product [14]. Major design components are literally made out of plastic and are thus seen by the users as mal- leable and adaptable. End users pre- pare and participate in job and task scenarios when they use the plastic components to evaluate aspects of<marker type="column" number="3"/><marker type="block"/> the system development. CISP expands two aspects of P I C T I V E : first, offering computerized building blocks to increase active user participation, and second, offering the possibility for users to evaluate use in context of the system being built.<marker type="block"/> Besides facilitated iteration, the CISP approach to interface development involves five specific techniques that function to complement existing prototyping strategies. Each is exam- ined in the following paragraphs.<marker type="block"/> As stated previously, all of the user actions can be recorded, stored, and played back for later discussion between users and developers. This created a more realistic evaluation situation without the need for "think-out-loud" techniques. In- stead, more realistic evaluation sessions permit more accurate assess- ments to be made of user-prototype interaction. Figure 6 shows the storyboard prototype for the NEC PC- VCR created using CISP. T h e u p p e r half of the storyboard represents the display panel and the lower half represents the two panels with the various buttons and switches. T h e third section of the storyboard records the target of each button selection and provides additional space for user/ evaluator comments as described in the previous section. (For more detail see our chapter in [<xref ref-type="bibr" rid="R13" id="64" class="deo:Reference">13</xref>].) Since we chose not to simulate the television monitor, we asked users to perform tasks in which it was not essential. User interaction with the storyboard was evaluated as users attempted specific tasks. Replaying the actions of each user during subsequent analysis permitted the developer to ask questions such as: "I notice that when you were trying to set the clock you clicked twice on the timer b u t t o n - was there some confusion there?" (An enhancement to CISP would involve user ability to add voice an- notations to the storyboard.) T h e results of this analysis helped us to better understand the actual effectiveness of the proposed interface design solutions. Interactive Modification. Because the composite domain-specific build-</region>
        <region class="unknown" id="61" page="4" column="3">The CISP Technique</region>
        <region class="unknown" id="63" page="4" column="3">Realistic Prototype 'Look and Feel'.</region>
        <outsider class="DoCO:TextBox" type="page_nr" id="66" page="4" column="3">60</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="67" page="4" column="3">June 1995/Vol.36, No.4 C O M M U N I C A T I O N S</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="68" page="4" column="3">OF THE ACM</outsider>
        <region class="unknown" id="69" page="5" column="1">3 star' a m</region>
        <region class="unknown" id="70" page="5" column="1">?-I</region>
        <region class="unknown" id="71" page="5" column="1">EP</region>
        <region class="unknown" id="72" page="5" column="1">rec level</region>
        <region class="unknown" id="73" page="5" column="1">0 1 2 3 4 5 6 7 8 9 1 0</region>
        <region class="unknown" id="74" page="5" column="1">time adjust []</region>
        <region class="DoCO:TextChunk" id="75" confidence="possible" page="5" column="1">vcr/tv</region>
        <section class="DoCO:Section">
          <h2 class="DoCO:SectionTitle" id="76" confidence="possible" page="5" column="1">tape remain</h2>
        </section>
        <section class="DoCO:Section">
          <h2 class="DoCO:SectionTitle" id="77" confidence="possible" page="5" column="1">eject</h2>
          <region class="unknown" id="78" page="5" column="1">I-- index--I stereo tape dimmer write erase 1/R/nor simul return prgm check I---II--II--II--II---I [--I ~ catv tv/ [.Jset n P r e - LUpreset I--lauto I-- search-q program I. . . . shift---4 timer rec index time insert dubbing reset r-i I---II---I I--I I--II--I rec mode r qr ] i3E3 3F l r -Zlr,-q F-11 I[ m IN1</region>
          <region class="unknown" id="79" page="5" column="1">User A c t i o n : User A c t i o n #1 : "Line In: S - V i d e o "</region>
          <region class="unknown" id="80" page="5" column="1">Commentary/Notes: User has incorrectly set the Line In Switch to S-Video, while intending to set the S - V H S switch to on. The incorrect action was not corrected during the session and the user did not record the intended program.</region>
        </section>
      </section>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="81" page="5" column="1">Plgure</h1>
        <section class="DoCO:Section">
          <h2 class="DoCO:SectionTitle" id="82" confidence="possible" page="5" column="1">6. NEC PC-VCRinterface layout created using the CISPtool</h2>
          <region class="DoCO:TextChunk" id="92" page="5" column="1">ing block can easily be copied and moved a r o u n d as a single object, CISP enables users and developers to interactively and collaboratively modify the storyboard in real time. This is accomplished by dragging controls and displays to different locations (responding to comments such as "How about if we move that <marker type="column" number="2"/><marker type="block"/> switch over there?"), duplicating existing screen objects ("Can you make this function react like that one?"), and creating new objects ("This function really shouldn't be l u m p e d to- gether with those controls!").<marker type="block"/> A n essential part o f CISP is to generate and c o m p a r e sev-</region>
          <region class="DoCO:FigureBox" id="Fx84">
            <image class="DoCO:Figure" src="62o9.page_005.image_05.png" thmb="62o9.page_005.image_05-thumb.png"/>
          </region>
          <region class="unknown" id="85" page="5" column="2">SU</region>
          <region class="unknown" id="86" page="5" column="2">1 2 : 0 0</region>
          <region class="unknown" id="87" page="5" column="2">0 1 : 0 0 H M</region>
          <region class="unknown" id="88" page="5" column="2">01:30</region>
          <region class="unknown" id="89" page="5" column="2">remote control tape remain edit line-in s-vhs IL o n ~ l ~ t120~ off~s-video~ on~ I R off 2 t160 on video off</region>
          <region class="unknown" id="91" page="5" column="2">Generating and Comparing Design Alternatives.</region>
        </section>
        <section class="DoCO:Section">
          <h2 class="DoCO:SectionTitle" id="93" confidence="possible" page="5" column="3">s-VHS</h2>
          <region class="unknown" id="94" page="5" column="3">S</region>
          <region class="DoCO:TextChunk" id="95" confidence="possible" page="5" column="3">~--program s e t - - I</region>
          <region class="DoCO:TextChunk" id="103" page="5" column="3">eral completed, or partially completed, potential d e v e l o p m e n t solutions, analyzing the trade-offs made in each potential solution. Consider an information display-oriented interface such as a monitoring/report- ing system for a vehicle. Various types o f user evaluation can be conducted to d e t e r m i n e the effectiveness o f alternative display modes d u r i n g user evaluation sessions. A <marker type="page" number="6"/><marker type="column" number="1"/><marker type="block"/> single user ,can interact with a whole series o f d e v e l o p m e n t alternatives and then clhoose the screen display elements p r o d u c i n g the "best" information display. A n o t h e r use o f this facility could be the d e v e l o p m e n t o f a "creativity audit t r a i l " - - a n auto- mated means o f trackifig the way in which new solutions are created without having to i n t e r r u p t the crea- tive process.<marker type="block"/> CISP facilitates the creation o f families o f systems in which all systems share several core components but differ slightly from one a n o t h e r in other respects (consider real-time c o m m a n d and control systems such as those being created for the NASA Space Station F r e e d o m Project). This is accomplished by constructing the storyboard o f c o m m o n composite objects and introducing slight variations. A n o t h e r example could be a real estate multiple-listing system that needs to be customized for each individual county because o f particu- lar local r e p o r t i n g requirements. Systems for counties n e e d i n g specific groups o f information could also be p r o t o t y p e d using this theme and variations approach, having each prototype start 'with the core screen elements and then a d d i n g g r o u p 'X' objects in response to type X requirements, for example. Realistic Interface~Prototypes. By<marker type="column" number="2"/><marker type="block"/> building on the existing H y p e r C a r d / SuperCard strengths, CISP users are able to interact with realistic prototypes and get a feel for the system being developed. This includes the ability to use interface components such as sliders, switches, and o t h e r types o f specialized controls. CISP- Tool can be used to create and evaluate specific UIs, r e s p o n d i n g to conditions such as low light o r presentation o f highly complex information. This a p p r o a c h to prototyping is not u n i q u e - - F i g u r e 7 illustrates a realistic prototype interface for a Hewlett- Packard 12-C calculator created using a 'calculator construction set' and placed on a freeware disk.</region>
          <outsider class="DoCO:TextBox" type="footer" id="97" page="5" column="3">C O M M U N I C A T I O N S 011THIE AlUM June 1993/Vol.36,No.4 6 1</outsider>
          <region class="DoCO:FigureBox" id="F7">
            <caption class="deo:Caption" id="98" confidence="possible" page="6" column="1">Figure 7. A n o t h e r realistic interface p r o t o t y p e</caption>
          </region>
          <region class="unknown" id="100" page="6" column="1">Creation of Families of Systems.</region>
          <region class="DoCO:FigureBox" id="Fx102">
            <image class="DoCO:Figure" src="62o9.page_006.image_06.png" thmb="62o9.page_006.image_06-thumb.png"/>
          </region>
        </section>
      </section>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="104" page="6" column="2">Initial Results/Experiences</h1>
        <region class="DoCO:TextChunk" id="109" page="6" column="2">To evaluate the effectiveness of the CISP approach, we r e p e a t e d the series o f exercises conducted using the 'talking-out-loud protocol, supple- m e n t e d with video images' a p p r o a c h previously mentioned. We evaluated tasks, including several variations o f taping p r o g r a m s and controlling the playback o f taped programs. After this evaluation we decided to ask volunteers to: 1) set the VCR clock to the c u r r e n t time and 2) p r o g r a m the VCR to record a segment from a par- ticular channel. We explained the two tasks to each volunteer, provided a copy o f the o p e r a t i n g manual and left them alone as they a t t e m p t e d to <marker type="column" number="3"/><marker type="block"/> complete the tasks. We evaluated the attempts o f 10 student volunteers from the Masters in Software Systems Engineering p r o g r a m at George Mason University, who j o i n e d us in the H y p e r media Technologies Laboratory for the evaluations. All but one of these students completed the two tasks, the average taking 15 minutes and long- est taking 45 minutes. H a l f of the student volunteers used the docu- mentation supplied with the PC-VCR to aid in task completion. As each student volunteer clicked on buttons, attempting to get the VCR to perform desired operations, the CISP- Tool r e c o r d e d the n a m e o f each button selected by the user. A f t e r completion o f each a t t e m p t we used the CISP-Tool to p r o d u c e a H y p e r C a r d stack capable o f physically r e p r o d u c ing each mouse click. T h a t is, the tool created a H y p e r C a r d stack with a card c o r r e s p o n d i n g to the location o f each mouse click. As we "page" t h r o u g h the stack from card to card, the tool indicates the name and location o f each mouse click. By selecting an additional option, we can have the results o f each individual click per- f o r m e d by the tool. For example, moving from one card to the next would show the student volunteer clicked on the "Time" button and the tool would send the VCR the instruc- tions to react as if someone had p u s h e d the "Time" button on the VCR. This enabled us to recreate and play back the student volunteer's interaction with the VCR interface with the user present, so we could m o r e carefully study the interaction. To analyze user interaction, we used CISP capabilities to play back the solution executed by the user. We asked the users to 'walk us t h r o u g h ' the various keystrokes representing their path t h r o u g h the interface. T h e combination o f the button names presented in context with the a p p r o priate interface response seemed to p r o m p t the m e m o r y o f many users, who were able to describe what they were considering as they tried to complete the tasks. T h e i r comments were r e c o r d e d on a c o m m e n t field provided below the interface shown in Figure 6. For the final third o f each<marker type="page" number="7"/><marker type="column" number="1"/><marker type="block"/> col, the users were shown how to use the CISP-Tool features, permitting them to modify the interface. T h e n they were invited to make any changes they desired to the interface. With assistance from the authors, users r e a r r a n g e d button clusters, a d d e d graphics, eliminated comment fields, and m a d e a n u m b e r o f other modifications to the original NEC interface to the PC-VCR. Analysis of these experiences has permitted us to identify some promise and problems associated with CISP.</region>
        <region class="unknown" id="107" page="6" column="3">proto-</region>
        <outsider class="DoCO:TextBox" type="footer" id="108" page="6" column="3">62 June 1993/Vol.36,No.4 C O M M U N I C A T I O N S OP THE ACM</outsider>
      </section>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="110" page="7" column="1">Promise</h1>
        <region class="DoCO:TextChunk" id="112" page="7" column="1">T h o u g h more effort is n e e d e d to make the domain-specific building blocks, nonetheless a significant work-load savings was achieved by using CISP to create prototype interfaces o f how an improved system might look. T h e effort reduction seems to be particularly applicable to the d e v e l o p m e n t o f families o f systems. For instance, building the switch shown in <xref ref-type="fig" rid="F3" id="111" class="deo:Reference">Figure 3</xref> from scratch requires n u m e r o u s switches between the H y p e r C a r d tools and a n u m b e r o f other actions to make each element separately. O u r envi- r o n m e n t has r e d u c e d this task to a single copy/paste operation. Simi- larly, the ability to move composite objects without the H y p e r C a r d g r o u p i n g tool is a noticeable im- provement. Features such as these make it significantly easier to build and modify multiple development alternatives. Users and developers particularly liked the ability to replay the session for subsequent evaluation. A typical reaction from a user was "(without the replay facility) I wouldn't have been able to give as t h o r o u g h comments."</region>
      </section>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="113" page="7" column="1">Problems</h1>
        <region class="DoCO:TextChunk" id="116" page="7" column="1">Building o u r tool in H y p e r C a r d has provided us with a useful collection o f interface components. But it was difficult to implement some data structures, and missing object- oriented features made it h a r d e r to create and modify domain-specific building blocks. Aggregation o f primitive objects such as buttons and field into composite objects, like switches, has been handled either by naming conventions or use o f the ID <marker type="column" number="2"/><marker type="block"/> numbers automatically assigned to objects by the H y p e r C a r d environment. T h o u g h easy to handle in small scale, the a p p r o a c h could be- come unwieldy if care is not taken d u r i n g the scaling-up process. An- o t h e r problem we have e n c o u n t e r e d is H y p e r C a r d performance. In a complex prototype such as Figure 6, p e r f o r m a n c e was less than desirable on the top o f the line Motorola '030- based CPUs. We believe that while some recoding could speed things up, there is no substitute for faster hardware.</region>
        <region class="DoCO:FigureBox" id="Fx115">
          <image class="DoCO:Figure" src="62o9.page_007.image_07.png" thmb="62o9.page_007.image_07-thumb.png"/>
        </region>
      </section>
      <section class="deo:Conclusion">
        <h1 class="DoCO:SectionTitle" id="117" page="7" column="2">Conclusions</h1>
        <region class="DoCO:TextChunk" id="121" page="7" column="2">We have two primary motivations for increasing the effectiveness of prototyping efforts: 1) to obtain m o r e ac- tive/interactive user participation in the use, evaluation and redevelop- m e n t o f storyboards, and 2) techno- logical tool d e v e l o p m e n t to help shorten the use-redevelop loop used in many storyboarding efforts. In the ideal scenario, users and developers will be able to use the types o f storyboarding tools we have presented in this article to interactively change storyboard elements and immediately try out their changes. We are continuing o u r efforts to en- able users and developers to modify the storyboard while minimizing the a m o u n t o f p r o g r a m m i n g required. Postscript: Recently the makers o f the PC-VCR have ceased production o f the unit for unknown reasons. <marker type="block"/> We would like to thank J o n a t h a n Grudin, Kaj GrCnb~ek, J e n n i f e r Papp, Philip Sage, Kristine T h o m sen, and Randy Trigg for many useful comments on earlier drafts. We would like to thank the participants from the SWSE 632 (UI Development) class who helped us to debug, participated and gave us feedback on this project. T h e article was written d u r i n g Kim Halskov Madsen's stay as a visiting professor at the department o f I n f o r m a t i o n Systems and Software Engineering, George Mason University, d u r i n g the aca- demic year 1990-1991. T h e stay was financially s u p p o r t e d by Knud HCjgaards Fond, Christian og Ottilia Brorsons Rejselegat, Aarhus Univer-<marker type="column" number="3"/><marker type="block"/> sitets Forskningsfond, T h e Danish Research Council (grant n u m b e r 5.26.18.29-1) all D e n m a r k and by George Mason University. Peter Aiken's research was s u p p o r t e d in part by the Virginia Center for Innovative Technology. P.I</region>
        <region class="unknown" id="119" page="7" column="2">Acknowledgments</region>
      </section>
      <section class="DoCO:Bibliography">
        <h1 class="DoCO:SectionTitle" id="122" confidence="possible" page="7" column="3">References</h1>
        <ref-list class="DoCO:BiblioGraphicReferenceList">
          <ref rid="R1" class="deo:BibliographicReference" id="123" confidence="possible" page="7" column="3">1. Andriole, S.J. StoryboardPrototyping:A New Approach to User Requirements Analysis, First ed., QED Information Sciences, Wellsley, Mass., 1989.</ref>
          <ref rid="R2" class="deo:BibliographicReference" id="124" confidence="possible" page="7" column="3">2. Bjerknes, G., Ehn, P. and Kyng, M. Computers and Democracy---A Scandinavian Challenge. Aldershot, Avebury, Great Britain, 1987.</ref>
          <ref rid="R3" class="deo:BibliographicReference" id="125" confidence="possible" page="7" column="3">3. Brooks, F. Grasping reality through illusion--Interactive graphics serving science. In Proceedings: ACM/SIGCHI Conference on Human Factors in Computing Systems (May 1988), pp. 1-10.</ref>
          <ref rid="R4" class="deo:BibliographicReference" id="126" confidence="possible" page="7" column="3">4. BCdker, S., Ehn, P., Kammersgaard, J., Kyng, M. and Sundblad, Y. A Uto- pian Experience: On Design of Powerful Computer-Based Tollsfor graphical workers. In [2].</ref>
          <ref rid="R5" class="deo:BibliographicReference" id="127" confidence="possible" page="7" column="3">5. BCdker, S., and GrCnb~ek, K. Cooperative prototyping: Users and designers in mutual activity. Int. J. Man- Machine Studies 34 (1991).</ref>
          <ref rid="R6" class="deo:BibliographicReference" id="128" confidence="possible" page="7" column="3">6. BCdker, S., Knudsen, J., Kyng, M. and Madsen, K. Computer support for cooperative design. In Proceedings for the Conference on Computer Supported Cooperative Work (Portland Ore., Sept. 26-29, 1988). ACM, New York, 1988, 1981, pp. 377-394.</ref>
          <ref rid="R7" class="deo:BibliographicReference" id="129" confidence="possible" page="7" column="3">7. Connor J., and Shafer, L. Structured Rapid Prototyping. Prentice Hall, 1989.</ref>
          <ref rid="R8" class="deo:BibliographicReference" id="130" confidence="possible" page="7" column="3">8. Curtis, G., and Vertelney, L. Storyboards and sketch prototypes for rapid interface visualization. CHI-90 Tutorial, 1990.</ref>
          <ref rid="R9" class="deo:BibliographicReference" id="131" confidence="possible" page="7" column="3">9. Davis, A. Software Requirements: Analysis and Specification. Prentice-Hall, Englewood Cliffs, N.J., 1990.</ref>
          <ref rid="R10" class="deo:BibliographicReference" id="132" confidence="possible" page="7" column="3">10. Ehn, P. Work-Oriented Design of Computer Artifacts. Lawrence Eartbaum, Hillsdale, N.J., 1989.</ref>
          <ref rid="R11" class="deo:BibliographicReference" id="133" confidence="possible" page="7" column="3">11. Greenbaum, J. and Kyng, M., Eds. Design at Work: Cooperative Design of Computer S y s t e m s . Lawrence Earlbaum, Hillsdale, N.J., 1991.</ref>
          <ref rid="R12" class="deo:BibliographicReference" id="134" confidence="possible" page="7" column="3">12. Henderson, A. The Trillium User Interface Design Environment. In Human Factors in Computing Systems, M. Man- tel and P. Orbeton, Eds. SIGCHI '86 Proceedings, (Apr. 13-17), pp. 221- 227.</ref>
          <ref rid="R13" class="deo:BibliographicReference" id="135" confidence="possible" page="7" column="3">13. Madsen, K. and Aiken, P. Cooperative Interactive Storyboard Prototyping. In Storyboard Prototyping: A New Approach</ref>
        </ref-list>
        <outsider class="DoCO:TextBox" type="footer" id="136" page="7" column="3">¬¢OMMUHOCATIOHSOIITHIEACMJu~c 1993/Vol.36, No,4</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="137" page="7" column="3">63</outsider>
        <outsider class="DoCO:TextBox" type="sidenote" id="138" page="8" column="1">14.</outsider>
        <outsider class="DoCO:TextBox" type="sidenote" id="139" page="8" column="1">15.</outsider>
        <region class="DoCO:TextChunk" id="143" confidence="possible" page="8" column="1">ICTIVE (Plastic Interface for Collaborative TeChnology Initia- r tires through Video Exploration) is a Iow-tech PD technique that has been used on products and research projects [<xref ref-type="bibr" rid="R4" id="140" class="deo:Reference">4</xref>, <xref ref-type="bibr" rid="R5" id="141" class="deo:Reference">5</xref>, <xref ref-type="bibr" rid="R7" id="142" class="deo:Reference">7</xref>]. PICTIVE was a response to t w o PD trends: rapid prototyping and the Scandinavian mock-up approaches. Unlike rapid prototyping, PICTIVE does not involve a technology environment for design activity (e.g., Halskov, Madsen and Aiken, this issue). In rapid prototyping, the users often must express their ideas through an intermediary--the developer</region>
        <region class="DoCO:TextChunk" id="144" confidence="possible" page="8" column="1">CR Categories and Subject Descrip- tors: D.2.2 [Software]: Software Engi- neering--Tools and Techniques; K.6.1 [Management of Computing and Information Systems]: Project and People Management</region>
        <outsider class="DoCO:TextBox" type="sidenote" id="145" page="8" column="1">tors</outsider>
        <outsider class="DoCO:TextBox" type="sidenote" id="146" page="8" column="1">tion sity,</outsider>
        <outsider class="DoCO:TextBox" type="sidenote" id="147" page="8" column="1">DK</outsider>
        <region class="DoCO:TextChunk" id="149" confidence="possible" page="8" column="1">About the Authors: KIM HALSKOV MADSEN is an associate professor in the department of Informa- and Media Science at Aarhus Univer- Denmark. Current research interests include PD, object-oriented design, tailorability, and metaphorical design. Author's Present Address: Aarhus University, Information and Media Science, 8230 Aarhus N, Denmark; email: <email id="148">halskov@daimi.aau.dk</email></region>
        <outsider class="DoCO:TextBox" type="sidenote" id="150" page="8" column="1">sity,</outsider>
        <region class="DoCO:TextChunk" id="152" confidence="possible" page="8" column="1">PETER H. AIKEN is the director of the Hypermedia Technologies Laboratory at George Mason University. Current research includes application of hyper- media-based tools and techniques to the process of software requirements engi- neering and the applications involving multimedia-based support for group decision making. Author's Present Address: ST2-430 George Mason Univer- Fairfax, VA 22043-4444; email: <email id="151">paiken@gmuvax2.gmu.edu</email></region>
        <outsider class="DoCO:TextBox" type="sidenote" id="153" page="8" column="1">is</outsider>
        <outsider class="DoCO:TextBox" type="sidenote" id="154" page="8" column="1">to</outsider>
        <region class="unknown" id="160" page="8" column="1">About PETER CR to Categories the User H. Authors: AIKEN Requirements and is the Subject director Analysis, Descrip- of SJ. the tors: KIM Hypermedia Andriole, HALSKOV D.2.2 [Software]: Technologies Ed. MADSEN Second Software ed., Laboratory is an 1991. associate Engi- at neering--Tools professor George Mason in the department University. and Techniques; Current of Informa- K.6.1 re- "Equal O p p o r t u n i t y " ICTIVE (Plastic Interface for [Management search Muller, and includes Media M. of Science PICTIVE--Exploration Computing application at Aarhus and of Univer- hyper- Infor- Collaborative TeChnology Initia- mation media-based in Denmark. participatory Systems]: tools Current and Project design. techniques research and In [15] interests People to pp. the PD Using PICTIVE r tires through Video Explora- Management include process 225-231, of PD, software 1991. object-oriented requirements design, engi- Michael J. Muller tion) is a Iow-tech PD technique that has tailorability, neering and and the applications metaphorical involving design. USER INTERFACE P R O D U C T RESEARCH been used on products and research Author's multimedia-based Present Address: support for Aarhus group Uni- de- US WEST ADVANCED T E C H N O L O G I E S versity, cision Robertson, making. Information S., Author's Olson, and S., Media and Present Olson,J., Science, Ad- BOULDER, COLO. projects [<xref ref-type="bibr" rid="R4" id="155" class="deo:Reference">4</xref>, <xref ref-type="bibr" rid="R5" id="156" class="deo:Reference">5</xref>, <xref ref-type="bibr" rid="R7" id="157" class="deo:Reference">7</xref>]. dress: Eds. 8230 ST2-430 Reaching Aarhus George through N, Denmark; Mason technology. Univer- email: Daniel M. Wildman PICTIVE was a response to t w o PD <email id="158">halskov@daimi.aau.dk</email> In Fairfax, Proceedings VA of CHI 22043-4444; "91 (New email: Orle- USABILITY ANALYSIS trends: rapid prototyping and the Scan- <email id="159">paiken@gmuvax2.gmu.edu</email> ans), Addison-Wesley, Reading, BELLCORE, dinavian mock-up approaches. Unlike PI SC ATAWAY, NJ. Mass., 1:t91. rapid prototyping, PICTIVE does not in- Ellen A. White volve a technology environment for de- USABILITY ENGINEERING AND TECHNOLOGY sign activity (e.g., Halskov, Madsen and BELLCORE P I SCATAWAY, N.J. Aiken, this issue). In rapid prototyping, the users often must express their ideas through an intermediary--the developer General Terms: Design, H u m a n Fac- Graphic Facilitation Darlene Crane Additional Key Words a n d Phrases: CRANE C O N S U L T I N G BERKELEY, CALIF. CSCW s not done in procedures manuals or workfiow charts. work with movement, sound, thought, words, and some- ~ion in living color. Graphic facilitation, a conceptual analysis m e t h o d o l o g y used for 10 years, captures important and meaningful elements of work from the worker viewpoint. This technique is meant to be used with Other more structured techniques. These visual working sessions give designers a record of work in a few days. The raw data from these sessions have enabled product designers to produce system designs in a few weeks. Graphic facilitation sessions work this way: The facilitator plans the working sessions with key people in the design team and work group. They develop a working session plan, outlining group process and graphic formats. The physi- cal site for the working sessions is set up in advance with butcher paper panels about 8- to 10-feet long and 4-feet high taped to the walls. Lots of colored pens are placed around the room. Technology can be used for recording, but tends to distract from group interaction. During the session, the facilitator's role is to guide the workers in exploring their project. Freeform storyboards are usually the first step. The workers are encouraged to tell the "story" of their work in their own words. The key people, procedural steps, important systems support functions, feelings and stresses are recorded. The graphic facilitator asks questions and encourages the workers to talk. Simultaneously, the facilitator or a separate recorder captures the story on the walls covered with paper in simple images, shapes, key words and phrases. The facilitator and recorder DO NOT change the words of the workers or editorialize. Later steps in the session plan will clarify and analyze information necessary to design new technology systems and the corre- sponding organizational improvements. What do designers get from having w o r k illustrated graphically? ‚Ä¢ A selective record about work. Video tapes and lengthy interviews sometimes provide so much data, key concerns of workers can be missed. Storyboards, wall paintings and other graphics help workers focus on the essential ele- Permission to copy without fee all or part of ments of the work process. this materia2~ is granted provided that the For example, a team was lost in the redesign of a complex front-end trans- copies are net made or distributed for direct action-processing system. The central design theme of the system was identi- commercial :advantage, the ACM copyright notice and the title of the publication and its fied when a worker finally said in a session, "All I want to know is the source date appear, and notice is given that copying of any errorsY' The system was redesigned to focus on preventing and isolat- by permission of the Association for ing errors rather than cranking out reports. Computing Machinery. To copy otherwise, or ‚Ä¢ Encourages long-term memory o f important elements o f work without cum- republish= requires a fee and/or specific bersome written documents. Workshop participants remember even detailed permission. content of the sessions because the graphic records are in color and large (usually 4- by 8 feet.) Participants in sessions can readily recall what happened ¬©ACM0002-0782/93/0600-057 $1.50</region>
        <region class="DoCO:FigureBox" id="Fx161">
          <image class="DoCO:Figure" src="62o9.page_008.image_08.png" thmb="62o9.page_008.image_08-thumb.png"/>
        </region>
        <outsider class="DoCO:TextBox" type="page_nr" id="162" page="8" column="3">64</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="163" page="8" column="3">June 1993/Vol.36, No.4 C O M M U N I C A T I O N S OF THE ACM</outsider>
      </section>
    </body>
  </article>
</pdfx>

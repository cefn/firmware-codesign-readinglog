<?xml version='1.0' encoding='UTF-8'?>
<pdfx xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://pdfx.cs.man.ac.uk/static/article-schema.xsd">
  <meta>
    <job>318ef9ef69ad1d79c0875d89e4d3a84bfbdd89cd9359cab23f2ed82b1ddfaced</job>
    <base_name>62ex</base_name>
    <doi>http://dx.doi.org/10.1109/vlhcc.2008.4639081</doi>
  </meta>
  <article>
    <front class="DoCO:FrontMatter">
      <outsider class="DoCO:TextBox" type="header" id="1">2008 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)</outsider>
      <title-group>
        <article-title class="DoCO:Title" id="2">How Designers Design and Program Interactive Behaviors</article-title>
      </title-group>
      <contrib-group class="DoCO:ListOfAuthors">
        <contrib contrib-type="author">
          <name id="3">Brad Myers</name>
        </contrib>
        <contrib contrib-type="author">
          <name id="4">Sun Young Park</name>
        </contrib>
        <contrib contrib-type="author">
          <name id="5">Yoko Nakano</name>
        </contrib>
        <contrib contrib-type="author">
          <name id="6">Greg Mueller</name>
        </contrib>
        <contrib contrib-type="author">
          <name id="7">Andrew Ko</name>
        </contrib>
      </contrib-group>
      <region class="unknown" id="13">Human Computer Interaction Institute; *School of Design Carnegie Mellon University <email id="8">bam@cs.cmu.edu</email>; <email id="9">sunyoun1@andrew.cmu.edu</email>; <email id="10">yokonakano@alumni.cmu.edu</email>; <email id="11">gmueller@andrew.cmu.edu</email>; <email id="12">ajko@cs.cmu.edu</email></region>
      <abstract class="DoCO:Abstract" id="14">Designers are skilled at sketching and prototyping the look of interfaces, but to explore various behaviors (what the interface does in response to input) typically requires programming using Javascript, ActionScript for Flash, or other languages. In our survey of 259 designers, 86% reported that the behavior is more difficult to prototype than the appearance. Often (78% of the time), designing the behavior requires collaborat- ing with developers, but 76% of designers reported that communicating the behavior to developers was more difficult than the appearance. Other results include that annotations such as arrows and paragraphs of text are used on top of sketches and storyboards to explain behaviors, and designers want to explore multiple versions of behaviors, but today’s tools make this difficult. The results provide new ideas for future tools.</abstract>
    </front>
    <body class="DoCO:BodyMatter">
      <section class="deo:Introduction">
        <h1 class="DoCO:SectionTitle" id="15" page="1" column="1">1. Introduction</h1>
      </section>
      <region class="DoCO:TextChunk" id="34" page="1" column="1">Designing user interfaces differs from designing static pages and movies in that user interfaces involve interactivity. Users click on buttons and links, fill in fields, directly manipulate graphical objects, and thereby control the results in a variety of ways. There have been many previous studies of the processes, techniques and tools that are used by designers, but none have focused on how the interactive behavior of the interface is created and communicated. Creating the behaviors inherently deals with programming concepts, such as conditionality (e.g., behaviors that only happen if the user interface is in a certain mode), and abstrac- tion (e.g., a behavior should happen when users click on any object of a particular type). Designers can be classified as end-user programmers (EUP), since they do not write programs as a primary goal, but rather in support of designing a web page or an animation [ <xref ref-type="bibr" rid="R12" id="16" class="deo:Reference">12</xref>, <xref ref-type="bibr" rid="R13" id="17" class="deo:Reference">13</xref>]. The tools that have been made for designers either focus on the static design (such as Photoshop or Illustrator), provide only limited interactivity such as rollovers and pages changes for web pages (such as in Dreamweaver), or are based on conventional languages and tools aimed at professional programmers (for example, the ActionScript language in Flash is basically<marker type="column" number="2"/><marker type="block"/> Javascript). Our intuition was that none of these ap- proaches was meeting the needs of designers. To evaluate our intuition, we conducted field studies of 13 designers, followed by a web-based survey, which received 259 responses, to investigate the design and programming of interactive behaviors. We particu- larly focused on people who are trained and work on interaction design, graphics design, information archi- tecture, experience design, visual design, user interface design, or equivalent. In our survey, we defined a behavior as:<marker type="block"/> Since these behaviors happen in response to user inputs in the target applications, we classify them as interactive behaviors. In this paper, we use behaviors and interactive behaviors interchangeably. Many of our findings confirmed what others have reported in previous surveys (e.g., [<xref ref-type="bibr" rid="R4" id="23" class="deo:Reference">4</xref>, <xref ref-type="bibr" rid="R6" id="24" class="deo:Reference">6</xref>, <xref ref-type="bibr" rid="R14" id="25" class="deo:Reference">14</xref>, <xref ref-type="bibr" rid="R18" id="26" class="deo:Reference">18</xref>]), for example that designers prefer to start by sketching (about 97% in our survey), and most designers (88%) also use storyboards. However, we did find five interesting new results that have not been previously reported:<marker type="page" number="2"/><marker type="column" number="1"/><marker type="block"/> 1. By a large margin, the participants in our survey agreed that programming the behaviors is more difficult than designing the appearance. 2. The behaviors that the designers wanted were quite complex and diverse, beyond what could plausibly be provided by a system that provided only a few built-in behaviors or a selection of predefined widgets, and therefore seemingly requires full programming capabilities. 3. Sketches and storyboards cannot adequately convey the behaviors by themselves, so designers must augment them with annotations such as arrows and many textual descriptions of the desired behaviors (see <xref ref-type="fig" rid="F1" id="30" class="deo:Reference">Figure 1</xref>). 4. The purpose of implementing the interactive behaviors, and for annotating pictures, is often primarily to serve as documentation and specifications for others. Almost all designers worked in teams, and communicating with others is a key part of their jobs. Communicating the design of behaviors to developers was reported to be more difficult than the appearance by 76% of the designers in our study. 5. As reported for other kinds of design [<xref ref-type="bibr" rid="R4" id="31" class="deo:Reference">4</xref>, <xref ref-type="bibr" rid="R9" id="32" class="deo:Reference">9</xref>, <xref ref-type="bibr" rid="R17" id="33" class="deo:Reference">17</xref>], the designers in our survey agreed that the design of interactive behaviors emerge through the process of exploration. In other words, designers do not have a final conception of the behavior before they start. However, whereas iterating on the look of the interface can be easily done by sketching, designers felt it difficult to iterate on the behavior. Today’s authoring tools make it difficult or impossible to compare two implementations of behaviors side-by- side, and even keeping around and reverting to old versions of code is difficult.</region>
      <region class="DoCO:FigureBox" id="F1">
        <image class="DoCO:Figure" src="62ex.page_001.image_01.png" thmb="62ex.page_001.image_01-thumb.png"/>
        <caption class="deo:Caption" id="20" page="1" column="2">Figure 1: Sketches by a contextual inquiry participant showing two different options being investigated for an interaction, with lines and textual annotations to explain what is intended.</caption>
      </region>
      <region class="unknown" id="22" page="1" column="2">“...anything that an application does. If you think of “look and feel,” we are mainly focusing on the “feel.” Another way to look at it is that we are focusing on what you cannot draw in Photoshop, but instead need to describe in other ways, such as using storyboards, code, etc. Or, if you were developing in Flash or Director, the behavior would be anything that required using the time- line or scripting.”</region>
      <outsider class="DoCO:TextBox" type="footer" id="28" page="1" column="2">1-4244-2528-0/08/$25.00 ©2008 IEEE</outsider>
      <outsider class="DoCO:TextBox" type="page_nr" id="29" page="1" column="2">177</outsider>
      <section class="deo:RelatedWork">
        <h1 class="DoCO:SectionTitle" id="35" page="2" column="1">2. Related Work</h1>
        <region class="DoCO:TextChunk" id="53" page="2" column="1">It is well known that designers prefer sketching for early phases of design [ <xref ref-type="bibr" rid="R4" id="36" class="deo:Reference">4</xref>, <xref ref-type="bibr" rid="R14" id="37" class="deo:Reference">14</xref>, <xref ref-type="bibr" rid="R18" id="38" class="deo:Reference">18</xref>]. Bill Buxton has de- voted an entire book to this subject [<xref ref-type="bibr" rid="R4" id="39" class="deo:Reference">4</xref>], which makes clear that sketching is an important technique for determining what should be designed, as well as for determining what the design should be. However, that book says little about determining the behavior of the designs, devoting only one page to interaction design. It gives some requirements for sketching behaviors, without any hint of how to achieve them [4, p. 136]. A recent survey of 370 practitioners, both designers and developers, reported that “evolutionary prototyp- ing” was the most common development process [<xref ref-type="bibr" rid="R5" id="40" class="deo:Reference">5</xref>]. Tools used included paper and pencil, whiteboards, html editing, analysis and modeling tools, visual interface builders, etc. Other studies have looked at designers for particular domains, such as web authoring and<marker type="column" number="2"/><marker type="block"/> animation. A study of 11 designers showed extensive use of informal tools in the early design phases of web sites [<xref ref-type="bibr" rid="R14" id="42" class="deo:Reference">14</xref>]. None of these designers were involved in the programming of the final version of the web sites. To collaborate with developers, they used site maps, storyboards, annotations on top of sketches, and detailed Photoshop renderings. This study did not differentiate difficulties that designers had with the appearance from the behaviors. A later study of 334 web developers who did not have professional training in programming showed that the collaborative group in which the developers worked was a greater contributor to their successes and failures than the tools they used [<xref ref-type="bibr" rid="R15" id="43" class="deo:Reference">15</xref>]. Virtually all of the participants taught themselves at least some of the programming skills they needed, and they often wanted to use behaviors that they could not successfully implement. Other surveys have looked at designers of animation and multimedia. One study interviewed 7 animators and 8 non-animators [<xref ref-type="bibr" rid="R6" id="44" class="deo:Reference">6</xref>]. About half of the animators used paper sketching and storyboards before switching to digital tools. Another study interviewed 12 and surveyed 13 professional multimedia designers [<xref ref-type="bibr" rid="R2" id="45" class="deo:Reference">2</xref>], and showed that a script was often the first thing created for multimedia, which is not an artifact mentioned for creating other types of design. The participants rated scripts, storyboards, sketching, and prototypes as important, but inadequate to relate important aspects of the dynamic aspects such as interactivity or timing. Many people have created tools to help designers with sketching and authoring behaviors, often informed by the studies mentioned above. For example, tools for early design focused on use by designers who are not programmers include SILK [<xref ref-type="bibr" rid="R11" id="46" class="deo:Reference">11</xref>], Electronic Cocktail Napkin [<xref ref-type="bibr" rid="R8" id="47" class="deo:Reference">8</xref>], DENIM [<xref ref-type="bibr" rid="R14" id="48" class="deo:Reference">14</xref>], SketchWizard [<xref ref-type="bibr" rid="R7" id="49" class="deo:Reference">7</xref>], DEMAIS [<xref ref-type="bibr" rid="R2" id="50" class="deo:Reference">2</xref>], Designer’s Outpost [<xref ref-type="bibr" rid="R10" id="51" class="deo:Reference">10</xref>], and many others. However, these tools mainly provide a limited fixed set of behaviors and are focused on particular domains. The upcoming Adobe Thermo product provides a menu of 19 behaviors that can be applied to graphics [<xref ref-type="bibr" rid="R1" id="52" class="deo:Reference">1</xref>].</region>
      </section>
      <section class="deo:Methods">
        <h1 class="DoCO:SectionTitle" id="54" page="2" column="2">3. Method</h1>
        <region class="DoCO:TextChunk" id="58" page="2" column="2">Our first study used the Contextual Inquiry (CI) me- thodology [ <xref ref-type="bibr" rid="R3" id="55" class="deo:Reference">3</xref>] with 13 participants. CIs involve observ- ing and interviewing participants while they are in the process of working in their natural work environments to understand their practices and problems. For this study, we employed retrospective and artifact walk- throughs to investigate transitory work processes that would have been too time-consuming and impractical to study using the traditional CI method. We asked participants to “walk through” their recent projects involving interactivity using the resulting artifacts.<marker type="page" number="3"/><marker type="column" number="1"/><marker type="block"/> Each CI took about 90 minutes, and participants were not compensated. We then assessed the generalizabity of the CI data using a widely distributed survey. We sent requests to fill out the survey to our alumni mailing lists, to CHI- Announcements, CHI-RESOURCES, and the Interaction Design Association (IxDA) mailing list. We received 259 responses, of which 203 (78%) completed all 47 questions. The complete survey took about 30 minutes to finish. The survey participants were entered into a raffle for five $25 gift certificates. To encourage respondents to answer the essay questions, we doubled the odds for those who filled them out completely, which worked pretty well – about 40% of the participants wrote comments in all of the fields.</region>
        <outsider class="DoCO:TextBox" type="page_nr" id="57" page="2" column="2">178</outsider>
      </section>
      <section class="deo:Results">
        <h1 class="DoCO:SectionTitle" id="59" page="3" column="1">4. Results</h1>
        <region class="DoCO:TextChunk" id="60" page="3" column="1">Across both studies, there seemed to be a high inter- est in this topic, and participants seemed very willing to help. Many said they were hopeful that there would eventually be interesting new tools as a result. After presenting the demographics and tool use of the participants, we then describe our five most interesting findings.</region>
        <section class="DoCO:Section">
          <h2 class="DoCO:SectionTitle" id="61" page="3" column="1">4.1. Demographics and Tool Use</h2>
          <region class="DoCO:TextChunk" id="64" page="3" column="1">The participants in both studies had a wide variety of backgrounds and degrees. The CI participants were university faculty, a Flash instructor, master’s students, and professional designers. Of the professionals, most worked as consultants, but one was an in-house designer for a small company. Most participants in the survey (about 45%) had a Masters degree, with 31% having a bachelor’s as their highest degree. The area of the degree varied widely, and included psychology, human factors, anthropology, English, computer science, engineering, HCI, and many others. A few (17%) had a CS degree, although 63% of them also had one or more degrees in the other areas mentioned. Regarding work related experience, 9% had more than 20 years, 26% had 11-12 years, 36% had 6-10 years, 27% had 1-5 years, and 2% had less than one year. Many worked in a design department of a company that consulted on various products (about 25%) or worked directly in a product division (24%). About 21% worked for a design consultancy (a company that mostly consults with other companies), and about 13% worked alone. Many of the rest worked in universities and did design consultancy on the side. 60% worked for companies bigger than 100 people. About 55% spent most their time on websites, 9% on desktop applications, and 1% on phones. <marker type="column" number="2"/><marker type="block"/> Their job titles at work included Interaction Designer (32%), User Interface Designer (20%), Information Architect (12%), and many others. About 6% were managers of groups that included designers. In terms of their tool use and expertise, we saw that designers use a wide variety of tools, depending on the stage of the design process and their skills. For ideation sketches, all of our CI participants used paper and whiteboards. In the more collaborative work settings, ease of use and ability to combine parts created by different people determined which tool to use. In one company, PowerPoint was used since everyone could share the results, although the designer complained that updating changes was a hassle, since they are not re- flected in all of the files. In our survey, we saw a wide variety of tools mentioned. <xref ref-type="fig" rid="F2" id="63" class="deo:Reference">Figure 2</xref> shows the tools participants use often. Because the CI participants mentioned annoyance with differences in the user interfaces among all the tools they use, we asked about this on the survey. For the statement, “I find the differences in how different tools work to be frustrating,” 18% of the participants in the survey strongly agreed, 42% agreed (totaling 60%), with only 6% strongly disagreeing and 14% disagreeing (totaling 20%), with the rest (20%) neutral. Photoshop 83% Dreamweaver 66% PowerPoint (for mocking up interfaces) 54% Illustrator 52% Flash 43% Visio 37% InDesign 25% Omnigraffle 23% VisualStudio 19% Fireworks 17% Director 13% Frontpage 12% AfterEffects 10% Axure 8% Flex 6% GoLive 6% Microsoft Expression Blend 4% 0% 10% 20% 30% 40% 50% 60% 70% 80% 90% 100 %</region>
          <region class="DoCO:FigureBox" id="F2">
            <caption class="deo:Caption" id="65" page="3" column="2">Figure 2: Percent of participants in survey that use each tool at least often (N=259)</caption>
          </region>
        </section>
        <section class="DoCO:Section">
          <h2 class="DoCO:SectionTitle" id="66" page="3" column="2">4.2. Programming Behaviors is Difficult</h2>
          <region class="DoCO:TextChunk" id="72" page="3" column="2">Our CIs suggested that designers have more difficulty programming interactive behaviors (feel) compared to the appearance (look). Designing the behaviors was reported to be an ongoing process while designing appearance is a simpler process of creating a single static image. Behaviors were said to often re- <marker type="page" number="4"/><marker type="column" number="1"/><marker type="block"/> main ill-defined until the application is actually implemented. These results were supported by the survey, where 86% of the participants listed behavior as more difficult to prototype than appearance (see <xref ref-type="fig" rid="F3" id="69" class="deo:Reference">Figure 3</xref>). 91% of participants with CS degrees answered that the “Be- havior” was harder, compared to 84% of participants without a CS degree. We asked participants how they divided their time between the behavior and the appearance, and the results ranged from 0% to 100% for each. Participants reported spending significantly more time on behavior (t=6.8, p &lt; .0001). The two distributions for appearance and behavior were normally distributed. The mean per- cent of time (with the standard deviation) spent on the appearance was 39% (± 21), compared to 61% (± 21) for behavior.<marker type="block"/> Behavior 86% Appearance 14% 0% 20% 40% 60% 80% 100% <xref ref-type="fig" rid="F3" id="71" class="deo:Reference">Figure 3</xref>: “Regarding Appearance versus Behavior, which is more difficult to prototype?” To explore the source of difficulties with behaviors, we first wanted to understand how the participants were programming. When asked on the survey, “Is programming (also called ‘scripting’) a regular part of your job?” 63% answered “no.” Interestingly, of the people who had a CS degree, 51% still answered “no,” and for people without a CS degree, 65% answered “no.” However, about 79% said they were good or ex- pert with HTML, and 95% knew some other programming language at least to the level that they “can do a few things.” Many programming languages and tools were mentioned, including (in decreasing order of pop- ularity) Javascript, PHP, ActionScript for Flash, Vi- sualBasic, Java, C++, Lingo for Director, .Net, C#, Ruby on Rails, CSS, “Processing” (from www.processing.org), Perl, Cocoa &amp; Objective C, Py- thon, XML, ASP, MAX/MSP, SQL, and a few others. When participants in the survey had trouble under- standing how to implement something, they usually “use Google or another search engine to search for ex- amples” (91% do this “at least sometimes”). All of the other options we listed were also popular: “I go to on- line tutorials or on-line documentation” (90%), “I look for examples in code that I have around” (89%), “I ask a colleague how to do it” (81%), and “I go to the ma- nual or books and look it up” (80%). Participants gave a variety of reason for why behaviors were more difficult to prototype. Here are some categories of problems and supporting quotes:</region>
          <outsider class="DoCO:TextBox" type="page_nr" id="68" page="3" column="2">179</outsider>
          <region class="DoCO:TextChunk" id="73" confidence="possible" page="4" column="2">• Interactions must be specified at a low-level of detail: o “Details are important, and you never have them all until full implementation.” o “There are so many factors that can influence the behavior. It isn’t a controlled event and [it’s] very difficult to communicate the entire experience via a prototype. o “Because of the many different states that must be demonstrated and their dependence on different conditions preceding those states.” o “It’s more complex with more variables and con- straints attached. There are also more stakehold- ers and coworkers involved” o “It’s harder for people to fill in the gaps with im- agination. Small changes make big differences in experiential outcomes so if something is not quite right it can cloud whole thing.” o “There’s no such thing as low-fidelity interaction, it has to be right.” • Difficulty with today’s tools: o “I work in mobile, so often I have to wait until developers have something working before I can actually test out how a new behavior ‘feels’ on a phone. What it looks like is easy to test by just putting a picture of the mockup onto the phone.” o “Current tools for defining behavior suck.” o “I can represent very exactly the desired appearance. However, I can only approximate the backend behaviors.” • The richness of the interactions themselves (see next section).</region>
        </section>
        <section class="DoCO:Section">
          <h2 class="DoCO:SectionTitle" id="74" page="4" column="2">4.3. Desired Behaviors are Complex</h2>
          <region class="DoCO:TextChunk" id="83" page="4" column="2">A goal of some prior research systems and commercial tools has been to make it easier to investigate interactive behaviors (e.g., [ <xref ref-type="bibr" rid="R1" id="75" class="deo:Reference">1</xref>, <xref ref-type="bibr" rid="R2" id="76" class="deo:Reference">2</xref>, <xref ref-type="bibr" rid="R7" id="77" class="deo:Reference">7</xref>, <xref ref-type="bibr" rid="R11" id="78" class="deo:Reference">11</xref>, <xref ref-type="bibr" rid="R14" id="79" class="deo:Reference">14</xref>]), usually by simplifying the kinds of behaviors that can be expressed. This is in conflict with the wide variety of behaviors we saw in our investigation. For example, in our CIs, participants were creating interfaces that use 3D rotation, physical simulations of dominos falling onto each other, interactions among graphical objects on the screen such as bouncing off each other, graphics that changed based on various sensors, novel physical devices, etc. In the survey, we asked for ideas of what a future tool should support, and participants requested many things, including “character animation (using jointed inverse kinematics),” support for “more dynamic content, like AJAX,” “database or CMS integration; for example, showing different content to different users based on business rules,” “data-driven interactions,” “ability to create RIA functionality” (Rich Internet<marker type="page" number="5"/><marker type="column" number="1"/><marker type="block"/> Applications – web applications that act like traditional desktop applications), and “ease of ... connect[ing] to live data sources.” 55% of the participants said that they had had an interactive behavior they wanted to explore on paper but could not, and therefore had to explore by implementing it. We asked them to describe what they wanted to do, and participants listed 107 behaviors. Here are some representative quotes: • “Rich interactions, such as a sliding dock or an object that can be dragged and dropped. These are hard to illustrate in static documents.” • “Interactive maps” • “Camera interaction.” • “Complex transitions / animations.” • “Synchronised behaviours.” • “Issues around scrolling long pages.” • “A button that changes color to draw attention to itself.” • “Window/panel transparency within the OS and various applications.” • “Dynamic navigation systems (e.g. accordion menus), 3D or graphical navigational systems.” • “Mobile interaction.” • “More advanced interactions like drag-and-drop, column sorting, resizing on rollover, etc.” • “Hover effect on a graphic, that when clicked, also selected a visible tab.” • “Detailed keyboard-level interactions.” • “Interactive art - engaging experiences.” • “User experience of interaction with graphs.” • “The exact timing of certain interactions.” • “An animated ‘lens effect’ list UI.” • “Gaming behaviour.” • “Multi-dimensional selections that impact the dis- play of other controls and data.” • “Dynamic layout based on user preferences.”</region>
          <outsider class="DoCO:TextBox" type="page_nr" id="81" page="4" column="2">180</outsider>
          <region class="DoCO:FigureBox" id="Fx82">
            <image class="DoCO:Figure" src="62ex.page_005.image_04.png" thmb="62ex.page_005.image_04-thumb.png"/>
          </region>
        </section>
        <section class="DoCO:Section">
          <h2 class="DoCO:SectionTitle" id="84" page="5" column="1">4.5. Purpose is Communication 4.4. Annotating Sketches and Storyboards</h2>
          <region class="DoCO:TextChunk" id="107" page="5" column="1">Consistent with previous studies (e.g., [ <xref ref-type="bibr" rid="R14" id="85" class="deo:Reference">14</xref>]), we found that virtually all of our participants used sketches and storyboards as part of their work (see <xref ref-type="fig" rid="F4" id="86" class="deo:Reference">Figure 4</xref>). However, participants also agreed that sketches and storyboards were not sufficient for exploring interactive behaviors, consistent with previous studies (e.g., [<xref ref-type="bibr" rid="R2" id="87" class="deo:Reference">2</xref>, <xref ref-type="bibr" rid="R4" id="88" class="deo:Reference">4</xref>]). We observed during our CIs that designers ex- tensively use annotations on sketches, storyboards, wireframes, and formal design documents to describe the behaviors (see <xref ref-type="fig" rid="F1" id="89" class="deo:Reference">Figure 1</xref> and <xref ref-type="fig" rid="F6" id="90" class="deo:Reference">Figure 6</xref>). The kinds of annotations we observed included labels, arrows, and narrative textual descriptions. Our survey confirmed that annotations are important to designers, used by 97% at least sometimes (see Fig-<marker type="column" number="2"/><marker type="block"/> ure 5); 88% used storyboards. In the comments on this question, one participant emphasized: “[I] SCAN my drawings to PDF and combine with design notes: I NEED to TYPE and SKETCH on the same paper.” Another said: “Word is probably our most important tool because the text support allows us to easily describe UI behavior in great detail and everyone can open the file and edit it if needed... However, format- ting in Word is a huge pain.”<marker type="block"/> Our CIs suggested that a primary job of the designer is to collaborate with a developer and communicate their designs. Most participants preferred to work face- to-face, but often their final deliverable would be a detailed design document to hand off to the developer. These documents typically use many paragraphs of text and description of details around the pictures to explain the behaviors (see, for example, <xref ref-type="fig" rid="F6" id="98" class="deo:Reference">Figure 6</xref>). After deli- vering the documents, the designers would assume more of a support role, clarifying designs to developers as they implemented them. The CI participants emphasized that they considered the detailed design document to be an important deliverable, and they spent significant time making sure it was clear and looked polished. The behaviors were reported to be more difficult to<marker type="page" number="6"/><marker type="column" number="1"/><marker type="block"/> communicate because people can imagine the final detailed appearance even from a vague sketch; howev- er, it is very hard to communicate behavior and to get a sense of the final version from a prototype.<marker type="block"/> These findings were confirmed by the survey. On the participant’s “current or most recent project,” 91% said they were working as part of a team, which usually (78% of the time) included a developer. The designers usually (37%) met with developers “multiple times throughout the week”, “work side-by-side” (18%), or “meet multiple times per day” (13%). In the survey, we investigated what techniques the participants used to communicate with developers. Although sketching is a key tool for designers, appar- ently it is not used as a communication tool: 56% of the participants never “draw sketches on paper then hand them off to the developer to build,” with only 8% saying they did this “usually” or “all the time.” In contrast, the most popular techniques used for communication were to “write textual descriptions of how the application will work” (78% do this at least “often”), followed by “static designs digitally” (66%), “collaborating around a whiteboard or sketchpad” (56%), and “semi- functional, interactive prototypes (like in Flash)” (33%). So, designers seem to sketch and annotate the sketches for themselves (as in <xref ref-type="fig" rid="F1" id="104" class="deo:Reference">Figure 1</xref>), but use annotations on more formal drawings (as in <xref ref-type="fig" rid="F6" id="105" class="deo:Reference">Figure 6</xref>) to communicate. 76% of the designers felt that the behavior was more difficult to communicate to the developer than the appearance. Two of the reasons that participants mentioned for this problem were that developers not were not native English speakers, and the lack of details in the UI specifications which seem to be solved by face- to-face, phone, IM, and email conversations. One interesting comment was that “we publish our spec as a wiki – thereby allowing developers to add their annotations, questions and comments which we can in turn<marker type="column" number="2"/><marker type="block"/> address. This makes deliverables more of ‘living doc- uments’ than static paper weights.” Designers emphasized that they often were able to design the final appearance, but the developers were in charge of the code for the behaviors. Some participants reported that it would be important for a new tool to make sharing easier and be able to export designs into formats that can be easily viewed and commented on by others.</region>
          <region class="unknown" id="93" page="5" column="2">/</region>
          <region class="DoCO:FigureBox" id="F4">
            <image class="DoCO:Figure" src="62ex.page_005.image_02.png" thmb="62ex.page_005.image_02-thumb.png"/>
            <caption class="deo:Caption" id="95" page="5" column="2">Figure 4: How often participants in the survey typically used each of these techniques when working on a project (N=210).</caption>
          </region>
          <region class="DoCO:FigureBox" id="F5">
            <image class="DoCO:Figure" src="62ex.page_005.image_03.png" thmb="62ex.page_005.image_03-thumb.png"/>
            <caption class="deo:Caption" id="97" page="5" column="2">Figure 5: How often participants in the survey used each of these techniques to help explain how a digital drawing behaves (N=210).</caption>
          </region>
          <outsider class="DoCO:TextBox" type="page_nr" id="100" page="5" column="2">181</outsider>
          <region class="DoCO:FigureBox" id="F6">
            <image class="DoCO:Figure" src="62ex.page_006.image_05.png" thmb="62ex.page_006.image_05-thumb.png"/>
            <caption class="deo:Caption" id="103" page="6" column="1">Figure 6: Annotations from a CI participant on a detailed design to serve as a specification for developers.</caption>
          </region>
        </section>
        <section class="DoCO:Section">
          <h2 class="DoCO:SectionTitle" id="108" page="6" column="2">4.6. Iteration and Exploration for Behaviors</h2>
          <region class="DoCO:TextChunk" id="123" page="6" column="2">It is well known that designers sketch multiple variations when exploring designs (see <xref ref-type="fig" rid="F1" id="109" class="deo:Reference">Figure 1</xref>). Buxton quotes Linus Pauling saying that “the best way to a good idea is to have lots of ideas” [4, p. 121]. Other studies have also documented this [<xref ref-type="bibr" rid="R14" id="110" class="deo:Reference">14</xref>]. We were interested in how multiple versions were used for exploring interactive behaviors. In the CIs, one participant noted that “most ideas are bad and you want to get the bad ones out quickly” by iterating. Designers also frequently mentioned that because of the difficulties involved in communicating behavior to developers, versions of the behavior are much harder to iterate on. In contrast, variations in appearance are easy to iterate on and can even be changed at the very end of the design process. Participants mentioned that interactive behaviors had to be explored throughout the design process, including during the early stages when navigational structures being worked out because interactivity is often involved in changing among states. However, the subtle details of interactive elements are tweaked until the end, even after the final graphics are implemented. As shown in <xref ref-type="fig" rid="F1" id="111" class="deo:Reference">Figure 1</xref>, we saw in our CIs that designers frequently wanted to have multiple designs side-by-side, either in their sketchbooks, on big dis- plays, or on the wall. However, this is difficult to achieve for behaviors – there is no built-in way in today’s implementation tools to have two versions of a behavior operating side-by-side. Therefore we asked in the survey, “How important is it to you to be able to compare alternatives to decide which one to use?” Figure 7 shows the responses. The behavior-related items (the last three) are at the bottom of the list, possibly reflecting the participant’s lack of ability to do this now. Programmers rarely start a new project from scratch, but instead reuse old code as a starting point. We wondered if this applied to designers as well. In the CIs, we saw one participant having a library of tem- plates in tools such as Photoshop and Illustrator to save time creating standard widgets. In the survey, we asked how often design elements are reused for a later project. <xref ref-type="fig" rid="F8" id="112" class="deo:Reference">Figure 8</xref> shows the results. As expected, sketches are almost never reused –<marker type="page" number="7"/><marker type="column" number="1"/><marker type="block"/> only 5% said “often,” 4% said “usually,” and 1% said “all the time.” In contrast, widgets and controls are reused frequently. Code and scripts are reused about half of the time. Wireframes 58% Sketches 55% Detailed images 54% Layouts / Grids 47% Implemented User Interfaces 43% Storyboards 29% Code Examples 11% 0% 20% 40% 60% 80% 1 00%<marker type="block"/> We saw in the CIs that users did not have any good way of saving and reusing different versions of their code, either to enable comparisons in the current project, or to save for future projects. They had to use various naming schemes and file structures of their own invention. This was evident when a participant had a hard time locating the file he wanted to show the researchers during a CI. Therefore, we wanted to see in the survey what participants did to keep track of previous versions of the code for a project, as shown in Figure 9. This shows<marker type="column" number="2"/><marker type="block"/> that at least 75% of designers do some kind of version control on their own, and since few (28%) frequently use formal version-control software, they have to do this by hand.</region>
          <outsider class="DoCO:TextBox" type="page_nr" id="114" page="6" column="2">182</outsider>
          <region class="DoCO:FigureBox" id="F7">
            <caption class="deo:Caption" id="116" page="7" column="1">Figure 7: Percent of participants in survey who said it was “very important” or “crucial” to be able to compare alternatives to decide which one to use (N=210) Widgets / Controls / Interaction Techniques 76% Templates / Style Sheets 60% Icons 57% Colors / Palettes 50% Layouts / Grids 50% Code / Scripts 46% Images / Photos 40% Detailed graphic elements 39% Wireframes 33% Sounds 15% Storyboards 14% Sketches 11%</caption>
          </region>
          <region class="unknown" id="117" page="7" column="1">1 00%</region>
          <region class="DoCO:FigureBox" id="F8">
            <caption class="deo:Caption" id="118" page="7" column="1">Figure 8: How often various kinds of design elements are reused in a later project (N=210)</caption>
          </region>
          <region class="unknown" id="119" page="7" column="1">I name the old versions with names I use different folders for I use an electronic version control system such as CVS SourceSafe I copy old versions to external or a file server</region>
          <region class="DoCO:FigureBox" id="F9">
            <image class="DoCO:Figure" src="62ex.page_007.image_07.png" thmb="62ex.page_007.image_07-thumb.png"/>
            <image class="DoCO:Figure" src="62ex.page_007.image_06.png" thmb="62ex.page_007.image_06-thumb.png"/>
            <caption class="deo:Caption" id="121" page="7" column="1">Figure 9: How often participants use these techniques to keep track of previous versions of the code (N=167).</caption>
          </region>
        </section>
      </section>
      <section class="deo:Discussion">
        <h1 class="DoCO:SectionTitle" id="124" page="7" column="2">5. Discussion</h1>
        <region class="DoCO:TextChunk" id="125" page="7" column="2">Our results suggest that there is definitely a need among designers for quickly and easily prototyping interactive behaviors. Many do not program, and have difficulty prototyping behaviors. Consequently, they resort to heavy use of annotations and other means for communicating their intentions to people who do program. Specifying behaviors textually is often inadequate, time-consuming and sometimes leads to mis- communication and confusion between designers and developers. Since designers strive to be creative and explore new and complex behaviors, this is a significant pain point for them both today and in the future.</region>
        <section class="DoCO:Section">
          <h2 class="DoCO:SectionTitle" id="126" page="7" column="2">5.1. Threats to Validity</h2>
          <region class="DoCO:TextChunk" id="127" page="7" column="2">There are a number of reasons our results may not generalize. In our CIs and survey, we tried to focus on interaction designers, but we cannot be sure who filled out our survey, and whether they are representative of the entire field of interaction design. Our means of reaching designers may have biased the results towards the views taught at our university (since we targeted our alumni), or who are members of a particular organ- ization (ACM SIGCHI) and mailing list (IxDA). However, since our results match those previously reported, and since we seemed to have quite a wide variety of degrees and jobs represented, we feel comfortable rely- ing on the results. Another limitation is that the discus- sion about communication and annotations should include the perspective of what the receivers want from designers, so it might be wise to also survey developers. It is also important to note that many developers do not collaborate with designers.</region>
        </section>
        <section class="DoCO:Section">
          <h2 class="DoCO:SectionTitle" id="128" page="7" column="2">5.2. Implications for Future Tools</h2>
          <region class="DoCO:TextChunk" id="132" page="7" column="2">All but one person out of the 272 we interviewed or surveyed was interested in a new tool. Our results provide clear requirements for such tools, which go beyond what any of today’s commercial or research tools offer. For example, designers are very comfortable sketching and using digital tools for the look of the interface, but still are severely lacking in appropriate tools for exploring behaviors. They would like to iterate and explore multiple behaviors themselves, but are inhibited by today’s tools. However, just providing a few behaviors in menus for the designers to pick from is not sufficient, since designers want to explore quite complex behaviors. <marker type="page" number="8"/><marker type="column" number="1"/><marker type="block"/> Future tools should also support exploring multiple versions of the behaviors. Today’s tools make the user be responsible for naming multiple versions of files, and often do not even let designers compare multiple versions side-by-side. Terry provides an example of how this might be done [<xref ref-type="bibr" rid="R16" id="131" class="deo:Reference">16</xref>]. There are also significant opportunities for supporting tasks for behaviors beyond programming them. No tool today makes it easy to annotate and describe the behaviors, which is important for facilitating communication about the behaviors with developers. And since many designers work in teams with other designers, tools to facilitate collaboration around the exploration might be helpful. Many designers expressed the need for their coding tools to better integrate with drawing tools, like with Visio and Photoshop, to avoid redundant work.</region>
          <outsider class="DoCO:TextBox" type="page_nr" id="130" page="7" column="2">183</outsider>
        </section>
      </section>
      <section class="deo:Conclusion">
        <h1 class="DoCO:SectionTitle" id="133" page="8" column="1">6. Conclusions</h1>
        <region class="DoCO:TextChunk" id="134" page="8" column="1">Our contextual inquiries and surveys have confirmed what others have reported, but also revealed new requirements and ideas. Although time- consuming, these kinds of user research are very important to do before embarking on new tool efforts to ensure that the results will actually be helpful for the target audience. We hope the information presented here will enable us and others to produce such tools.</region>
      </section>
      <section class="deo:Acknowledgements">
        <h1 class="DoCO:SectionTitle" id="135" page="8" column="1">7. Acknowledgments</h1>
        <region class="DoCO:TextChunk" id="136" confidence="possible" page="8" column="1">We thank Jodi Forlizzi, John Zimmerman, Ilpo Koskinen, Jeff Wong, Thomas LaToza, Chris Scaffidi, Jeff Stylos, and all the anonymous participants and reviewers for help with this work. Thanks to Adobe for financial support and advice for this research. This research was supported by Adobe and by the NSF under Grant No. IIS-0757511. Any opinions, findings and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect those of the National Science Foundation.</region>
      </section>
      <section class="DoCO:Bibliography">
        <h1 class="DoCO:SectionTitle" id="137" page="8" column="1">8. References</h1>
        <ref-list class="DoCO:BiblioGraphicReferenceList">
          <ref rid="R1" class="deo:BibliographicReference" id="139" page="8" column="1">[1] Adobe Systems Incorporated, “Product Codename: 'Thermo',” 2008. <ext-link ext-link-type="uri" href="http://labs.adobe.com/wiki/index.php/Thermo." id="138">http://labs.adobe.com/wiki/index.php/Thermo.</ext-link></ref>
          <ref rid="R2" class="deo:BibliographicReference" id="140" page="8" column="1">[2] Bailey, B.P., Konstan, J.A., and Carlis, J.V. “Supporting Multimedia Designers: Towards more Effective Design Tools,” in 8th International Conference on Multimedia Modeling. 2001. pp. 267-286.</ref>
          <ref rid="R3" class="deo:BibliographicReference" id="141" page="8" column="1">[3] Beyer, H. and Holtzblatt, K., Contextual Design: Defining Custom-Centered Systems. 1998, San Francisco, CA: Morgan Kaufmann Publishers, Inc.</ref>
          <ref rid="R4" class="deo:BibliographicReference" id="142" page="8" column="1">[4] Buxton, B., Sketching User Experiences: Getting the Design Right and the Right Design. 2007, San Francisco, CA: Morgan Kaufmann.</ref>
          <ref rid="R5" class="deo:BibliographicReference" id="143" page="8" column="2">[5] Campos, P. and Nunes, N.J., “Practitioner Tools and Workstyles for User-Interface Design.” IEEE Software, January/February, 2007. 24(1): pp. 73-80.</ref>
          <ref rid="R6" class="deo:BibliographicReference" id="144" page="8" column="2">[6] Davis, R.C. and Landay, J.A. “Informal Animation Sketching: Requirements and Design,” in AAAI 2004 Fall Symposium on Making Pen-Based Interaction Intelligent and Natural. October 21-24, 2004. pp. 42-48.</ref>
          <ref rid="R7" class="deo:BibliographicReference" id="145" page="8" column="2">[7] Davis, R.C., Saponas, T.S., Shilman, M., and Landay, J.A. “SketchWizard: Wizard of Oz Prototyping of Pen- based User Interfaces,” in Symposium on User Interface Software and Technology: UIST 2007. October 7-10, 2007. Newport, RI: pp. 119 - 128.</ref>
          <ref rid="R8" class="deo:BibliographicReference" id="146" page="8" column="2">[8] Gross, M.D. and Do, E.Y.L. “Demonstrating the electronic cocktail napkin: a paper-like interface for early design,” in Conference companion for CHI'96: Human factors in computing systems. 1996. Vancouver, British Co- lumbia, Canada: pp. 5-6.</ref>
          <ref rid="R9" class="deo:BibliographicReference" id="147" page="8" column="2">[9] Henderson, K., On Line and On Paper: Visual Represen- tations, Visual Culture, and Computer Graphics in Design Engineering. 1999, Cambridge, MA: MIT Press.</ref>
          <ref rid="R10" class="deo:BibliographicReference" id="148" page="8" column="2">[10] Klemmer, S.R., Thomsen, M., Phelps-Goodman, E., Lee, R., and Landay, J.A. “Where do web sites come from? capturing and interacting with design history,” in Proceedings of CHI'2002: the SIGCHI conference on Human factors in computing systems. 2002. Minneapolis, Minnesota: pp. 1-8.</ref>
          <ref rid="R11" class="deo:BibliographicReference" id="149" page="8" column="2">[11] Landay, J. and Myers, B., “Sketching Interfaces: Toward More Human Interface Design.” IEEE Computer, March, 2001. 34(3): pp. 56-64.</ref>
          <ref rid="R12" class="deo:BibliographicReference" id="150" page="8" column="2">[12] Myers, B.A., Ko, A.J., and Burnett, M.M. “Invited Re- search Overview: End-User Programming,” in Extended Abstracts, CHI'2006. April 22-27, 2006. Montreal, Canada: pp. 75-80.</ref>
          <ref rid="R13" class="deo:BibliographicReference" id="151" page="8" column="2">[13] Myers, B.A., Smith, D.C., and Horn, B. “Report of the `End-User Programming' Working Group,” in Languages for Developing User Interfaces. 1992. Boston, MA: Jones and Bartlett. pp. 343-366.</ref>
          <ref rid="R14" class="deo:BibliographicReference" id="152" page="8" column="2">[14] Newman, M.W. and Landay, J.A. “Sitemaps, Storyboards, and Specifications: A Sketch of Web Site Design Practice,” in Designing Interactive Systems, DIS 2000. August, 2000. New York City: pp. 263-274.</ref>
          <ref rid="R15" class="deo:BibliographicReference" id="153" page="8" column="2">[15] Rosson, M.B., Ballin, J., and Rode, J. “Who, What, and How: A Survey of Informal and Professional Web Devel- opers,” in IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC'05). 2005. pp. 199 - 206.</ref>
          <ref rid="R16" class="deo:BibliographicReference" id="154" page="8" column="2">[16] Terry, M. and Mynatt, E. “Recognizing creative needs in user interface design,” in C&amp;C'02: Proceedings of the ACM Conference on Creativity and Cognition. 2002. Loughborough, United Kingdom: pp. 38-44.</ref>
          <ref rid="R17" class="deo:BibliographicReference" id="155" page="8" column="2">[17] Tversky, B., Suwa, M., Agrawala, M., H. J, C.S., Hanra- han, P., Phan, D., Klingner, J., Daniel, M., Lee, P., and Haymaker, J., “Human behavior in design: Individuals, teams, tools,” in Sketches for Design and Design of Sketches, 2003, Springer. pp. 79–86.</ref>
          <ref rid="R18" class="deo:BibliographicReference" id="156" page="8" column="2">[18] Wong, Y.Y. “Rough and Ready Prototypes: Lessons from Graphic Design,” in Extended Abstracts, SIGCHI'92. May, 1992. Monterey, CA: pp. 685.</ref>
        </ref-list>
        <outsider class="DoCO:TextBox" type="page_nr" id="157" page="8" column="2">184</outsider>
      </section>
    </body>
  </article>
</pdfx>

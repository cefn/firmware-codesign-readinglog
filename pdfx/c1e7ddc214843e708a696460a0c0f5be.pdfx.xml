<?xml version='1.0' encoding='UTF-8'?>
<pdfx xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://pdfx.cs.man.ac.uk/static/article-schema.xsd">
  <meta>
    <job>c99146f6aec64e0a79d3b4486f540c8526b90015fc99dc68a9a9da16774f55a1</job>
    <base_name>62h9</base_name>
    <doi>http://dx.doi.org/10.1145/1028014.1028086</doi>
  </meta>
  <article>
    <front class="DoCO:FrontMatter">
      <title-group>
        <article-title class="DoCO:Title" id="1">Wizard-of-Oz Prototyping for Cooperative Interaction Design of Graphical User Interfaces</article-title>
      </title-group>
      <contrib-group class="DoCO:ListOfAuthors">
        <contrib contrib-type="author">
          <name id="2">Lennart Molin</name>
        </contrib>
      </contrib-group>
      <region class="unknown" id="4">Information Systems Karlstad University S-651 88 Karlstad, Sweden <email id="3">Lennart.Molin@kau.se</email></region>
      <abstract class="DoCO:Abstract" id="5">It is often difficult for users to specify requirements on interactivity in multimedia products. These properties are often designed by designers or software engineers and the users run the risk of playing a passive role having low influence on important decisions made. This paper presents an attempt to improve the interactive design process by using graphical Wizard-of-Oz prototyping. The study shows that graphical Wizard-of-Oz prototyping allow cooperative design and test of computer interaction early in the design process ahead of traditional programming. It also demonstrates that this type of prototyping can promote collaboration and constructive dialogue between users and designers, thus strengthening the user as a stakeholder in the development process.</abstract>
      <section class="DoCO:Section">
        <h2 class="DoCO:SectionTitle" id="6" confidence="possible" page="1" column="1">Author Keywords</h2>
      </section>
    </front>
    <body class="DoCO:BodyMatter">
      <region class="DoCO:TextChunk" id="7" page="1" column="1">Wizard-of-Oz prototyping, Ozlab, cooperative interaction design, requirements specification.</region>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="8" page="1" column="1">ACM</h1>
        <section class="DoCO:Section">
          <h2 class="DoCO:SectionTitle" id="9" confidence="possible" page="1" column="1">Classification Keywords</h2>
        </section>
      </section>
      <region class="DoCO:TextChunk" id="10" confidence="possible" page="1" column="1">H.5.1 Multimedia Information Systems, H.5.2 User Interfaces</region>
      <section class="deo:Introduction">
        <h1 class="DoCO:SectionTitle" id="11" page="1" column="1">INTRODUCTION</h1>
      </section>
      <region class="DoCO:TextChunk" id="24" page="1" column="1">Specifying requirements for multimedia systems is a difficult task. This is due to many different factors, some of them depend directly on a core element of multimedia: interactivity. For an end user, it can be difficult to produce and articulate requirements of system interactivity which may result in a system that is hard to use. This paper reports some results from a project on developing improved methods for interaction design with the use of Wizard-of-Oz prototyping [ <xref ref-type="bibr" rid="R1" id="12" class="deo:Reference">1</xref>] of graphical inter-<marker type="column" number="2"/><marker type="block"/> faces. (A comprehensive description of the project can be found in [<xref ref-type="bibr" rid="R3" id="17" class="deo:Reference">3</xref>]) For this purpose a special software laboratory called Ozlab has been used [<xref ref-type="bibr" rid="R5" id="18" class="deo:Reference">5</xref>]. Ozlab makes it possible to use a digital mock-up of an interface in a prototyping session where true interaction is simulated by a human test manager, the ‘wizard’. No programming of the interaction is necessary. All interaction response from the computer system is made by the wizard. Graphical Wizard-of-Oz prototyping enabled by Ozlab play on spatial relationships in the on-screen scenes. How would this translate to an application that is dependant on spatial relations in the real world? In order to explore this a collaboration with the company Medical Robotics has been established. Medical Robotics has developed PinTrace which is a system that helps surgeons to position fixation devices correctly during orthopedic surgery of hip fractures, see <xref ref-type="fig" rid="F1" id="19" class="deo:Reference">Figure 1</xref>. The system is based on a robot and uses information from both X-ray images and the surgeon to calculate a correct position and then physically guide the surgeon in the drilling through the patients hip. The graphical user interface consists of a touch screen combined with a trackball and mouse button. The system is to this date still in a prototype phase but has been used in<marker type="page" number="2"/><marker type="column" number="1"/><marker type="block"/> surgery approximately 60 times since 1998. Over this period, both developers and users have recognized problems regarding the interface. In the project reported here, Ozlab has been used to perform cooperative design sessions on the PinTrace system in a laboratory setting. Three surgeons, one system designer and one research assistant have participated. The author has participated as wizard, but one of the surgeons has also taken the wizard role in one session. Ozlab has been connected to the systems touch screen. <xref ref-type="fig" rid="F2" id="22" class="deo:Reference">Figure 2</xref> shows an example of a proposed screen layout (included within the wizard’s view). The circular image to the left is an X-ray of the patients hip bone. To the right there are five buttons, each representing reference objects that the surgeon position on the X-ray in order to give PinTrace the position data it needs to calculate the proper position for the fixation devices. In the center a dialog box is barely visible. This box contains an instruction to the user and will be invisible until the user clicks on the question mark at the top left corner. When this happens, the wizard makes the dialog box visible to the user by pressing a ‘view’-symbol on the corner of the dialog box. This action will highlight the box with its message and the OK-button. The screen also contains a page-navigation symbol, see the button at the bottom right. The user is supposed to click this button in order to move to the next screen. This shift of screens is handled by the wizard who has a special navigation bar for this purpose, located at the bottom left in <xref ref-type="fig" rid="F2" id="23" class="deo:Reference">Figure 2</xref>. At the top left of the screen there is another set of tools available to the wizard. By using these buttons, the wizard for example may ‘freeze’ objects that the user normally should be able to move, or he can reposition movable objects to their initial position. (The interaction as described here is controlled by the wizard.) There are however a couple of pre-programmed features involved also. The results presented here are based on twelve design sessions. The surgeons have worked by themselves in four sessions, in the other eight they were accompanied by the designer or the research assistant in order to have someone to talk to and to describe and discuss the procedure. In eleven sessions, the author took the wizard role, a surgeon acted as wizard accompanied by the author in one session. All sessions were recorded on video tapes for later analysis.</region>
      <region class="unknown" id="14" page="1" column="1">Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, to republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. NordiCHI '04, October 23-27, 2004 Tampere, Finland Copyright 2004 ACM 1-58113-857-1/04/10... $5.00</region>
      <region class="DoCO:FigureBox" id="F1">
        <image class="DoCO:Figure" src="62h9.page_001.image_01.png" thmb="62h9.page_001.image_01-thumb.png"/>
        <caption class="deo:Caption" id="16" page="1" column="2">Figure 1. PinTrace robot surgery system with a touch-screen interface. To the left of the screen there is a robot arm which moves to an exact position to guide the surgeon in the insertion of hip fixation devices. (Published with permission from Medical Robotics)</caption>
      </region>
      <outsider class="DoCO:TextBox" type="page_nr" id="21" page="1" column="2">425</outsider>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="25" page="2" column="1">RESEARCH QUESTIONS</h1>
        <region class="DoCO:TextChunk" id="30" page="2" column="1">The research aims at improved methods for interaction design in multimedia development. In this paper, two questions are addressed: 1. How can graphical Wizard-of-Oz prototyping improve interaction design? 2. How can the user be more involved and strengthened as a stakeholder in the interaction design? <marker type="column" number="2"/><marker type="block"/> A motive for the questions is that previous research indicates the weak position users often hold in multimedia development and the promise of the special Wizard-of-Oz tool Ozlab to not only test designs with users but also to involve users more profoundly in the design and test work. [<xref ref-type="bibr" rid="R3" id="29" class="deo:Reference">3</xref>]</region>
        <region class="DoCO:FigureBox" id="F2">
          <image class="DoCO:Figure" src="62h9.page_002.image_02.png" thmb="62h9.page_002.image_02-thumb.png"/>
          <caption class="deo:Caption" id="28" page="2" column="2">Figure 2. Wizard view of one proposed PinTrace screen layout used for positioning different reference objects on an X-ray</caption>
        </region>
      </section>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="31" page="2" column="2">PRELIMINARY RESULTS</h1>
        <region class="DoCO:TextChunk" id="32" confidence="possible" page="2" column="2">An early analysis of the experiments resulted in five categories of findings: • Being inside – the adaptive computer • The computer personified • Rapid iterative test of design ideas • Collaboration and dialogue – user involvement • Methodology and tool problems</region>
        <section class="DoCO:Section">
          <h2 class="DoCO:SectionTitle" id="33" confidence="possible" page="2" column="2">Being inside – the adaptive computer</h2>
          <region class="DoCO:TextChunk" id="36" page="2" column="2">In Wizard-of-Oz prototyping, the wizard is the computer. Thus, he or she has the possibility to analyze the user input and adjust the response within the boundaries of the setup used. Two examples are given here. In one session the user was supposed to make one mouse click to perform a certain action. However, the user sometimes clicked twice instead. The wizard made the judgment that it was more important in this particular situation to proceed with the desired action than to ‘argue’ with the user about the proper number of clicks. Therefore, the wizard treated both behaviors as equal well aware of the flip side of this ‘feature’: the user may experience that the computer does not recognize the difference between one or two clicks. However, in this session, the user and the designer after a while started to talk about the difference in the required number of clicks. This had been a topic in an <marker type="page" number="3"/><marker type="column" number="1"/><marker type="block"/> earlier design session in which they both had taken part. The user then resorted to one click for the rest of the session. Thus, both the computer and the user made some adaptations to their behavior during the session. In another session where two surgeons took part, one acted as wizard and the other as user. The author accompanied the wizard. At a certain moment there was supposed to be a shift to the next screen. The wizard noticed immediately that something was unclear and exclaimed: “But how can I know when to move to the next screen?” He had discovered that he did not know what was supposed to trigger the shift. As a wizard, he had to know this because he makes it happen. As a user on the other hand, it would not be that obvious, the shift between screens could for example take place after a certain time of user inactivity. It would still be unclear for the user, but it would not be crucial for the proceeding of the session.</region>
          <outsider class="DoCO:TextBox" type="page_nr" id="35" page="2" column="2">426</outsider>
        </section>
        <section class="DoCO:Section">
          <h2 class="DoCO:SectionTitle" id="37" confidence="possible" page="3" column="1">The computer personified</h2>
          <region class="DoCO:TextChunk" id="39" page="3" column="1">In all design sessions performed with the help of surgeons, they have been fully aware of the user-wizard set up. This had the effect that the ‘computer’ was given a human face. Errors and weaknesses of the prototype were not blamed on bad code, poor computers or an anonymous programmer but connected to the users themselves (as originators of design proposals) or the wizard as responsible for (unspecified) prototype behavior. This shows awareness of the human effort behind the prototype. This can counterbalance the tendency analyzed in [<xref ref-type="bibr" rid="R6" id="38" class="deo:Reference">6</xref>] to hold a messenger (such as a computer) responsible for the messages delivered; even if users know that a person created the faulty system it is the computer itself that is being blamed. In the present sessions, it was easy for each user to see the real person behind the digital messenger.</region>
        </section>
        <section class="DoCO:Section">
          <h2 class="DoCO:SectionTitle" id="40" confidence="possible" page="3" column="1">Rapid iterative test of design ideas</h2>
          <region class="DoCO:TextChunk" id="42" page="3" column="1">One idea behind Ozlab is that changes of interaction design can be implemented rapidly by modification of wizard behavior or by modification of graphical objects using a toolbox for ‘painting’. This proved to be very valuable on several occasions. In one session we tried two different ways of placing five graphical objects on the screen. In the first case, the user had to push a button and then click on an X-ray picture to mark the position of the object. The next case was arranged to simulate a wanted feature of the system – automatic placement of the objects. Modification of the prototype to handle this took ten minutes and was then successfully used in a second session. Once we implemented a help function in the prototype. No one used it. When one user was asked about it afterwards he replied: ”I did not see a help function, was there one?” We then decided to perform some sessions without this function and the removal of it from the prototype was very easy and quick, it took just a couple of minutes. <marker type="column" number="2"/><marker type="block"/> A similar example concerns a navigation aid that was proposed during two design sessions prior to the prototyping. One problem with the existing interface was for the users to know ‘where they were’ in the process. To counter this, a navigation aid was implemented. The idea was to graphically show the users where they were in relation to where they had been and where they could go next. It turned out the same way as for the help function, no one noticed it. The motive for this was interesting: other concurrent modifications of the interface proved to cope with the navigation problem. That is, if we had tried one modification at a time, we would probably have avoided the extra time spent on this feature. However, the removal of this unwanted feature was done in minutes. Finally, there was also an example of a user recognizing his own learning during only a few iterations. He commented that: “you can do this fast after a while”. Ozlab can thus be used as a training tool since it can support true interaction simulating features that are not yet programmed.</region>
        </section>
        <section class="DoCO:Section">
          <h2 class="DoCO:SectionTitle" id="43" confidence="possible" page="3" column="2">Collaboration and dialogue – user involvement</h2>
          <region class="DoCO:TextChunk" id="45" page="3" column="2">A general observation is that all users seemed interested and enthusiastic about this type of sessions as reported also in earlier studies with Ozlab [<xref ref-type="bibr" rid="R4" id="44" class="deo:Reference">4</xref>]. One example was a user who reinforced the simulation by making a “computer sound” in one situation where the prototype did not make a sound that he expected. Several design sessions were performed with a user and a designer at the user’s side as a dialogue partner. All participating users knew this designer fairly well so it was easy for them to cooperate and also enjoy the situation socially. Several times they expanded the dialogue to also include chat about more personal things. Constructive dialogues regularly occurred and they proved to help both parties to analyze interaction logic and the vocabulary used in the prototype. They were recorded on video tape. After each session, we had an informal conversation about what had happened. The wizard had been seated in an adjacent room and had thus not heard the dialogue between user and designer. This fact seemed to trigger both of them to tell the wizard about their experiences during the session. This recalling of the session, and the discussion it triggered, proved to be a useful analytic tool to shed new light on what had taken place.</region>
        </section>
        <section class="DoCO:Section">
          <h2 class="DoCO:SectionTitle" id="46" confidence="possible" page="3" column="2">Methodology and tool problems</h2>
          <region class="DoCO:TextChunk" id="49" page="3" column="2">Wizard-of-Oz prototyping in general and Ozlab in particular are both fairly novel phenomena in experimenting with graphical user interfaces. Revealing limitations, drawbacks and problems is therefore an important part of the development of a prototyping methodology and the tool used. The sessions revealed problems of both the methodology and the tool. Let us first examine the methodology using three examples. <marker type="page" number="4"/><marker type="column" number="1"/><marker type="block"/> Incorrect wizard behavior. A couple of times the wizard by mistake simply responded in a different way than planned. This represents unpredictable system behavior. User is aware of wizard. When the user is aware of the setup with a live wizard, this might cause the user to behave in a way that does not comply with the goal of the session. This raises the question of when it is more appropriate to run the session with a ‘hidden’ wizard whom the user is unaware of. User bias. In some sessions, the wizard, the user and the designer were ‘emotional stakeholders’ in the prototype since they all had taken part in design sessions that preceded the construction of the prototype. This can probably affect the sessions compared with ‘neutral’ participants. Let us now look at two problems with the tool. Rapid mouse clicks. Sometimes the user made double clicks in the present Wizard-of-Oz application, Ozlab. The standard double click function is not used so all double clicks can be viewed as incorrect. A click is presented to the wizard by a flashing user cursor. It is almost impossible for the wizard to distinguish a single and a double click. Difficult to grab objects. One important feature in the application is to grab and move graphical objects on the touch screen. On some occasions it was difficult for the user to know where to place the cursor in order to drag and drop the objects.</region>
          <outsider class="DoCO:TextBox" type="page_nr" id="48" page="3" column="2">427</outsider>
        </section>
      </section>
      <section class="deo:Conclusion">
        <h1 class="DoCO:SectionTitle" id="50" page="4" column="1">CONCLUSION</h1>
        <region class="DoCO:TextChunk" id="53" page="4" column="1">Two questions were posed above. The first was: How can Wizard-of-Oz prototyping improve interaction design? The study shows that Wizard-of-Oz prototyping allows for a true interactive experience without traditional programming. The experience triggers an analysis of the interaction which produces new design ideas that can be tested. The time it takes to implement new ideas is dependant on their nature. The design sessions revealed that some changes that would be major rebuilds of a programmed prototype could be implemented in a few minutes. Wizard-of-Oz prototyping can produce different types of output to support and extend the requirements specification. The prototype itself can be used by designers and programmers. Screen and video recordings of sessions can be used as clarification and examples of good or bad design. Designers who take part in the sessions get a personal experience that might help them understand key interaction issues. <marker type="column" number="2"/><marker type="block"/> The second question was: How can the user be more involved and strengthened as a stakeholder in the interaction design? The users all showed great interest in the design sessions and they were eager to try their ideas themselves as well as on their peers. On the occasions where they were accompanied by a developer very constructive dialogues took place. Interaction and tasks were in focus and both parties used each other and the present prototype to gain deeper understanding of different aspects of the task. Finally, the sessions showed that Wizard-of-Oz prototyping allows users to be heavily involved in the external design of interactive products. It is also demonstrated that the media used did not discriminate the users, as emphasized by [<xref ref-type="bibr" rid="R2" id="52" class="deo:Reference">2</xref>].</region>
      </section>
      <section class="deo:Acknowledgements">
        <h1 class="DoCO:SectionTitle" id="54" page="4" column="2">ACKNOWLEDGEMENT</h1>
        <region class="DoCO:TextChunk" id="55" page="4" column="2">This is a project within MTiV (Medicinsk Teknik i Värmland) which is a EU-supported regional competence cluster in the field of medical technology.</region>
      </section>
      <section class="DoCO:Bibliography">
        <h1 class="DoCO:SectionTitle" id="56" page="4" column="2">REFERENCES</h1>
        <ref-list class="DoCO:BiblioGraphicReferenceList">
          <ref rid="R1" class="deo:BibliographicReference" id="57" page="4" column="2">1. Kelley, J.F. "An iterative design methodology for user- friendly natural language office information applications". ACM Transactions on Office Information Systems, March 1984, 2:1, pp. 26-41.</ref>
          <ref rid="R2" class="deo:BibliographicReference" id="58" page="4" column="2">2. Löwgren, J. Applying design methodology to software development, In Symposium on Designing Interactive Systems, DIS'95 Proceedings, ACM Press (1995), New York, 87-95.</ref>
          <ref rid="R3" class="deo:BibliographicReference" id="59" page="4" column="2">3. Molin, L., Pettersson, J.S. How Should Interactive Media be Discussed for Successful Requirements Engineering?, in Burnett, R., Brunström, A. &amp; Nilsson, A.G. Perspectives on Multimedia – Communication, Media and Information Technology, (2003) Wiley, New York.</ref>
          <ref rid="R4" class="deo:BibliographicReference" id="60" page="4" column="2">4. Pettersson, J.S. Visualising interactive graphics design for testing with users, Digital Creativity (2002), Vol 13, No. 3, 144-156.</ref>
          <ref rid="R5" class="deo:BibliographicReference" id="61" page="4" column="2">5. Pettersson, J.S., &amp; Siponen, J. Ozlab – A Simple Demonstration Tool for Prototyping Interactivity, Proceedings of NordiCHI, Aarhus, Denmark, 19-23 October 2002, pp.293-294.</ref>
          <ref rid="R6" class="deo:BibliographicReference" id="62" page="4" column="2">6. Reeves, B. &amp; Nass, C. The Media Equation: How People Treat Computers, Television, and New Media Like Real People and Places, Cambridge University Press (1996), Cambridge.</ref>
        </ref-list>
        <outsider class="DoCO:TextBox" type="page_nr" id="63" page="4" column="2">428</outsider>
      </section>
    </body>
  </article>
</pdfx>

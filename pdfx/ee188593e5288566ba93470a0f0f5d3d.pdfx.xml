<?xml version='1.0' encoding='UTF-8'?>
<pdfx xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://pdfx.cs.man.ac.uk/static/article-schema.xsd">
  <meta>
    <job>2db38c7f1c3cb075465662614f4d28b5d58879dbcf29027be78b6426abbb8096</job>
    <base_name>62sb</base_name>
    <doi confidence="possible">http://dx.doi.org/10.1177/004728759303100443</doi>
  </meta>
  <article>
    <front class="DoCO:FrontMatter">
      <outsider class="DoCO:TextBox" type="header" id="1">Hevner et al./Design Science in IS Research</outsider>
      <region class="DoCO:FigureBox" id="Fx2">
        <image class="DoCO:Figure" src="62sb.page_001.image_01.png" thmb="62sb.page_001.image_01-thumb.png"/>
      </region>
      <region class="unknown" id="3">IN I NFORMATION ESEARCH 1</region>
      <title-group>
        <article-title class="DoCO:Title" id="4">D ESIGN S CIENCE S YSTEMS R</article-title>
      </title-group>
      <region class="unknown" id="5">By:</region>
      <contrib-group class="DoCO:ListOfAuthors">
        <contrib contrib-type="author">
          <name id="6">Sudha Ram Management Information Systems Eller College of Business</name>
        </contrib>
        <contrib contrib-type="author">
          <name id="7">Public Administration University of Arizona Tucson</name>
        </contrib>
        <contrib contrib-type="author">
          <name id="8">AZ 85721 U.S.A. ram@bpa.arizona.edu</name>
        </contrib>
      </contrib-group>
      <abstract class="DoCO:Abstract" id="9">Abstract</abstract>
      <contrib-group class="DoCO:ListOfAuthors">
        <contrib contrib-type="author">
          <name id="10">Alan R. Hevner Information Systems</name>
        </contrib>
        <contrib contrib-type="author">
          <name id="11">Decision Sciences College of Business Administration University of South Florida Tampa</name>
        </contrib>
        <contrib contrib-type="author">
          <name id="12">FL 33620 U.S.A. ahevner@coba.usf.edu Salvatore T. March Own Graduate School of Management Vanderbilt University Nashville</name>
        </contrib>
        <contrib contrib-type="author">
          <name id="13">TN 37203 U.S.A. Sal.March@owen.vanderbilt.edu Jinsoo Park College of Business Administration Korea University Seoul</name>
        </contrib>
        <contrib contrib-type="author">
          <name id="14">KOREA jinsoo.park@acm.org</name>
        </contrib>
      </contrib-group>
      <abstract class="DoCO:Abstract" id="15">1 Allen S. Lee was the accepting senior editor for this paper.</abstract>
      <region class="DoCO:TextChunk" id="16" confidence="possible">Two paradigms characterize much of the research in the Information Systems discipline: behavioral science and design science. The behavioral- science paradigm seeks to develop and verify theories that explain or predict human or organizational behavior. The design-science paradigm seeks to extend the boundaries of human and organizational capabilities by creating new and innovative artifacts. Both paradigms are foundational to the IS discipline, positioned as it is at the confluence of people, organizations, and technology. Our objective is to describe the performance of design-science research in Information Systems via a concise conceptual framework and clear guidelines for understanding, executing, and evaluating the research. In the design-science paradigm, knowledge and understanding of a problem domain and its solution are achieved in the building and application of the designed artifact. Three recent exemplars in the research literature are used to demonstrate the application</region>
      <region class="unknown" id="17">R ESEARCH E SSAY</region>
      <outsider class="DoCO:TextBox" type="footer" id="18">MIS Quarterly Vol. 28 No. 1, pp. 75-105/March 2004</outsider>
      <outsider class="DoCO:TextBox" type="page_nr" id="19">75</outsider>
      <outsider class="DoCO:TextBox" type="header" id="20">Hevner et al./Design Science in IS Research</outsider>
      <region class="DoCO:TextChunk" id="21" confidence="possible">of these guidelines. We conclude with an analysis of the challenges of performing high-quality design-science research in the context of the broader IS community.</region>
      <region class="DoCO:TextChunk" id="22">Keywords: Information Systems research methodologies, design science, design artifact, business environment, technology infrastructure, search strategies, experimental methods, creativity</region>
    </front>
    <body class="DoCO:BodyMatter">
      <section class="deo:Introduction">
        <h1 class="DoCO:SectionTitle" id="23" page="2" column="1">Introduction</h1>
        <region class="DoCO:TextChunk" id="74" page="2" column="1">Information systems are implemented within an organization for the purpose of improving the effectiveness and efficiency of that organization. Capabilities of the information system and characteristics of the organization, its work systems, its people, and its development and implementation methodologies together determine the extent to which that purpose is achieved ( <xref ref-type="bibr" rid="R92" id="24" class="deo:Reference">Silver et al. 1995</xref>). It is incumbent upon researchers in the Information Systems (IS) discipline to “further knowledge that aids in the productive application of information technology to human organizations and their management” (<xref ref-type="bibr" rid="R46" id="25" class="deo:Reference">ISR 2002</xref>, inside front cover) and to develop and communicate “knowl- edge concerning both the management of information technology and the use of information technology for managerial and organizational pur- poses” (<xref ref-type="bibr" rid="R112" id="26" class="deo:Reference">Zmud 1997</xref>).<marker type="block"/> We argue that acquiring such knowledge involves two complementary but distinct paradigms, behavioral science and design science (<xref ref-type="bibr" rid="R55" id="28" class="deo:Reference">March and Smith 1995</xref>). The behavioral-science paradigm has its roots in natural science research methods. It seeks to develop and justify theories (i.e., principles and laws) that explain or predict organizational and human phenomena sur- rounding the analysis, design, implementation, management, and use of information systems. Such theories ultimately inform researchers and practitioners of the interactions among people, technology, and organizations that must be managed if an information system is to achieve its stated purpose, namely improving the effective-<marker type="column" number="2"/><marker type="block"/> ness and efficiency of an organization. These theories impact and are impacted by design decisions made with respect to the system development methodology used and the functional capabilities, information contents, and human interfaces implemented within the information system.<marker type="block"/> The design-science paradigm has its roots in engineering and the sciences of the artificial (<xref ref-type="bibr" rid="R93" id="31" class="deo:Reference">Simon 1996</xref>). It is fundamentally a problem- solving paradigm. It seeks to create innovations that define the ideas, practices, technical capabilities, and products through which the analysis, design, implementation, management, and use of information systems can be effectively and efficiently accomplished (<xref ref-type="bibr" rid="R27" id="32" class="deo:Reference">Denning 1997</xref>; <xref ref-type="bibr" rid="R99" id="33" class="deo:Reference">Tsichritzis 1998</xref>). Such artifacts are not exempt from natural laws or behavioral theories. To the contrary, their creation relies on existing kernel theories that are applied, tested, modified, and extended through the experience, creativity, intuition, and problem solving capabilities of the researcher (<xref ref-type="bibr" rid="R68" id="34" class="deo:Reference">Markus et al. 2002</xref>; <xref ref-type="bibr" rid="R102" id="35" class="deo:Reference">Walls et al. 1992</xref>).<marker type="block"/> The importance of design is well recognized in the IS literature (<xref ref-type="bibr" rid="R43" id="37" class="deo:Reference">Glass 1999</xref>; <xref ref-type="bibr" rid="R109" id="38" class="deo:Reference">Winograd 1996</xref>, 1998). Benbasat and Zmud (1999, p. 5) argue that the relevance of IS research is directly related to its applicability in design, stating that the implications of empirical IS research should be “implemen- table,...synthesize an existing body of research, ...[or] stimulate critical thinking” among IS practitioners. However, designing useful artifacts is complex due to the need for creative advances in domain areas in which existing theory is often insufficient. “As technical knowledge grows, IT is applied to new application areas that were not previously believed to be amenable to IT support” (<xref ref-type="bibr" rid="R68" id="39" class="deo:Reference">Markus et al. 2002</xref>, p. 180). The resultant IT artifacts extend the boundaries of human problem solving and organizational capabilities by providing intellectual as well as computational tools. Theories regarding their application and impact will follow their development and use.<marker type="block"/> Here, we argue, is an opportunity for IS research to make significant contributions by engaging the complementary research cycle between design-<marker type="page" number="3"/><marker type="column" number="1"/><marker type="block"/> science and behavioral-science to address fundamental problems faced in the productive application of information technology. Technology and behavior are not dichotomous in an information system. They are inseparable (Lee 2000). They are similarly inseparable in IS research. Philo- sophically these arguments draw from the prag- matists (<xref ref-type="bibr" rid="R4" id="45" class="deo:Reference">Aboulafia 1991</xref>) who argue that truth (justified theory) and utility (artifacts that are effective) are two sides of the same coin and that scientific research should be evaluated in light of its practical implications.<marker type="block"/> The realm of IS research is at the confluence of people, organizations, and technology (<xref ref-type="bibr" rid="R24" id="47" class="deo:Reference">Davis and Olson 1985</xref>; <xref ref-type="bibr" rid="R61" id="48" class="deo:Reference">Lee 1999</xref>). IT artifacts are broadly defined as constructs (vocabulary and symbols), models (abstractions and representations), methods (algorithms and practices), and instantiations (implemented and prototype systems). These are concrete prescriptions that enable IT researchers and practitioners to understand and address the problems inherent in developing and successfully implementing information systems within organizations (<xref ref-type="bibr" rid="R55" id="49" class="deo:Reference">March and Smith 1995</xref>; <xref ref-type="bibr" rid="R74" id="50" class="deo:Reference">Nunamaker et al. 1991a</xref>). As illustrations, <xref ref-type="bibr" rid="R68" id="51" class="deo:Reference">Markus et al. (2002)</xref> and <xref ref-type="bibr" rid="R102" id="52" class="deo:Reference">Walls et al. (1992)</xref> present design-science research aimed at developing executive information systems (EISs) and systems to support emerging knowledge processes (EKPs), respectively, within the context of “IS design theories.” Such theories prescribe “effec- tive development practices” (methods) and “a type of system solution” (instantiation) for “a particular class of user requirements” (models) (<xref ref-type="bibr" rid="R68" id="53" class="deo:Reference">Markus et al. 2002</xref>, p. 180). Such prescriptive theories must be evaluated with respect to the utility provided for the class of problems addressed.<marker type="block"/> An IT artifact, implemented in an organizational context, is often the object of study in IS behavioral-science research. Theories seek to predict or explain phenomena that occur with respect to the artifact’s use (intention to use), perceived usefulness, and impact on individuals and organizations (net benefits) depending on system, service, and information quality (<xref ref-type="bibr" rid="R26" id="55" class="deo:Reference">DeLone and McLean 1992</xref>, 2003; <xref ref-type="bibr" rid="R90" id="56" class="deo:Reference">Seddon 1997</xref>). Much of this behavioral research has focused on one class of<marker type="column" number="2"/><marker type="block"/> artifact, the instantiation (system), although other research efforts have also focused on the evaluation of constructs (e.g., <xref ref-type="bibr" rid="R11" id="58" class="deo:Reference">Batra et al. 1990</xref>; <xref ref-type="bibr" rid="R15" id="59" class="deo:Reference">Bodart et al. 2001</xref>; <xref ref-type="bibr" rid="R41" id="60" class="deo:Reference">Geerts and McCarthy 2002</xref>; <xref ref-type="bibr" rid="R55" id="61" class="deo:Reference">Kim and March 1995</xref>) and methods (e.g., <xref ref-type="bibr" rid="R65" id="62" class="deo:Reference">Marakas and Elam 1998</xref>; <xref ref-type="bibr" rid="R94" id="63" class="deo:Reference">Sinha and Vessey 1999</xref>). Relatively little behavioral research has focused on evaluating models, a major focus of research in the management science literature.<marker type="block"/> Design science, as the other side of the IS research cycle, creates and evaluates IT artifacts intended to solve identified organizational problems. Such artifacts are represented in a structured form that may vary from software, formal logic, and rigorous mathematics to informal natural language descriptions. A mathematical basis for design allows many types of quantitative evaluations of an IT artifact, including optimization proofs, analytical simulation, and quantitative comparisons with alternative designs. The further evaluation of a new artifact in a given organizational context affords the opportunity to apply empirical and qualitative methods. The rich phenomena that emerge from the interaction of people, organizations, and technology may need to be qualitatively assessed to yield an understanding of the phenomena adequate for theory development or problem solving (<xref ref-type="bibr" rid="R56" id="65" class="deo:Reference">Klein and Meyers 1999</xref>). As field studies enable behavioral- science researchers to understand organizational phenomena in context, the process of constructing and exercising innovative IT artifacts enable design-science researchers to understand the problem addressed by the artifact and the feasibility of their approach to its solution (<xref ref-type="bibr" rid="R74" id="66" class="deo:Reference">Nunamaker et al. 1991a</xref>).<marker type="block"/> The primary goal of this paper is to inform the community of IS researchers and practitioners of how to conduct, evaluate, and present design- science research. We do so by describing the boundaries of design science within the IS discipline via a conceptual framework for understanding information systems research and by developing a set of guidelines for conducting and evaluating good design-science research. We focus primarily on technology-based design although we note with interest the current explora-<marker type="page" number="4"/><marker type="column" number="1"/><marker type="block"/> tion of organizations, policies, and work practices as designed artifacts (<xref ref-type="bibr" rid="R16" id="72" class="deo:Reference">Boland 2002</xref>). Following <xref ref-type="bibr" rid="R56" id="73" class="deo:Reference">Klein and Myers (1999)</xref> treatise on the conduct and evaluation of interpretive research in IS, we use the proposed guidelines to assess recent exemplar papers published in the IS literature in order to illustrate how authors, reviewers, and editors can apply them consistently. We conclude with an analysis of the challenges of performing high-quality design-science research and a call for synergistic efforts between behavioral-science and design-science researchers.</region>
        <outsider class="DoCO:TextBox" type="page_nr" id="42" page="2" column="2">76</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="43" page="2" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="header" id="44" page="3" column="1">Hevner et al./Design Science in IS Research</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="69" page="3" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="70" page="3" column="2">77</outsider>
        <outsider class="DoCO:TextBox" type="header" id="71" page="4" column="1">Hevner et al./Design Science in IS Research</outsider>
      </section>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="75" page="4" column="1">A Framework for IS Research</h1>
        <region class="DoCO:TextChunk" id="109" page="4" column="1">Information systems and the organizations they support are complex, artificial, and purposefully designed. They are composed of people, structures, technologies, and work systems ( <xref ref-type="bibr" rid="R6" id="76" class="deo:Reference">Alter 2003</xref>; <xref ref-type="bibr" rid="R20" id="77" class="deo:Reference">Bunge 1985</xref>; <xref ref-type="bibr" rid="R93" id="78" class="deo:Reference">Simon 1996</xref>). Much of the work performed by IS practitioners, and managers in general (<xref ref-type="bibr" rid="R16" id="79" class="deo:Reference">Boland 2002</xref>), deals with design—the purposeful organization of resources to accom- plish a goal. <xref ref-type="fig" rid="F1" id="80" class="deo:Reference">Figure 1</xref> illustrates the essential alignments between business and information technology strategies and between organizational and information systems infrastructures (Henderson and <xref ref-type="bibr" rid="R45" id="81" class="deo:Reference">Venkatraman 1993</xref>). The effective transi- tion of strategy into infrastructure requires extensive design activity on both sides of the figure— organizational design to create an effective organizational infrastructure and information systems design to create an effective information system infrastructure.<marker type="block"/> These are interdependent design activities that are central to the IS discipline. Hence, IS research must address the interplay among business strategy, IT strategy, organizational infrastructure, and IS infrastructure. This interplay is becoming more crucial as information technologies are seen as enablers of business strategy and organizational infrastructure (<xref ref-type="bibr" rid="R50" id="83" class="deo:Reference">Kalakota and Robinson 2001</xref>; <xref ref-type="bibr" rid="R77" id="84" class="deo:Reference">Orlikowski and Barley 2001</xref>). Available and emerging IT capabilities are a significant factor in determining the strategies that guide an organization. Cutting-edge information systems allow<marker type="column" number="2"/><marker type="block"/> organizations to engage new forms and new structures—to change the ways they “do busi- ness” (<xref ref-type="bibr" rid="R33" id="86" class="deo:Reference">Drucker 1988</xref>, 1991; <xref ref-type="bibr" rid="R76" id="87" class="deo:Reference">Orlikowski 2000</xref>). Our subsequent discussion of design science will be limited to the activities of building the IS infrastructure within the business organization. Issues of strategy, alignment, and organizational infrastructure design are outside the scope of this paper.<marker type="block"/> To achieve a true understanding of and appreciation for design science as an IS research paradigm, an important dichotomy must be faced. Design is both a process (set of activities) and a product (artifact)—a verb and a noun (<xref ref-type="bibr" rid="R102" id="89" class="deo:Reference">Walls et al. 1992</xref>). It describes the world as acted upon (processes) and the world as sensed (artifacts). This Platonic view of design supports a problem- solving paradigm that continuously shifts perspec- tive between design processes and designed artifacts for the same complex problem. The design process is a sequence of expert activities that produces an innovative product (i.e., the design artifact). The evaluation of the artifact then provides feedback information and a better understanding of the problem in order to improve both the quality of the product and the design process. This build-and-evaluate loop is typically iterated a number of times before the final design artifact is generated (<xref ref-type="bibr" rid="R68" id="90" class="deo:Reference">Markus et al. 2002</xref>). During this creative process, the design-science researcher must be cognizant of evolving both the design process and the design artifact as part of the research.<marker type="block"/>  <xref ref-type="bibr" rid="R55" id="92" class="deo:Reference">March and Smith (1995)</xref> identify two design processes and four design artifacts produced by design-science research in IS. The two processes are build and evaluate. The artifacts are constructs, models, methods, and instantiations. Purposeful artifacts are built to address heretofore unsolved problems. They are evaluated with respect to the utility provided in solving those problems. Constructs provide the language in which problems and solutions are defined and communicated (<xref ref-type="bibr" rid="R89" id="93" class="deo:Reference">Schön 1983</xref>). Models use constructs to represent a real world situation—the design problem and its solution space (<xref ref-type="bibr" rid="R93" id="94" class="deo:Reference">Simon 1996</xref>). Models aid problem and solution understanding and frequently represent the connection<marker type="page" number="5"/><marker type="column" number="1"/><marker type="block"/> between problem and solution components enabling exploration of the effects of design decisions and changes in the real world. Methods define processes. They provide guidance on how to solve problems, that is, how to search the solution space. These can range from formal, mathematical algorithms that explicitly define the search process to informal, textual descriptions of “best practice” approaches, or some combination. Instantiations show that constructs, models, or methods can be implemented in a working system. They demonstrate feasibility, enabling concrete assessment of an artifact’s suitability to its intended purpose. They also enable researchers to learn about the real world, how the artifact affects it, and how users appropriate it.<marker type="block"/>  <xref ref-type="fig" rid="F2" id="102" class="deo:Reference">Figure 2</xref> presents our conceptual framework for understanding, executing, and evaluating IS research combining behavioral-science and design-science paradigms. We use this framework to position and compare these paradigms.<marker type="block"/> The environment defines the problem space (<xref ref-type="bibr" rid="R93" id="104" class="deo:Reference">Simon 1996</xref>) in which reside the phenomena of interest. For IS research, it is composed of<marker type="column" number="2"/><marker type="block"/> people, (business) organizations, and their existing or planned technologies (<xref ref-type="bibr" rid="R92" id="107" class="deo:Reference">Silver et al. 1995</xref>). In it are the goals, tasks, problems, and opportunities that define business needs as they are perceived by people within the organization. Such perceptions are shaped by the roles, capabilities, and characteristics of people within the organization. Business needs are assessed and evaluated within the context of organizational strategies, structure, culture, and existing business processes. They are positioned relative to existing technology infrastructure, applications, communication architectures, and development capabilities. Together these define the business need or “problem” as perceived by the researcher. Framing research activities to address business needs assures research relevance.<marker type="block"/> Given such an articulated business need, IS research is conducted in two complementary phases. Behavioral science addresses research through the development and justification of theories that explain or predict phenomena related to the identified business need. Design science addresses research through the building and evaluation of artifacts designed to meet the iden-</region>
        <outsider class="DoCO:TextBox" type="page_nr" id="96" page="4" column="2">78</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="97" page="4" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="header" id="98" page="5" column="1">Hevner et al./Design Science in IS Research</outsider>
        <region class="unknown" id="99" page="5" column="1">Strategy Business Alignment Strategy Organizational Design Activities Infrastructure Organizational Alignment Infrastructure</region>
        <region class="DoCO:FigureBox" id="F1">
          <caption class="deo:Caption" id="100" page="5" column="1">Figure 1. Organizational Design and Information Systems Design Activities (Adapted from J. Henderson and N. Venkatraman, “Strategic Alignment: Leveraging Information Technology for Transforming Organizations,” IBM Systems Journal (32:1), 1993.)</caption>
        </region>
        <region class="unknown" id="106" page="5" column="2">Information Technology Strategy Information Systems Design Activities Information Systems Infrastructure</region>
        <outsider class="DoCO:TextBox" type="footer" id="110" page="5" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="111" page="5" column="2">79</outsider>
        <outsider class="DoCO:TextBox" type="header" id="112" page="6" column="1">Hevner et al./Design Science in IS Research</outsider>
        <region class="DoCO:TextChunk" id="113" confidence="possible" page="6" column="1">Environment Relevance IS Research People • Roles Develop/Build • Capabilities • Theories • Characteristics • Artifacts Organizations Business • Strategies Needs • Structure &amp; Culture Assess • Processes Technology Justify/Evaluate • Infrastructure • Analytical • Applications • Case Study • Communications • Experimental Architecture • Field Study • Development • Simulation Capabilities Application in the Appropriate Environment</region>
        <region class="DoCO:FigureBox" id="F2">
          <caption class="deo:Caption" id="114" page="6" column="1">Figure 2. Information Systems Research Framework</caption>
        </region>
        <region class="DoCO:TextChunk" id="115" page="6" column="1">tified business need. The goal of behavioral- science research is truth. 2 The goal of design- science research is utility. As argued above, our position is that truth and utility are inseparable. Truth informs design and utility informs theory. An artifact may have utility because of some as yet undiscovered truth. A theory may yet to be developed to the point where its truth can be incorpor- ated into design. In both cases, research assessment via the justify/evaluate activities can result in the identification of weaknesses in the theory or</region>
        <region class="DoCO:TextChunk" id="116" confidence="possible" page="6" column="1">2 Theories posed in behavioral science are principled explanations of phenomena. We recognize that such theories are approximations and are subject to numerous assumptions and conditions. However, they are evaluated against the norms of truth or explanatory power and are valued only as the claims they make are borne out in reality.</region>
        <region class="DoCO:TextChunk" id="117" confidence="possible" page="6" column="2">Rigor Knowledge Base Foundations • Theories • Frameworks • Instruments Applicable • Constructs • Models Knowledge • Methods Refine • Instantiations Methodologies • Data Analysis Techniques • Formalisms • Measures • Validation Criteria Additions to the Knowledge Base</region>
        <region class="DoCO:TextChunk" id="135" page="6" column="2">artifact and the need to refine and reassess. The refinement and reassessment process is typically described in future research directions. <marker type="block"/> The knowledge base provides the raw materials from and through which IS research is accomplished. The knowledge base is composed of foundations and methodologies. Prior IS research and results from reference disciplines provide foundational theories, frameworks, instruments, constructs, models, methods, and instantiations used in the develop/build phase of a research study. Methodologies provide guidelines used in the justify/evaluate phase. Rigor is achieved by appropriately applying existing foundations and methodologies. In behavioral science, methodologies are typically rooted in data collection and empirical analysis techniques. In design science, computational and mathematical methods are<marker type="page" number="7"/><marker type="column" number="1"/><marker type="block"/> primarily used to evaluate the quality and effectiveness of artifacts; however, empirical techniques may also be employed.<marker type="block"/> The contributions of behavioral science and design science in IS research are assessed as they are applied to the business need in an appropriate environment and as they add to the content of the knowledge base for further research and practice. A justified theory that is not useful for the environment contributes as little to the IS literature as an artifact that solves a nonexistent problem.<marker type="block"/> One issue that must be addressed in design- science research is differentiating routine design or system building from design research. The difference is in the nature of the problems and solutions. Routine design is the application of existing knowledge to organizational problems, such as constructing a financial or marketing information system using best practice artifacts (constructs, models, methods, and instantiations) existing in the knowledge base. On the other hand, design-science research addresses important unsolved problems in unique or innovative ways or solved problems in more effective or efficient ways. The key differentiator between routine design and design research is the clear identification of a contribution to the archival knowledge base of foundations and methodologies.<marker type="block"/> In the early stages of a discipline or with significant changes in the environment, each new artifact created for that discipline or environment is “an experiment” that “poses a question to nature” (<xref ref-type="bibr" rid="R71" id="126" class="deo:Reference">Newell and Simon 1976</xref>, p 114). Existing knowledge is used where appropriate; however, often the requisite knowledge is nonexistent (<xref ref-type="bibr" rid="R68" id="127" class="deo:Reference">Markus et al. 2002</xref>). Reliance on creativity and trial-and-error search are characteristic of such research efforts. As design-science research results are codified in the knowledge base, they become best practice. System building is then the routine application of the knowledge base to known problems.<marker type="block"/> Design activities are endemic in many professions. In particular, the engineering profession<marker type="column" number="2"/><marker type="block"/> has produced a considerable literature on design (<xref ref-type="bibr" rid="R35" id="130" class="deo:Reference">Dym 1994</xref>; <xref ref-type="bibr" rid="R80" id="131" class="deo:Reference">Pahl and Beitz 1996</xref>; <xref ref-type="bibr" rid="R82" id="132" class="deo:Reference">Petroski 1996</xref>). Within the IS discipline, many design activities have been extensively studied, formalized, and become normal or routine. Design-science research in IS addresses what are considered to be wicked problems (<xref ref-type="bibr" rid="R19" id="133" class="deo:Reference">Brooks 1987</xref>, 1996; <xref ref-type="bibr" rid="R84" id="134" class="deo:Reference">Rittel and Webber 1984</xref>). That is, those problems characterized by</region>
        <outsider class="DoCO:TextBox" type="page_nr" id="120" page="6" column="2">80</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="121" page="6" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="header" id="122" page="7" column="1">Hevner et al./Design Science in IS Research</outsider>
        <region class="DoCO:TextChunk" id="136" confidence="possible" page="7" column="2">• unstable requirements and constraints based upon ill-defined environmental contexts • complex interactions among subcomponents of the problem and its solution • inherent flexibility to change design processes as well as design artifacts (i.e., malleable processes and artifacts) • a critical dependence upon human cognitive abilities (e.g., creativity) to produce effective solutions • a critical dependence upon human social abilities (e.g., teamwork) to produce effective solutions</region>
        <region class="DoCO:TextChunk" id="140" page="7" column="2">As a result, we agree with <xref ref-type="bibr" rid="R93" id="137" class="deo:Reference">Simon (1996)</xref> that a theory of design in information systems, of necessity, is in a constant state of scientific revolution (<xref ref-type="bibr" rid="R59" id="138" class="deo:Reference">Kuhn 1996</xref>). Technological advances are the result of innovative, creative design science processes. If not capricious, they are at least arbitrary (<xref ref-type="bibr" rid="R19" id="139" class="deo:Reference">Brooks 1987</xref>) with respect to business needs and existing knowledge. Innovations, such as database management systems, high-level languages, personal computers, software components, intelligent agents, object technology, the Internet, and the World Wide Web, have had dramatic and at times unintended impacts on the way in which information systems are conceived, designed, implemented, and managed. Consequently the guidelines we present below are, of necessity, adaptive and process-oriented.</region>
        <outsider class="DoCO:TextBox" type="footer" id="141" page="7" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="142" page="7" column="2">81</outsider>
        <outsider class="DoCO:TextBox" type="header" id="143" page="8" column="1">Hevner et al./Design Science in IS Research</outsider>
      </section>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="144" page="8" column="1">Guidelines for Design Science in Information Systems Research</h1>
        <region class="DoCO:TextChunk" id="150" page="8" column="1">As discussed above, design science is inherently a problem solving process. The fundamental principle of design-science research from which our seven guidelines are derived is that knowledge and understanding of a design problem and its solution are acquired in the building and application of an artifact. That is, design-science research requires the creation of an innovative, purposeful artifact (Guideline 1) for a specified problem domain (Guideline 2). Because the artifact is purposeful, it must yield utility for the specified problem. Hence, thorough evaluation of the artifact is crucial (Guideline 3). Novelty is similarly crucial since the artifact must be innovative, solving a heretofore unsolved problem or solving a known problem in a more effective or efficient manner (Guideline 4). In this way, design-science research is differentiated from the practice of design. The artifact itself must be rigorously defined, formally represented, coherent, and internally consistent (Guideline 5). The process by which it is created, and often the artifact itself, incorporates or enables a search process whereby a problem space is constructed and a mechanism posed or enacted to find an effective solution (Guideline 6). Finally, the results of the design-science research must be communicated effectively (Guideline 7) both to a technical audience (researchers who will extend them and practitioners who will implement them) and to a managerial audience (researchers who will study them in context and practitioners who will decide if they should be implemented within their organizations). <marker type="block"/> Our purpose for establishing these seven guidelines is to assist researchers, reviewers, editors, and readers to understand the requirements for effective design-science research. Following <xref ref-type="bibr" rid="R56" id="146" class="deo:Reference">Klein and Myers (1999)</xref>, we advise against mandatory or rote use of the guidelines. Researchers, reviewers, and editors must use their creative skills and judgment to determine when, where, and how to apply each of the guidelines in a specific research project. However, we<marker type="column" number="2"/><marker type="block"/> contend that each of these guidelines should be addressed in some manner for design-science research to be complete. How well the research satisfies the intent of each of the guidelines is then a matter for the reviewers, editors, and readers to determine.<marker type="block"/>  <xref ref-type="table" rid="T1" id="149" class="deo:Reference">Table 1</xref> summarizes the seven guidelines. Each is discussed in detail below. In the following section, they are applied to specific exemplar research efforts.</region>
      </section>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="151" confidence="possible" page="8" column="2">Guideline 1: Design as an Artifact</h1>
        <region class="DoCO:TextChunk" id="198" page="8" column="2">The result of design-science research in IS is, by definition, a purposeful IT artifact created to address an important organizational problem. It must be described effectively, enabling its implementation and application in an appropriate domain. <marker type="block"/>  <xref ref-type="bibr" rid="R77" id="153" class="deo:Reference">Orlikowski and Iacono (2001)</xref> call the IT artifact the “core subject matter” of the IS field. Although they articulate multiple definitions of the term IT artifact, many of which include components of the organization and people involved in the use of a computer-based artifact, they emphasize the importance of “those bundles of cultural properties packaged in some socially recognizable form such as hardware and software” (p. 121), i.e., the IT artifact as an instantiation. <xref ref-type="bibr" rid="R107" id="154" class="deo:Reference">Weber (1987)</xref> argues that theories of long-lived artifacts (instantiations) and their representations (<xref ref-type="bibr" rid="R105" id="155" class="deo:Reference">Weber 2003</xref>) are fundamental to the IS discipline. Such theories must explain how artifacts are created and adapted to their changing environments and underlying technologies.<marker type="block"/> Our definition of IT artifacts is both broader and narrower then those articulated above. It is broader in the sense that we include not only instantiations in our definition of the IT artifact but also the constructs, models, and methods applied in the development and use of information systems. However, it is narrower in the sense that we do not include people or elements of organizations in our definition nor do we explicitly include the process by which such artifacts evolve<marker type="page" number="9"/><marker type="column" number="1"/><marker type="block"/> over time. We conceive of IT artifacts not as independent of people or the organizational and social contexts in which they are used but as interdependent and coequal with them in meeting business needs. We acknowledge that perceptions and fit with an organization are crucial to the successful development and implementation of an information system. We argue, however, that the capabilities of the constructs, models, methods, and instantiations are equally crucial and that design-science research efforts are necessary for their creation.<marker type="block"/> Furthermore, artifacts constructed in design- science research are rarely full-grown information systems that are used in practice. Instead, artifacts are innovations that define the ideas, practices, technical capabilities, and products through which the analysis, design, implementation, and use of information systems can be effectively and efficiently accomplished (Denning<marker type="column" number="2"/><marker type="block"/> 1997; <xref ref-type="bibr" rid="R99" id="166" class="deo:Reference">Tsichritzis 1998</xref>). This definition of the artifact is consistent with the concept of IS design theory as used by <xref ref-type="bibr" rid="R102" id="167" class="deo:Reference">Walls et al. (1992)</xref> and <xref ref-type="bibr" rid="R68" id="168" class="deo:Reference">Markus et al. (2002)</xref> where the theory addresses both the process of design and the designed product.<marker type="block"/> More precisely, constructs provide the vocabulary and symbols used to define problems and solutions. They have a significant impact on the way in which tasks and problems are conceived (<xref ref-type="bibr" rid="R16" id="170" class="deo:Reference">Boland 2002</xref>; <xref ref-type="bibr" rid="R89" id="171" class="deo:Reference">Schön 1983</xref>). They enable the construction of models or representations of the problem domain. Representation has a profound impact on design work. The field of mathematics was revolutionized, for example, with the constructs defined by Arabic numbers, zero, and place notation. The search for an effective problem representation is crucial to finding an effective design solution (<xref ref-type="bibr" rid="R105" id="172" class="deo:Reference">Weber 2003</xref>). Simon (1996, p. 132) states, “solving a problem simply means representing it so as to make the solution transparent.”<marker type="page" number="10"/><marker type="column" number="1"/><marker type="block"/> The entity-relationship model (<xref ref-type="bibr" rid="R23" id="177" class="deo:Reference">Chen 1976</xref>), for example, is a set of constructs for representing the semantics of data. It has had a profound impact on the way in which systems analysis and database design are executed and the way in which information systems are represented and developed. Furthermore, these constructs have been used to build models of specific business situations that have been generalized into patterns for application in similar domains (<xref ref-type="bibr" rid="R83" id="178" class="deo:Reference">Purao et al. 2003</xref>). Methods for building such models have also been the subject of considerable research (<xref ref-type="bibr" rid="R44" id="179" class="deo:Reference">Halpin 2001</xref>; <xref ref-type="bibr" rid="R69" id="180" class="deo:Reference">McCarthy 1982</xref>; <xref ref-type="bibr" rid="R81" id="181" class="deo:Reference">Parsons and Wand 2000</xref>; <xref ref-type="bibr" rid="R95" id="182" class="deo:Reference">Storey et al. 1997</xref>).<marker type="block"/> Artifact instantiation demonstrates feasibility both of the design process and of the designed product. Design-science research in IT often addresses problems related to some aspect of the design of an information system. Hence, the instantiations produced may be in the form of intellectual or software tools aimed at improving the process of information system development. Constructing a system instantiation that auto- mates a process demonstrates that the process can, in fact, be automated. It provides “proof by construction” (<xref ref-type="bibr" rid="R74" id="184" class="deo:Reference">Nunamaker 1991a</xref>). The critical nature of design-science research in IS lies in the identification of as yet undeveloped capabilities needed to expand IS into new realms “not previously believed amenable to IT support” (<xref ref-type="bibr" rid="R68" id="185" class="deo:Reference">Markus et al. 2002</xref>, p. 180). Such a result is significant IS research only if there is a serious question about the ability to construct such an artifact, there is uncertainty about its ability to perform appropriately, and the automated task is important to the IS community. TOP Modeler (<xref ref-type="bibr" rid="R68" id="186" class="deo:Reference">Markus et al. 2002</xref>), for example, is a tool that instantiates methods for the development of information systems that support “emergent knowledge processes.” Construction of such a prototype artifact in a research setting or in a single organizational setting is only a first step toward its deployment, but we argue that it is a necessary one. As an exemplar of design-science research (see below), this research resulted in a commercial product that “has been used in over two dozen ‘real use’ situations” (p. 187).<marker type="column" number="2"/><marker type="block"/> To illustrate further, prior to the construction of the first expert system (instantiation), it was not clear if such a system could be constructed. It was not clear how to describe or represent it, or how well it would perform. Once feasibility was demonstrated by constructing an expert system in a selected domain, constructs and models were developed and subsequent research in expert systems focused on demonstrating significant improvements in the product or process (methods) of construction (<xref ref-type="bibr" rid="R96" id="188" class="deo:Reference">Tam 1990</xref>; <xref ref-type="bibr" rid="R98" id="189" class="deo:Reference">Trice and Davis 1993</xref>). Similar examples exist in requirements determi- nation (<xref ref-type="bibr" rid="R12" id="190" class="deo:Reference">Bell 1993</xref>; <xref ref-type="bibr" rid="R14" id="191" class="deo:Reference">Bhargava et al. 1998</xref>), individual and group decision support systems (<xref ref-type="bibr" rid="R5" id="192" class="deo:Reference">Aiken et al. 1991</xref>; <xref ref-type="bibr" rid="R10" id="193" class="deo:Reference">Basu and Blanning 1994</xref>), database design and integration (<xref ref-type="bibr" rid="R30" id="194" class="deo:Reference">Dey et al. 1998</xref>; <xref ref-type="bibr" rid="R31" id="195" class="deo:Reference">Dey et al. 1999</xref>; <xref ref-type="bibr" rid="R95" id="196" class="deo:Reference">Storey et al. 1997</xref>), and workflow analysis (<xref ref-type="bibr" rid="R9" id="197" class="deo:Reference">Basu and Blanning 2000</xref>), to name a few important areas of IS design-science research.</region>
        <outsider class="DoCO:TextBox" type="page_nr" id="158" page="8" column="2">82</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="159" page="8" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="header" id="160" page="9" column="1">Hevner et al./Design Science in IS Research</outsider>
        <region class="DoCO:TableBox" id="T1">
          <caption class="deo:Caption" id="161" page="9" column="1">Table 1. Design-Science Research Guidelines</caption>
          <content>
            <h1 class="table"> Guideline</h1>
            <table class="DoCO:Table" number="1" page="9">
              <thead class="table">
                <tr class="table">
                  <th class="table"> Guideline</th>
                  <th class="table"> 1:</th>
                  <th class="table"> Design as an Artifact</th>
                  <th class="table"> Design-science research must produce a viable artifact in the form of a construct, a model, a method, or an instantiation.</th>
                </tr>
                <tr class="table">
                  <th class="table"> Guideline</th>
                  <th class="table"> 2:</th>
                  <th class="table"> Problem Relevance</th>
                  <th class="table"> The objective of design-science research is to develop technology-based solutions to important and relevant business problems.</th>
                </tr>
              </thead>
              <tbody>
                <tr class="table">
                  <td class="table"> Guideline</td>
                  <td class="table"> 3:</td>
                  <td class="table"> Design Evaluation</td>
                  <td class="table"> The utility, quality, and efficacy of a design artifact must be rigorously demonstrated via well-executed evaluation methods.</td>
                </tr>
                <tr class="table">
                  <td class="table"> Guideline</td>
                  <td class="table"> 4:</td>
                  <td class="table"> Research Contributions</td>
                  <td class="table"> Effective design-science research must provide clear and verifiable contributions in the areas of the design artifact, design foundations, and/or design methodologies.</td>
                </tr>
                <tr class="table">
                  <td class="table"> Guideline</td>
                  <td class="table"> 5:</td>
                  <td class="table"> Research Rigor</td>
                  <td class="table"> Design-science research relies upon the application of rigorous methods in both the construction and evaluation of the design artifact.</td>
                </tr>
                <tr class="table">
                  <td class="table"> Guideline</td>
                  <td class="table"> 6:</td>
                  <td class="table"> Design as a Search</td>
                  <td class="table"> The search for an effective artifact requires utilizing available</td>
                </tr>
                <tr class="table">
                  <td class="table"> Process</td>
                  <td class="table"></td>
                  <td class="table"></td>
                  <td class="table"> means to reach desired ends while satisfying laws in the problem environment.</td>
                </tr>
                <tr class="table">
                  <td class="table"> Guideline</td>
                  <td class="table"> 7:</td>
                  <td class="table"> Communication of</td>
                  <td class="table"> Design-science research must be presented effectively both</td>
                </tr>
                <tr class="table">
                  <td class="table"> Research</td>
                  <td class="table"></td>
                  <td class="table"></td>
                  <td class="table"> to technology-oriented as well as management-oriented audiences.</td>
                </tr>
              </tbody>
            </table>
          </content>
          <region class="TableInfo" id="162" confidence="possible" page="9" column="1">Guideline Guideline 1: Design as an Artifact Design-science research must produce a viable artifact in the form of a construct, a model, a method, or an instantiation. Guideline 2: Problem Relevance The objective of design-science research is to develop technology-based solutions to important and relevant business problems. Guideline 3: Design Evaluation The utility, quality, and efficacy of a design artifact must be rigorously demonstrated via well-executed evaluation methods. Guideline 4: Research Contributions Effective design-science research must provide clear and verifiable contributions in the areas of the design artifact, design foundations, and/or design methodologies. Guideline 5: Research Rigor Design-science research relies upon the application of rigorous methods in both the construction and evaluation of the design artifact. Guideline 6: Design as a Search The search for an effective artifact requires utilizing available Process means to reach desired ends while satisfying laws in the problem environment. Guideline 7: Communication of Design-science research must be presented effectively both Research to technology-oriented as well as management-oriented audiences.</region>
        </region>
        <region class="unknown" id="165" page="9" column="2">Description</region>
        <outsider class="DoCO:TextBox" type="footer" id="174" page="9" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="175" page="9" column="2">83</outsider>
        <outsider class="DoCO:TextBox" type="header" id="176" page="10" column="1">Hevner et al./Design Science in IS Research</outsider>
      </section>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="199" confidence="possible" page="10" column="2">Guideline 2: Problem Relevance</h1>
        <region class="DoCO:TextChunk" id="210" page="10" column="2">The objective of research in information systems is to acquire knowledge and understanding that enable the development and implementation of technology-based solutions to heretofore unsolved and important business problems. Behavioral science approaches this goal through the development and justification of theories explaining or predicting phenomena that occur. Design science approaches this goal through the construction of innovative artifacts aimed at changing the phenomena that occur. Each must inform and challenge the other. For example, the technology acceptance model provides a theory that explains and predicts the acceptance of information technologies within organizations ( <xref ref-type="bibr" rid="R100" id="200" class="deo:Reference">Venkatesh 2000</xref>). This theory challenges design-science researchers to create artifacts that enable organizations to overcome the acceptance problems predicted. We argue that a combination of technology-based artifacts (e.g., system concep- tualizations and representations, practices, technical capabilities, interfaces, etc.), organization- based artifacts (e.g., structures, compensation, reporting relationships, social systems, etc.), and people-based artifacts (e.g., training, consensus building, etc.) are necessary to address such issues.<marker type="page" number="11"/><marker type="column" number="1"/><marker type="block"/> Formally, a problem can be defined as the differences between a goal state and the current state of a system. Problem solving can be defined as a search process (see Guideline 6) using actions to reduce or eliminate the differences (<xref ref-type="bibr" rid="R93" id="205" class="deo:Reference">Simon 1996</xref>). These definitions imply an environment that imposes goal criteria as well as constraints upon a system. Business organizations are goal-oriented entities existing in an economic and social setting. Economic theory often portrays the goals of business organizations as being related to profit (utility) maximization. Hence, business problems and opportunities often relate to increasing revenue or decreasing cost through the design of effective business processes. The design of organizational and interorganizational information systems plays a major role in enabling effective business processes to achieve these goals.<marker type="block"/> The relevance of any design-science research effort is with respect to a constituent community. For IS researchers, that constituent community is the practitioners who plan, manage, design, implement, operate, and evaluate information systems and those who plan, manage, design, implement, operate, and evaluate the technologies that enable their development and implementation. To be relevant to this community, research must address the problems faced and the opportunities afforded by the interaction of people, organizations, and information technology. Organizations spend billions of dollars annually on IT, only too often to conclude that those dollars were wasted (<xref ref-type="bibr" rid="R51" id="207" class="deo:Reference">Keil 1995</xref>; <xref ref-type="bibr" rid="R52" id="208" class="deo:Reference">Keil et al. 1998</xref>; <xref ref-type="bibr" rid="R53" id="209" class="deo:Reference">Keil and Robey 1999</xref>). This community would welcome effective artifacts that enable such problems to be addressed—constructs by which to think about them, models by which to represent and explore them, methods by which to analyze or optimize them, and instantiations that demonstrate how to affect them.</region>
        <outsider class="DoCO:TextBox" type="page_nr" id="202" page="10" column="2">84</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="203" page="10" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="header" id="204" page="11" column="1">Hevner et al./Design Science in IS Research</outsider>
      </section>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="211" confidence="possible" page="11" column="1">Guideline 3: Design Evaluation</h1>
        <region class="DoCO:TextChunk" id="240" page="11" column="1">The utility, quality, and efficacy of a design artifact must be rigorously demonstrated via well- executed evaluation methods. Evaluation is a <marker type="column" number="2"/><marker type="block"/> crucial component of the research process. The business environment establishes the requirements upon which the evaluation of the artifact is based. This environment includes the technical infrastructure which itself is incrementally built by the implementation of new IT artifacts. Thus, evaluation includes the integration of the artifact within the technical infrastructure of the business environment.<marker type="block"/> As in the justification of a behavioral science theory, evaluation of a designed IT artifact requires the definition of appropriate metrics and possibly the gathering and analysis of appropriate data. IT artifacts can be evaluated in terms of functionality, completeness, consistency, accu- racy, performance, reliability, usability, fit with the organization, and other relevant quality attributes. When analytical metrics are appropriate, designed artifacts may be mathematically evaluated. As two examples, distributed database design algorithms can be evaluated using expected operating cost or average response time for a given characterization of information processing requirements (<xref ref-type="bibr" rid="R49" id="214" class="deo:Reference">Johansson et al. 2003</xref>) and search algorithms can be evaluated using information retrieval metrics such as precision and recall (<xref ref-type="bibr" rid="R87" id="215" class="deo:Reference">Salton 1988</xref>).<marker type="block"/> Because design is inherently an iterative and incremental activity, the evaluation phase provides essential feedback to the construction phase as to the quality of the design process and the design product under development. A design artifact is complete and effective when it satisfies the requirements and constraints of the problem it was meant to solve. Design-science research efforts may begin with simplified conceptuali- zations and representations of problems. As available technology or organizational environments change, assumptions made in prior research may become invalid. <xref ref-type="bibr" rid="R48" id="217" class="deo:Reference">Johansson (2000)</xref>, for example, demonstrated that network latency is a major component in the response-time performance of distributed databases. Prior research in distributed database design ignored latency because it assumed a low-bandwidth network where latency is negligible. In a high-bandwidth network, however, latency can account for over 90<marker type="page" number="12"/><marker type="column" number="1"/><marker type="block"/> percent of the response time. <xref ref-type="bibr" rid="R49" id="224" class="deo:Reference">Johansson et al. (2003)</xref> extended prior distributed database design research by developing a model that includes network latency and the effects of parallel processing on response time.<marker type="block"/> The evaluation of designed artifacts typically uses methodologies available in the knowledge base. These are summarized in <xref ref-type="table" rid="T2" id="226" class="deo:Reference">Table 2</xref>. The selection of evaluation methods must be matched appropriately with the designed artifact and the selected evaluation metrics. For example, descriptive methods of evaluation should only be used for especially innovative artifacts for which other forms of evaluation may not be feasible. The goodness and efficacy of an artifact can be rigorously demonstrated via well-selected evaluation methods (<xref ref-type="bibr" rid="R8" id="227" class="deo:Reference">Basili 1996</xref>; <xref ref-type="bibr" rid="R57" id="228" class="deo:Reference">Kleindorfer et al. 1998</xref>; <xref ref-type="bibr" rid="R111" id="229" class="deo:Reference">Zelkowitz and Wallace 1998</xref>).<marker type="column" number="2"/><marker type="block"/> Design, in all of its realizations (e.g., architecture, landscaping, art, music), has style. Given the problem and solution requirements, sufficient degrees of freedom remain to express a variety of forms and functions in the artifact that are aesthetically pleasing to both the designer and the user. Good designers bring an element of style to their work (<xref ref-type="bibr" rid="R72" id="231" class="deo:Reference">Norman 1988</xref>). Thus, we posit that design evaluation should include an assessment of the artifact’s style.<marker type="block"/> The measurement of style lies in the realm of human perception and taste. In other words, we know good style when we see it. While difficult to define, style in IS design is widely recognized and appreciated (<xref ref-type="bibr" rid="R54" id="233" class="deo:Reference">Kernighan and Plauger 1978</xref>; Winograd 1996). <xref ref-type="bibr" rid="R42" id="234" class="deo:Reference">Gelernter (1998)</xref> terms the essence of style in IS design machine beauty. He describes it as a marriage between simplicity and<marker type="page" number="13"/><marker type="column" number="1"/><marker type="block"/> power that drives innovation in science and technology. <xref ref-type="bibr" rid="R93" id="239" class="deo:Reference">Simon (1996)</xref> also notes the importance of style in the design process. The ability to creatively vary the design process, within the limits of satisfactory constraints, challenges and adds value to designers who participate in the process.</region>
        <outsider class="DoCO:TextBox" type="footer" id="219" page="11" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="220" page="11" column="2">85</outsider>
        <outsider class="DoCO:TextBox" type="header" id="221" page="12" column="1">Hevner et al./Design Science in IS Research</outsider>
        <region class="DoCO:TableBox" id="T2">
          <caption class="deo:Caption" id="222" page="12" column="1">Table 2. Design Evaluation Methods</caption>
          <content>
            <table class="DoCO:Table" number="2" page="12">
              <thead class="table">
                <tr class="table">
                  <th class="table"> 1.</th>
                  <th class="table"> Observational</th>
                  <th class="table"> Case Study: Study artifact in depth in business environment Field Study: Monitor use of artifact in multiple projects</th>
                </tr>
                <tr class="table">
                  <th class="table"> 2.</th>
                  <th class="table"> Analytical</th>
                  <th class="table"> Static Analysis: Examine structure of artifact for static qualities (e.g., complexity) Architecture Analysis: Study fit of artifact into technical IS architecture Optimization: Demonstrate inherent optimal properties of artifact or provide optimality bounds on artifact behavior Dynamic Analysis: Study artifact in use for dynamic qualities (e.g., performance)</th>
                </tr>
              </thead>
              <tbody>
                <tr class="table">
                  <td class="table"> 3.</td>
                  <td class="table"> Experimental</td>
                  <td class="table"> Controlled Experiment: Study artifact in controlled environment for qualities (e.g., usability) Simulation – Execute artifact with artificial data</td>
                </tr>
                <tr class="table">
                  <td class="table"> 4.</td>
                  <td class="table"> Testing</td>
                  <td class="table"> Functional (Black Box) Testing: Execute artifact interfaces to discover failures and identify defects Structural (White Box) Testing: Perform coverage testing of some metric (e.g., execution paths) in the artifact implementation</td>
                </tr>
                <tr class="table">
                  <td class="table"> 5.</td>
                  <td class="table"> Descriptive</td>
                  <td class="table"> Informed Argument: Use information from the knowledge base (e.g., relevant research) to build a convincing argument for the artifact’s utility Scenarios: Construct detailed scenarios around the artifact to demonstrate its utility</td>
                </tr>
              </tbody>
            </table>
          </content>
          <region class="TableInfo" id="223" confidence="possible" page="12" column="1">1. Observational Case Study: Study artifact in depth in business environment Field Study: Monitor use of artifact in multiple projects 2. Analytical Static Analysis: Examine structure of artifact for static qualities (e.g., complexity) Architecture Analysis: Study fit of artifact into technical IS architecture Optimization: Demonstrate inherent optimal properties of artifact or provide optimality bounds on artifact behavior Dynamic Analysis: Study artifact in use for dynamic qualities (e.g., performance) 3. Experimental Controlled Experiment: Study artifact in controlled environment for qualities (e.g., usability) Simulation – Execute artifact with artificial data 4. Testing Functional (Black Box) Testing: Execute artifact interfaces to discover failures and identify defects Structural (White Box) Testing: Perform coverage testing of some metric (e.g., execution paths) in the artifact implementation 5. Descriptive Informed Argument: Use information from the knowledge base (e.g., relevant research) to build a convincing argument for the artifact’s utility Scenarios: Construct detailed scenarios around the artifact to demonstrate its utility</region>
        </region>
        <outsider class="DoCO:TextBox" type="page_nr" id="236" page="12" column="2">86</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="237" page="12" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="header" id="238" page="13" column="1">Hevner et al./Design Science in IS Research</outsider>
      </section>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="241" confidence="possible" page="13" column="1">Guideline 4: Research Contributions</h1>
        <region class="DoCO:TextChunk" id="242" page="13" column="1">Effective design-science research must provide clear contributions in the areas of the design artifact, design construction knowledge (i.e., foundations), and/or design evaluation knowledge (i.e., methodologies). The ultimate assessment for any research is, “What are the new and interesting contributions?” Design-science research holds the potential for three types of research contributions based on the novelty, generality, and significance of the designed artifact. One or more of these contributions must be found in a given research project.</region>
        <region class="DoCO:TextChunk" id="245" confidence="possible" page="13" column="1">1. The Design Artifact. Most often, the contribution of design-science research is the artifact itself. The artifact must enable the solution of heretofore unsolved problems. It may extend the knowledge base (see below) or apply existing knowledge in new and innovative ways. As shown in <xref ref-type="fig" rid="F2" id="243" class="deo:Reference">Figure 2</xref> by the left-facing arrow at the bottom of the figure from IS Research to the Environment, exercising the artifact in the environment produces significant value to the constituent IS community. System development methodologies, design tools, and prototype systems (e.g., GDSS, expert systems) are examples of such artifacts. 2. Foundations. The creative development of novel, appropriately evaluated constructs, models, methods, or instantiations that extend and improve the existing foundations in the design-science knowledge base are also important contributions. The right-facing arrow at the bottom of the figure from IS Research to the Knowledge Base in <xref ref-type="fig" rid="F2" id="244" class="deo:Reference">Figure 2</xref> indicates these contributions. Modeling</region>
        <region class="DoCO:TextChunk" id="254" confidence="possible" page="13" column="2">formalisms, ontologies (<xref ref-type="bibr" rid="R104" id="246" class="deo:Reference">Wand and Weber 1993</xref>, 1995; <xref ref-type="bibr" rid="R106" id="247" class="deo:Reference">Weber 1997</xref>), problem and solution representations, design algorithms (<xref ref-type="bibr" rid="R95" id="248" class="deo:Reference">Storey et al. 1997</xref>), and innovative information systems (<xref ref-type="bibr" rid="R5" id="249" class="deo:Reference">Aiken 1991</xref>; <xref ref-type="bibr" rid="R68" id="250" class="deo:Reference">Markus et al. 2002</xref>; <xref ref-type="bibr" rid="R102" id="251" class="deo:Reference">Walls et al. 1992</xref>) are examples of such artifacts. 3. Methodologies. Finally, the creative development and use of evaluation methods (e.g., experimental, analytical, observational, testing, and descriptive) and new evaluation metrics provide design-science research contributions. Measures and evaluation metrics in particular are crucial components of design-science research. The right-facing arrow at the bottom of the figure from IS Research to the Knowledge Base in <xref ref-type="fig" rid="F2" id="252" class="deo:Reference">Figure 2</xref> also indicates these contributions. TAM, for example, presents a framework for predicting and explaining why a particular information system will or will not be accepted in a given organizational setting (<xref ref-type="bibr" rid="R100" id="253" class="deo:Reference">Venkatesh 2000</xref>). Although TAM is posed as a behavioral theory, it also provides metrics by which a designed information system or implementation process can be evaluated. Its implications for design itself are as yet unexplored.</region>
        <region class="DoCO:TextChunk" id="255" page="13" column="2">Criteria for assessing contribution focus on representational fidelity and implementability. Artifacts must accurately represent the business and technology environments used in the research, information systems themselves being models of the business. These artifacts must be “implementable,” hence the importance of instan- tiating design science artifacts. Beyond these, however, the research must demonstrate a clear contribution to the business environment, solving an important, previously unsolved problem.</region>
      </section>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="256" confidence="possible" page="13" column="2">Guideline 5: Research Rigor</h1>
        <region class="DoCO:TextChunk" id="268" page="13" column="2">Rigor addresses the way in which research is conducted. Design-science research requires the application of rigorous methods in both the construction and evaluation of the designed artifact. In behavioral-science research, rigor is <marker type="page" number="14"/><marker type="column" number="1"/><marker type="block"/> often assessed by adherence to appropriate data collection and analysis techniques. Over- emphasis on rigor in behavioral IS research has often resulted in a corresponding lowering of relevance (<xref ref-type="bibr" rid="R61" id="261" class="deo:Reference">Lee 1999</xref>).<marker type="block"/> Design-science research often relies on mathematical formalism to describe the specified and constructed artifact. However, the environments in which IT artifacts must perform and the artifacts themselves may defy excessive formalism. Or, in an attempt to be mathematically rigorous, important parts of the problem may be abstracted or “assumed away.” In particular, with respect to the construction activity, rigor must be assessed with respect to the applicability and generalizability of the artifact. Again, an overemphasis on rigor can lessen relevance. We argue, along with behavioral IS researchers (<xref ref-type="bibr" rid="R7" id="263" class="deo:Reference">Applegate 1999</xref>), that it is possible and necessary for all IS research paradigms to be both rigorous and relevant.<marker type="block"/> In both design-science and behavioral-science research, rigor is derived from the effective use of the knowledge base—theoretical foundations and research methodologies. Success is predicated on the researcher’s skilled selection of appropriate techniques to develop or construct a theory or artifact and the selection of appropriate means to justify the theory or evaluate the artifact.<marker type="block"/> Claims about artifacts are typically dependent upon performance metrics. Even formal mathematical proofs rely on evaluation criteria against which the performance of an artifact can be measured. Design-science researchers must constantly assess the appropriateness of their metrics and the construction of effective metrics is an important part of design-science research.<marker type="block"/> Furthermore, designed artifacts are often components of a human-machine problem-solving system. For such artifacts, knowledge of behavioral theories and empirical work are necessary to construct and evaluate such artifacts. Constructs, models, methods, and instantiations must be exercised within appropriate environments. Appropriate subject groups must be obtained for such studies. Issues that are addressed include<marker type="column" number="2"/><marker type="block"/> comparability, subject selection, training, time, and tasks. Methods for this type of evaluation are not unlike those for justifying or testing behavioral theories. However, the principal aim is to determine how well an artifact works, not to theorize about or prove anything about why the artifact works. This is where design-science and behavioral-science researchers must complement one another. Because design-science artifacts are often the “machine” part of the human- machine system constituting an information system, it is imperative to understand why an artifact works or does not work to enable new artifacts to be constructed that exploit the former and avoid the latter.</region>
        <outsider class="DoCO:TextBox" type="footer" id="258" page="13" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="259" page="13" column="2">87</outsider>
        <outsider class="DoCO:TextBox" type="header" id="260" page="14" column="1">Hevner et al./Design Science in IS Research</outsider>
      </section>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="269" confidence="possible" page="14" column="2">Guideline 6: Design as a Search Process</h1>
        <region class="DoCO:TextChunk" id="275" page="14" column="2">Design science is inherently iterative. The search for the best, or optimal, design is often intractable for realistic information systems problems. Heuristic search strategies produce feasible, good designs that can be implemented in the business environment. <xref ref-type="bibr" rid="R93" id="270" class="deo:Reference">Simon (1996)</xref> describes the nature of the design process as a Generate/Test Cycle (<xref ref-type="fig" rid="F3" id="271" class="deo:Reference">Figure 3</xref>).<marker type="block"/> Design is essentially a search process to discover an effective solution to a problem. Problem solving can be viewed as utilizing available means to reach desired ends while satisfying laws existing in the environment (<xref ref-type="bibr" rid="R93" id="273" class="deo:Reference">Simon 1996</xref>). Abstraction and representation of appropriate means, ends, and laws are crucial components of design-science research. These factors are problem and environment dependent and invariably involve creativity and innovation. Means are the set of actions and resources available to construct a solution. Ends represent goals and constraints on the solution. Laws are uncontrollable forces in the environment. Effective design requires knowledge of both the application domain (e.g., requirements and constraints) and the solution domain (e.g., technical and organizational).<marker type="block"/> Design-science research often simplifies a problem by explicitly representing only a subset of the</region>
        <outsider class="DoCO:TextBox" type="page_nr" id="276" page="14" column="2">88</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="277" page="14" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="header" id="278" page="15" column="1">Hevner et al./Design Science in IS Research</outsider>
        <region class="DoCO:TextChunk" id="279" confidence="possible" page="15" column="1">Generate Design Alternatives Test Alternatives Against Requirements/Constraints</region>
        <region class="DoCO:FigureBox" id="F3">
          <caption class="deo:Caption" id="280" page="15" column="1">Figure 3. The Generate/Test Cycle</caption>
        </region>
        <region class="DoCO:TextChunk" id="293" page="15" column="1">relevant means, ends, and laws or by decom- posing a problem into simpler subproblems. Such simplifications and decompositions may not be realistic enough to have a significant impact on practice but may represent a starting point. Progress is made iteratively as the scope of the design problem is expanded. As means, ends, and laws are refined and made more realistic, the design artifact becomes more relevant and valuable. The means, ends, and laws for IS design problems can often be represented using the tools of mathematics and operations research. Means are represented by decision variables whose values constitute an implementable design solution. Ends are represented using a utility function and constraints that can be expressed in terms of decision variables and constants. Laws are represented by the values of constants used in the utility function and constraints. <marker type="block"/> The set of possible design solutions for any problem is specified as all possible means that satisfy all end conditions consistent with identified laws. When these can be formulated appropriately and posed mathematically, standard operations research techniques can be used to determine an optimal solution for the specified end conditions. Given the wicked nature of many information system design problems, however, it<marker type="column" number="2"/><marker type="block"/> may not be possible to determine, let alone explicitly describe, the relevant means, ends, or laws (<xref ref-type="bibr" rid="R101" id="283" class="deo:Reference">Vessey and Glass 1998</xref>). Even when it is possible to do so, the sheer size and complexity of the solution space will often render the problem computationally infeasible. For example, to build a “reliable, secure, and responsive information systems infrastructure,” one of the key issues faced by IS managers (Brancheau et al. 1996), a designer would need to represent all possible infrastructures (means), determine their utility and constraints (ends), and specify all cost and benefit constants (laws). Clearly such an approach is infeasible. However, this does not mean that design-science research is inappropriate for such a problem.<marker type="block"/> In such situations, the search is for satisfactory solutions, i.e., satisficing (<xref ref-type="bibr" rid="R93" id="285" class="deo:Reference">Simon 1996</xref>), without explicitly specifying all possible solutions. The design task involves the creation, utilization, and assessment of heuristic search strategies. That is, constructing an artifact that “works” well for the specified class of problems. Although its construction is based on prior theory and existing design knowledge, it may or may not be entirely clear why it works or the extent of its generalizability; it simply qualifies as “credentialed knowledge” (<xref ref-type="bibr" rid="R70" id="286" class="deo:Reference">Meehl 1986</xref>, p. 311). While it is important<marker type="page" number="16"/><marker type="column" number="1"/><marker type="block"/> to understand why an artifact works, the critical nature of design in IS makes it important to first establish that it does work and to characterize the environments in which it works, even if we cannot completely explain why it works. This enables IS practitioners to take advantage of the artifact to improve practice and provides a context for additional research aimed at more fully explicating the resultant phenomena. <xref ref-type="bibr" rid="R68" id="291" class="deo:Reference">Markus et al. (2002)</xref>, for example, describe their search process in terms of iteratively identifying deficiencies in constructed prototype software systems and creatively developing solutions to address them.<marker type="block"/> The use of heuristics to find “good” design solutions opens the question of how goodness is measured. Different problem representations may provide varying techniques for measuring how good a solution is. One approach is to prove or demonstrate that a heuristic design solution is always within close proximity of an optimal solution. Another is to compare produced solutions with those constructed by expert human designers for the same problem situation.</region>
        <outsider class="DoCO:TextBox" type="footer" id="288" page="15" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="289" page="15" column="2">89</outsider>
        <outsider class="DoCO:TextBox" type="header" id="290" page="16" column="1">Hevner et al./Design Science in IS Research</outsider>
      </section>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="294" confidence="possible" page="16" column="1">Guideline 7: Communication of Research</h1>
        <region class="DoCO:TextChunk" id="298" page="16" column="1">Design-science research must be presented both to technology-oriented as well as management- oriented audiences. Technology-oriented audiences need sufficient detail to enable the described artifact to be constructed (implemented) and used within an appropriate organizational context. This enables practitioners to take advantage of the benefits offered by the artifact and it enables researchers to build a cumulative knowledge base for further extension and evaluation. It is also important for such audiences to understand the processes by which the artifact was constructed and evaluated. This establishes repeatability of the research project and builds the knowledge base for further research extensions by design-science researchers in IS. <marker type="block"/> Management-oriented audiences need sufficient detail to determine if the organizational resources<marker type="column" number="2"/><marker type="block"/> should be committed to constructing (or pur- chasing) and using the artifact within their specific organizational context. <xref ref-type="bibr" rid="R112" id="297" class="deo:Reference">Zmud (1997)</xref> suggests that presentation of design-science research for a managerial audience requires an emphasis not on the inherent nature of the artifact itself, but on the knowledge required to effectively apply the artifact “within specific contexts for individual or organizational gain” (p. ix). That is, the emphasis must be on the importance of the problem and the novelty and effectiveness of the solution approach realized in the artifact. While we agree with this statement, we note that it may be necessary to describe the artifact in some detail to enable managers to appreciate its nature and understand its application. Presenting that detail in concise, well-organized appendices, as advised by Zmud, is an appropriate communication mechanism for such an audience.</region>
      </section>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="299" page="16" column="2">Application of the Design Science Research Guidelines</h1>
        <region class="DoCO:TextChunk" id="300" page="16" column="2">To illustrate the application of the design-science guidelines to IS research, we have selected three exemplar articles for analysis from three different IS journals, one from Decision Support Systems, one from Information Systems Research, and one from MIS Quarterly. Each has strengths and weaknesses when viewed through the lens of the above guidelines. Our goal is not to perform a critical evaluation of the quality of the research contributions, but rather to illuminate the design- science guidelines. The articles are</region>
        <region class="DoCO:TextChunk" id="303" confidence="possible" page="16" column="2">• <xref ref-type="bibr" rid="R40" id="301" class="deo:Reference">Gavish and Gerdes (1998)</xref>, which develops techniques for implementing anonymity in Group Decision Support Systems (GDSS) environments • <xref ref-type="bibr" rid="R3" id="302" class="deo:Reference">Aalst and Kumar (2003)</xref>, which proposes a design for an eXchangeable Routing Language (XRL) to support electronic commerce workflows among trading partners</region>
        <outsider class="DoCO:TextBox" type="page_nr" id="304" page="16" column="2">90</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="305" page="16" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="header" id="306" page="17" column="1">Hevner et al./Design Science in IS Research</outsider>
        <region class="DoCO:TextChunk" id="308" confidence="possible" page="17" column="1">• <xref ref-type="bibr" rid="R68" id="307" class="deo:Reference">Markus, Majchrzak, and Gasser (2002)</xref>, which proposes a design theory for the development of information systems built to support emergent knowledge processes</region>
        <region class="DoCO:TextChunk" id="309" page="17" column="1">The fundamental questions for design-science research are, “What utility does the new artifact provide?” and “What demonstrates that utility?” Evidence must be presented to address these two questions. That is the essence of design science. Contribution arises from utility. If existing artifacts are adequate, then design-science research that creates a new artifact is unnecessary (it is irrelevant). If the new artifact does not map adequately to the real world (rigor), it cannot provide utility. If the artifact does not solve the problem (search, implementability), it has no utility. If utility is not demonstrated (evaluation), then there is no basis upon which to accept the claims that it provides any contribution (contribution). Furthermore, if the problem, the artifact, and its utility are not presented in a manner such that the implications for research and practice are clear, then publication in the IS literature is not appropriate (communication).</region>
      </section>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="310" confidence="possible" page="17" column="1">The Design and Implementation of Anonymity in GDSS: Gavish and Gerdes</h1>
        <region class="DoCO:TextChunk" id="339" page="17" column="1">The study of group decision support systems (GDSS) has been and remains one of the most visible and successful research streams in the IS field. The use of information technology to effectively support meetings of groups of different sizes over time and space is a real problem that challenges all business organizations. Recent GDSS literature surveys demonstrate the large numbers of GDSS research papers published in the IS field and, more importantly, the wide variety of research paradigms applied to GDSS research (e.g., <xref ref-type="bibr" rid="R29" id="311" class="deo:Reference">Dennis and Wixom 2001</xref>; <xref ref-type="bibr" rid="R38" id="312" class="deo:Reference">Fjermestad and Hiltz 1998</xref>; <xref ref-type="bibr" rid="R73" id="313" class="deo:Reference">Nunamaker et al. 1996</xref>). However, only a small number of GDSS papers can be considered to make true design-science research contributions. Most assume the introduction of a new information technology or process in the<marker type="column" number="2"/><marker type="block"/> GDSS environment and then study the individual, group, or organizational implications using a behavioral-science research paradigm. Several such GDSS papers have appeared in MIS Quarterly (e.g., <xref ref-type="bibr" rid="R32" id="315" class="deo:Reference">Dickson et al. 1993</xref>; <xref ref-type="bibr" rid="R39" id="316" class="deo:Reference">Gallupe et al. 1988</xref>; <xref ref-type="bibr" rid="R47" id="317" class="deo:Reference">Jarvenpaa et al. 1988</xref>; Sengupta and <xref ref-type="bibr" rid="R91" id="318" class="deo:Reference">Te’eni 1993</xref>).<marker type="block"/> The central role of design science in GDSS is clearly recognized in the early foundation papers of the field. The University of Arizona Electronic Meeting System group, for example, states the need for both developmental and empirical research agendas (<xref ref-type="bibr" rid="R28" id="320" class="deo:Reference">Dennis et al. 1988</xref>; Nunamaker et al. 1991b). Developmental, or design- science, research is called for in the areas of process structures and support and task structures and support. Process structure and support technologies and methods are generic to all GDSS environments and tasks. Technologies and methods for distributed communications, group memory, decision-making methods, and anonymity are a few of the critical design issues for GDSS process support needed in any task domain. Task structure and support are specific to the problem domain under consideration by the group (e.g., medical decision making, software development). Task support includes the design of new technologies and methods for managing and analyzing task-related information and using that information to make specific, task-related decisions.<marker type="block"/> The issue of anonymity has been studied extensively in GDSS environments. Behavioral research studies have shown both positive and negative impacts on group interactions. On the positive side, GDSS participants can express their views freely without fear of embarrassment or reprisal. However, anonymity can encourage free- riding and antisocial behaviors. While the pros and cons of anonymity in GDSS are much researched, there has been a noticeable lack of research on the design of techniques for implementing anonymity in GDSS environments. <xref ref-type="bibr" rid="R40" id="322" class="deo:Reference">Gavish and Gerdes (1998)</xref> address this issue by designing five basic mechanisms to provide GDSS procedural anonymity.<marker type="page" number="18"/><marker type="column" number="1"/><marker type="block"/> The amount of interest and research on anonymity issues in GDSS testifies to its relevance. Field studies and surveys clearly indicate that participants rank anonymity as a highly desired attribute in the GDSS system. Many individuals state that they would refuse to participate in or trust the results of a GDSS meeting without a satisfactory level of assured anonymity (<xref ref-type="bibr" rid="R38" id="328" class="deo:Reference">Fjermestad and Hiltz 1998</xref>).<marker type="block"/> Gavish and Gerdes base their GDSS anonymity designs on past research in the fields of crypto- graphy and secure network communication protocols (e.g., <xref ref-type="bibr" rid="R22" id="331" class="deo:Reference">Chaum 1981</xref>; <xref ref-type="bibr" rid="R88" id="332" class="deo:Reference">Schneier 1996</xref>). These research areas have a long history of formal, rigorous results that have been applied to the design of many practical security and privacy mechanisms. Appendix A of the exemplar paper provides a set of formal proofs that the claims made by the authors for the anonymity designs are correct and draw their validity from the knowledge base of this past research.<marker type="block"/> The authors motivate their design science research by identifying three basic types of anonymity in a GDSS system: environmental, content, and procedural. After a definition and brief discussion of each type, they focus on the design of mechanisms for procedural anonymity; the ability of the GDSS system to hide the source of any message. This is a very difficult requirement because standard network protocols typically attach source information in headers to support reliable transmission protocols. Thus, GDSS systems must modify standard communication protocols and include additional transmission procedures to ensure required levels of anonymity.<marker type="block"/> The design-science process employed by the authors is to state the desired procedural anonymity attributes of the GDSS system and then to<marker type="column" number="2"/><marker type="block"/> design mechanisms to satisfy the system requirements for anonymity. Proposed designs are presented and anonymity claims are proved to be correct. A thorough discussion of the costs and benefits of the proposed anonymity mechanisms is provided in Section 4 of the paper.<marker type="block"/> The authors design a GDSS system architecture that provides a rigorous level of procedural anonymity. Five mechanisms are employed to ensure participant anonymity:</region>
        <outsider class="DoCO:TextBox" type="footer" id="324" page="17" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="325" page="17" column="2">91</outsider>
        <outsider class="DoCO:TextBox" type="header" id="326" page="18" column="1">Hevner et al./Design Science in IS Research</outsider>
        <region class="unknown" id="327" page="18" column="1">Problem Relevance</region>
        <region class="unknown" id="330" page="18" column="1">Research Rigor</region>
        <region class="unknown" id="334" page="18" column="1">Design as a Search Process</region>
        <region class="unknown" id="338" page="18" column="2">Design as an Artifact</region>
        <region class="DoCO:TextChunk" id="340" confidence="possible" page="18" column="2">• All messages are encrypted with a unique session key • The sender’s header information is removed from all messages • All messages are re-encrypted upon retrans- mission from any GDSS server • Transmission order of messages is ran- domized • Artificial messages are introduced to thwart traffic analysis</region>
        <region class="DoCO:TextChunk" id="352" page="18" column="2">The procedures and communication protocols that implement these mechanisms in a GDSS system are the artifacts of this research. <marker type="block"/> The evaluation consists of two reported activities. First, in Appendix A, each mechanism is proved to correctly provide the claimed anonymity benefits. Formal proof methods are used to validate the effectiveness of the designed mechanisms. Second, Section 4 presents a thorough cost- benefit analysis. It is shown that the operational costs of supporting the proposed anonymity mechanisms can be quite significant. In addition, the communication protocols to implement the mechanisms add considerable complexity to the system. Thus, the authors recommend that a<marker type="page" number="19"/><marker type="column" number="1"/><marker type="block"/> cost-benefit justification be performed before determining the level of anonymity to implement for a GDSS meeting.<marker type="block"/> The authors do not claim to have implemented the proposed anonymity mechanisms in a prototype or actual GDSS system. Thus, an instantiation of the designed artifact remains to be evaluated in an operational GDSS environment.<marker type="block"/> The design-science contributions of this research are the proposed anonymity mechanisms as the design artifacts and the evaluation results in the form of formal proofs and cost-benefit analyses. These contributions advance our understanding of how best to provide participant anonymity in GDSS meetings.<marker type="block"/> Although the presentation of this research is aimed at an audience familiar with network system concepts such as encryption and communication protocols, the paper also contains important, useful information for a managerial audience. Managers should have a good understanding of the implications of anonymity in GDSS meetings. This understanding must include an appreciation of the costs of providing desired levels of participant anonymity. While the authors provide a thorough discussion of cost-benefit tradeoffs toward the end of the paper, the paper would be more accessible to a managerial audience if it included a stronger motivation up front on the important implications of anonymity in GDSS system development and operations.</region>
        <region class="unknown" id="342" page="18" column="2">Design Evaluation</region>
        <outsider class="DoCO:TextBox" type="page_nr" id="344" page="18" column="2">92</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="345" page="18" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="header" id="346" page="19" column="1">Hevner et al./Design Science in IS Research</outsider>
        <region class="unknown" id="349" page="19" column="1">Research Contributions</region>
        <region class="unknown" id="351" page="19" column="1">Research Communication</region>
      </section>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="353" confidence="possible" page="19" column="1">A Workflow Language for Interorganizational Processes: Aalst and Kumar</h1>
        <region class="DoCO:TextChunk" id="379" page="19" column="1">Workflow models are an effective means for describing, analyzing, implementing, and managing <marker type="column" number="2"/><marker type="block"/> business processes. Workflow management systems are becoming integral components of many commercial enterprise-wide information systems (<xref ref-type="bibr" rid="R63" id="355" class="deo:Reference">Leymann and Roller 2000</xref>). Standards for workflow semantics and syntax (i.e., workflow languages) and workflow architectures are promulgated by the Workflow Management Coalition (WfMC 2000). While workflow models have been used for many years to manage intra- organizational business processes, there is now a great demand for effective tools to model inter- organization processes across heterogeneous and distributed environments, such as those found in electronic commerce and complex supply chains (<xref ref-type="bibr" rid="R60" id="356" class="deo:Reference">Kumar and Zhao 2002</xref>).<marker type="block"/>  <xref ref-type="bibr" rid="R3" id="358" class="deo:Reference">Aalst and Kumar (2003)</xref> investigate the problem of exchanging business process information across multiple organizations in an automated manner. They design an eXchangable Routing Language (XRL) to capture workflow models that are then embedded in eXtensible Markup Language (XML) for electronic transmission to all participants in an interorganizational business process. The design of XRL is based upon Petri nets, which provide a formal basis for analyzing the correctness and performance of the workflows, as well as supporting the extensibility of the language. The authors develop a workflow management architecture and a prototype implementation to evaluate XRL in a proof of concept.<marker type="block"/> Interorganizational electronic commerce is growing rapidly and is projected to soon exceed one trillion dollars annually (<xref ref-type="bibr" rid="R36" id="361" class="deo:Reference">eMarketer 2002</xref>). A multitude of electronic commerce solutions are being proposed (e.g., ebXML, UDDI, RosettaNet) to enable businesses to execute transactions in standardized, open environments. While XML has been widely accepted as a protocol for exchanging business data, there is still no clear standard for exchanging business process information (e.g., workflow models). This is the very relevant problem addressed by this research.<marker type="page" number="20"/><marker type="column" number="1"/><marker type="block"/> Research on workflow modeling has long been based on rigorous mathematical techniques such as Markov chains, queueing networks, and Petri nets (<xref ref-type="bibr" rid="R2" id="367" class="deo:Reference">Aalst and Hee 2002</xref>). In this paper, Petri nets provide the underlying semantics for XRL. These formal semantics allow for powerful analysis techniques (e.g., correctness, performance) to be applied to the designed workflow models. Such formalisms also enable the development of automated tools to manipulate and analyze complex workflow designs. Each language construct in XRL has an equivalent Petri-net representation presented in the paper. The language is extensible in that adding a new construct simply requires defining its Petri-net representation and adding its syntax to the XRL. Thus, this research draws from a clearly defined and tested base of modeling literature and knowledge.<marker type="block"/> XRL is designed in the paper by performing a thorough analysis of business process requirements and identifying features provided by leading commercial workflow management systems. Using the terminology from the paper, workflows traverse routes through available tasks (i.e., business services) in the electronic business environment. The basic routing constructs of XRL define the specific control flow of the business process. The authors build 13 basic constructs into XRL: Task, Sequence, Any_sequence, Choice, Condition, Parallel_sync, Parallel_no_ sync, Parallel_part_sync, Wait_all, Wait_any, While_do, Stop, and Terminate. They show the Petri-net representation of each construct. Thus, the fundamental control flow structures of sequence, decision, iteration, and concurrency are supported in XRL.<marker type="block"/> The authors demonstrate the capabilities of XRL in several examples. However, they are careful not to claim that XRL is complete in the formal sense that all possible business processes can be modeled in XRL. The search for a complete set of XRL constructs is left for future research.<marker type="column" number="2"/><marker type="block"/> There are two clearly identifiable artifacts produced in this research. First, the workflow language XRL is designed. XRL is based on Petri- net formalisms and described in XML syntax. Interorganizational business processes are specified via XRL for execution in a distributed, heterogeneous environment.<marker type="block"/> The second research artifact is the XRL/flower workflow management architecture in which XRL- described processes are executed. The XRL routing scheme is parsed by an XML parser and stored as an XML data structure. This structure is read into a Petri-net engine which determines the next step of the business process and informs the next task provider via an e-mail message. Results of each task are sent back to the engine which then executes the next step in the process until completion. The paper presents a prototype implementation of the XRL/flower architecture as a proof of concept (<xref ref-type="bibr" rid="R3" id="374" class="deo:Reference">Aalst and Kumar 2003</xref>).<marker type="block"/> Another artifact of this research is a workflow verification tool named Wolfan that verifies the soundness of business process workflows. Soundness of a workflow requires that the workflow terminates, no Petri-net tokens are left behind upon termination, and there are no dead tasks in the workflow. This verification tool is described more completely in a different paper (<xref ref-type="bibr" rid="R1" id="376" class="deo:Reference">Aalst 1999</xref>).<marker type="block"/> The authors evaluate the XRL and XRL/flower designs in several important ways:</region>
        <region class="unknown" id="360" page="19" column="2">Problem Relevance</region>
        <outsider class="DoCO:TextBox" type="footer" id="363" page="19" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="364" page="19" column="2">93</outsider>
        <outsider class="DoCO:TextBox" type="header" id="365" page="20" column="1">Hevner et al./Design Science in IS Research</outsider>
        <region class="unknown" id="366" page="20" column="1">Research Rigor</region>
        <region class="unknown" id="369" page="20" column="1">Design as a Search Process</region>
        <region class="unknown" id="372" page="20" column="2">Design as an Artifact</region>
        <region class="unknown" id="378" page="20" column="2">Design Evaluation</region>
        <region class="DoCO:TextChunk" id="380" confidence="possible" page="20" column="2">• XRL is compared and contrasted with languages in existing commercial workflow systems and research prototypes. The majority of these languages are proprietary and difficult to adapt to ad hoc business process design. • The fit of XRL with proposed standards is studied. In particular, the Interoperability Wf-</region>
        <outsider class="DoCO:TextBox" type="page_nr" id="381" page="20" column="2">94</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="382" page="20" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="header" id="383" page="21" column="1">Hevner et al./Design Science in IS Research</outsider>
        <region class="DoCO:TextChunk" id="384" confidence="possible" page="21" column="1">XML Binding standard (WfMC 2000) does not at this time include the specification of control flow and, thus, is not suitable for interorganizational workflows. Electronic commerce standards (e.g., RosettaNet) provide some level of control flow specification for predefined business activities, but do not readily allow the ad hoc specification of business processes. • A research prototype of XRL/flower has been implemented and several of the user interface screens are presented. The screens demonstrate a mail-order routing schema case study. • The Petri-net foundation of XRL allows the authors to claim the XRL workflows can be verified for correctness and performance. XRL is extensible since new constructs can be added to the language based on their translation to underlying Petri-net representations. However, as discussed above, the authors do not make a formal claim for the representational completeness of XRL. Research Contributions</region>
        <region class="DoCO:TextChunk" id="387" page="21" column="1">The clear contributions of this research are the design artifacts—XRL (a workflow language), XRL/flower (a workflow architecture and its implemented prototype system), and Wolfan (a Petri-net verification engine). Another interesting contribution is the extension of XML in its ability to describe and transmit routing schemas (e.g., control flow information) to support interorganizational electronic commerce. <marker type="block"/> This paper provides clear information to both technical and managerial audiences. The presentation, while primarily technical with XML coding and Petri-net diagrams throughout, motivates a managerial audience with a strong introduction on risks and benefits of applying interorganizational workflows to electronic commerce applications.</region>
        <region class="unknown" id="386" page="21" column="1">Research Communication</region>
      </section>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="388" confidence="possible" page="21" column="2">Information Systems Design for Emergent Knowledge Processes: Markus, Majchrzak, and Gasser</h1>
        <region class="DoCO:TextChunk" id="418" page="21" column="2">Despite decades of research and development efforts, effective methods for developing information systems that meet the information requirements of upper management remain elusive. Early approaches used a “waterfall” approach where requirements were defined and validated prior to initiating design efforts which, in turn, were completed prior to implementation ( <xref ref-type="bibr" rid="R86" id="389" class="deo:Reference">Royce 1998</xref>). Prototyping approaches emerged next, followed by numerous proposals including CASE tool- based approaches, rapid application development, and extreme programming (<xref ref-type="bibr" rid="R58" id="390" class="deo:Reference">Kruchten 2000</xref>). <xref ref-type="bibr" rid="R102" id="391" class="deo:Reference">Walls et al. (1992)</xref> propose a framework for a prescriptive information system design theory aimed at enabling designers to construct “more effective information systems” (p. 36). They apply this framework to the design of vigilant executive information systems. The framework establishes a class of user requirements (model of design problems) that are most effectively addressed using a particular type of system solution (instantiation) designed using a prescribed set of development practices (methods). <xref ref-type="bibr" rid="R68" id="392" class="deo:Reference">Markus et al. (2002)</xref> extend this framework to the development of information systems to support emergent knowledge processes (EKPs)—processes in which structure is “neither possible nor desirable” (p. 182) and where processes are characterized by “highly unpredictable user types and work contexts” (p. 183).<marker type="block"/> The relevance and importance of the problem are well demonstrated. Markus et al. describe a class of management activities that they term emergent knowledge processes (EKPs). These include “basic research, new product development, strategic business planning, and organization design” (p. 179). They are characterized by “pro- cess emergence, unpredictable user types and use contexts, and distributed expert knowledge” (p. 186). They are crucial to many manufacturing organizations, particularly those in high-tech<marker type="page" number="22"/><marker type="column" number="1"/><marker type="block"/> industries. Such organizations recognize the need to integrate organizational design and information system design with manufacturing operations. They recognize the potential for significant performance improvements offered by such integration. Yet few have realized that potential. Markus et al. argue that this is due to a lack of an adequate design theory and lack of scientifically based tools, noting that existing information system development methodologies focus on structured or semi-structured decision processes and are inadequate for the development of systems to support EKPs. TOP Modeler, the artifact created in this research effort, squarely addresses this problem. Not surprisingly, its development attracted the attention and active participation of several large, high-tech manufacturing organizations including “Hewlett-Packard, General Motors, Digital Equipment Corporation, and Texas Instruments” (p. 186).<marker type="block"/> The presented work has theoretical foundations in both IS design theory and organizational design theory. It uses the basic notions of IS design theory presented in <xref ref-type="bibr" rid="R102" id="401" class="deo:Reference">Walls et al. (1992)</xref> and poses a prescription for designing information systems to support EKPs. Prior research in developing decision support systems, executive information systems, and expert systems serves as a foundation for this work and deficiencies of these approaches for the examined problem type serve as motivation. The knowledge-base constructed within TOP Modeler was formed from a synthesis of socio-technical systems theory and the empirical literature on organizational design knowledge. It was evaluated theoretically using standard metrics from the expert systems literature and empirically using data gathered from numerous electronics manufacturing companies in the United States. Development of TOP Modeler used an “action research paradigm” starting with a “kernel theory” based on prior development methods and theoretical results and iteratively posing and testing artifacts (prototypes) to assess progress toward the desired result. Finally, the artifact was commercialized and “used<marker type="column" number="2"/><marker type="block"/> in over two dozen ‘real use’ situations.” (p. 187). In summary, this work effectively used theoretical foundations from IS and organizational theory, applied appropriate research methods in developing the artifact, defined and applied appropriate performance measures, and tested the artifact within an appropriate context.<marker type="block"/> As discussed above, implementation and iteration are central to this research. The authors study prototypes that instantiate posed or newly learned design prescriptions. Their use and impacts were observed, problems identified, solutions posed and implemented, and the cycle was then repeated. These interventions occurred over a period of 18 months within the aforementioned companies as they dealt with organizational design tasks. As a result, not only was the TOP Modeler developed and deployed but prescriptions (methods) in the form of six principles for developing systems to support EKPs were also devised. The extensive experience, creativity, intuition, and problem solving capabilities of the researchers were involved in assessing problems and interpreting the results of deploying various TOP modeler iterations and in constructing improvements to address shortcomings identified.<marker type="block"/> The TOP Modeler is an implemented software system (instantiation). It is composed of an object-oriented user interface, an object-oriented query generator, and an analysis module built on top of a relational meta-knowledge base that enables access to “pluggable” knowledge bases representing different domains. It also includes tools to support the design and construction of these knowledge bases. The TOP Modeler supports a development process incorporating the six principles for developing systems to support EKPs. As mentioned above, TOP Modeler was commercialized and used in a number of different organizational redesign situations.<marker type="page" number="23"/><marker type="column" number="1"/><marker type="block"/> Evaluation is in the context of organizational design in manufacturing organizations, and is based on observation during the development and deployment of a single artifact, TOP Modeler. No formal evaluation was attempted in the sense of comparison with other artifacts. This is not surprising, nor is it a criticism of this work. There simply are no existing artifacts that address the same problem. However, given that methodologies for developing information systems to support semi-structured management activities are the closest available artifacts, it is appropriate to use them as a comparative measure. In effect, this was accomplished by using principles from these methodologies to inform the initial design of TOP Modeler. The identification of deficiencies in the resultant artifact provides evidence that these artifacts are ill-suited to the task at hand.<marker type="block"/> Iterative development and deployment within the context of organizational design in manufacturing organizations provide opportunities to observe improvement but do not enable formal evalua- tion—at each iteration, changes are induced in the organization that cannot be controlled. As mentioned above, the authors have taken a creative and innovative approach that, of necessity, trades off rigor for relevancy. In the initial stages of a discipline, this approach is extremely effective. TOP Modeler demonstrates the feasibility of developing an artifact to support organizational design and EKPs within high-tech manufacturing organizations. “In short, the evidence suggests that TOP Modeler was successful in supporting organizational design” (p. 187) but additional study is required to assess the comparative effectiveness of other possible approaches in this or other contexts. Again, this is not a criticism of this work; rather it is a call for further research in the general class of problems dealing with emergent knowledge processes. As additional research builds on this foundation, formal, rigorous evaluation and comparison with alternative approaches in a variety of contexts become crucial to enable claims of generalizability. As the authors point out, “Only the accumulated weight of<marker type="column" number="2"/><marker type="block"/> empirical evidence will establish the validity” of such claims.<marker type="block"/> The design-science contributions of this research are the TOP Modeler software and the design principles. TOP Modeler demonstrates the feasibility of using the design principles to develop an artifact to support EKPs. Because TOP Modeler is the first artifact to address this task, its construction is itself a contribution to design science. Furthermore, because the authors are able to articulate the design principles upon which its construction was based, these serve as hypotheses to be tested by future empirical work. Their applicability to the development of other types of information systems can also be tested. An agenda for addressing such issues is presented. This focuses on validation, evaluation, and the challenges of improvement inherent in the evaluation process.<marker type="block"/> This work presents two types of artifacts, TOP Modeler (an instantiation) and a set of design principles (method) that address a heretofore unsolved problem dealing with the design of an information system to support EKPs. Recognizing that existing system development methods and instantiations are aimed at structured or semi- structured activities, Markus et al. identify an opportunity to apply information technology in a new and innovative way. Their presentation addresses each of the design guidelines posed above. TOP Modeler exemplifies “proof by con- struction”—it is feasible to construct an information system to support EKPs. Since it is the first such artifact, its evaluation using formal methods is deferred until future research. Technical details of TOP Modeler are not presented, making it difficult for a technical researcher or practitioner to replicate their work. The uniqueness of the artifacts and the innovation inherent in them are presented so that managerial researchers and IT managers are aware of the new capabilities.</region>
        <region class="unknown" id="394" page="21" column="2">Problem Relevance</region>
        <outsider class="DoCO:TextBox" type="footer" id="396" page="21" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="397" page="21" column="2">95</outsider>
        <outsider class="DoCO:TextBox" type="header" id="398" page="22" column="1">Hevner et al./Design Science in IS Research</outsider>
        <region class="unknown" id="400" page="22" column="1">Research Rigor</region>
        <region class="unknown" id="404" page="22" column="2">Design as a Search Process</region>
        <region class="unknown" id="406" page="22" column="2">Design as an Artifact</region>
        <outsider class="DoCO:TextBox" type="page_nr" id="408" page="22" column="2">96</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="409" page="22" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="header" id="410" page="23" column="1">Hevner et al./Design Science in IS Research</outsider>
        <region class="unknown" id="411" page="23" column="1">Design Evaluation</region>
        <region class="unknown" id="415" page="23" column="2">Research Contributions</region>
        <region class="unknown" id="417" page="23" column="2">Research Communication</region>
        <outsider class="DoCO:TextBox" type="footer" id="419" page="23" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="420" page="23" column="2">97</outsider>
        <outsider class="DoCO:TextBox" type="header" id="421" page="24" column="1">Hevner et al./Design Science in IS Research</outsider>
      </section>
      <section class="deo:Conclusion">
        <h1 class="DoCO:SectionTitle" id="422" page="24" column="1">Discussion and Conclusions</h1>
        <region class="DoCO:TextChunk" id="441" page="24" column="1">Philosophical debates on how to conduct IS research (e.g., positivism vs. interpretivism) have been the focus of much recent attention ( <xref ref-type="bibr" rid="R56" id="423" class="deo:Reference">Klein and Myers 1999</xref>; <xref ref-type="bibr" rid="R85" id="424" class="deo:Reference">Robey 1996</xref>; <xref ref-type="bibr" rid="R105" id="425" class="deo:Reference">Weber 2003</xref>). The major emphasis of such debates lies in the epistemologies of research, the underlying assumption being that of the natural sciences. That is, somewhere some truth exists and somehow that truth can be extracted, explicated, and codified. The behavioral-science paradigm seeks to find “what is true.” In contrast, the design-science paradigm seeks to create “what is effective.” While it can be argued that utility relies on truth, the discovery of truth may lag the application of its utility. We argue that both design- science and behavioral-science paradigms are needed to ensure the relevance and effectiveness of IS research. Given the artificial nature of organizations and the information systems that support them, the design-science paradigm can play a significant role in resolving the fundamental dilemmas that have plagued IS research: rigor, relevance, discipline boundaries, behavior, and technology (Lee 2000).<marker type="block"/> Information systems research lies at the inter- section of people, organizations, and technology (<xref ref-type="bibr" rid="R92" id="427" class="deo:Reference">Silver et al. 1995</xref>). It relies on and contributes to cognitive science, organizational theory, management sciences, and computer science. It is both an organizational and a technical discipline that is concerned with the analysis, construction, deployment, use, evaluation, evolution, and management of information system artifacts in organizational settings (<xref ref-type="bibr" rid="R64" id="428" class="deo:Reference">Madnick 1992</xref>; <xref ref-type="bibr" rid="R77" id="429" class="deo:Reference">Orlikowski and Barley 2001</xref>).<marker type="block"/> Within this setting, the design-science research paradigm is proactive with respect to technology. It focuses on creating and evaluating innovative IT artifacts that enable organizations to address important information-related tasks. The behavioral- science research paradigm is reactive with respect to technology in the sense that it takes technology as “given.” It focuses on developing and justifying theories that explain and predict phenomena related to the acquisition, implemen-<marker type="column" number="2"/><marker type="block"/> tation, management, and use of such technologies. The dangers of a design-science research paradigm are an overemphasis on the technological artifacts and a failure to maintain an adequate theory base, potentially resulting in well-designed artifacts that are useless in real organizational settings. The dangers of a behavioral-science research paradigm are overemphasis on contex- tual theories and failure to adequately identify and anticipate technological capabilities, potentially resulting in theories and principles addressing outdated or ineffective technologies. We argue strongly that IS research must be both proactive and reactive with respect to technology. It needs a complete research cycle where design science creates artifacts for specific information problems based on relevant behavioral science theory and behavioral science anticipates and engages the created technology artifacts.<marker type="block"/> Hence, we reiterate the call made earlier by <xref ref-type="bibr" rid="R9" id="433" class="deo:Reference">March et al. (2000)</xref> to align IS design-science research with real-world production experience. Results from such industrial experience can be framed in the context of our seven guidelines. These must be assessed not only by IS design-science researchers but also by IS behavioral-science researchers who can validate the organizational problems as well as study and anticipate the impacts of created artifacts. Thus, we encourage collaborative industrial/academic research projects and publications based on such experience. <xref ref-type="bibr" rid="R68" id="434" class="deo:Reference">Markus et al. (2002)</xref> is an excellent example of such collaboration. Publication of these results will help accelerate the development of domain independent and scalable solutions to large-scale information systems problems within organizations. We recognize that a lag exists between academic research and its adoption in industry. We also recognize the possible ad hoc nature of technology-oriented solutions developed in industry. The latter gap can be reduced considerably by developing and framing the industrial solutions based on our proposed guidelines.<marker type="block"/> It is also important to distinguish between “system building” efforts and design-science research. Guidelines addressing evaluation, contributions, and rigor are especially important in providing this<marker type="page" number="25"/><marker type="column" number="1"/><marker type="block"/> distinction. The underlying formalism required by these guidelines helps researchers to develop representations of IS problems, solutions, and solution processes that clarify the knowledge produced by the research effort.<marker type="block"/> As we move forward, there exist a number of exciting challenges facing the design-science research community in IS. A few are summarized here.</region>
        <outsider class="DoCO:TextBox" type="page_nr" id="437" page="24" column="2">98</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="438" page="24" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="header" id="439" page="25" column="1">Hevner et al./Design Science in IS Research</outsider>
        <region class="DoCO:TextChunk" id="444" confidence="possible" page="25" column="1">• There is an inadequate theoretical base upon which to build an engineering discipline of information systems design (<xref ref-type="bibr" rid="R8" id="442" class="deo:Reference">Basili 1996</xref>). The field is still very young lacking the cumulative theory development found in other engineering and social-science disciplines. It is important to demonstrate the feasibility and utility of such a theoretical base to a managerial audience that must make technology- adoption decisions that can have far-reaching impacts on the organization. • Insufficient sets of constructs, models, methods, and tools exist for accurately representing the business/technology environment. Highly abstract representations (e.g., analytical mathematical models) are criticized as having no relationship to “real-world” environments. On the other hand, many informal, descriptive IS models lack an underlying theory base. The trade-offs between relevance and rigor are clearly problematic; finding representational techniques with an acceptable balance between the two is very difficult. • The existing knowledge base is often insufficient for design purposes and designers must rely on intuition, experience, and trial-and- error methods. A constructed artifact em- bodies the designer’s knowledge of the problem and solution. In new and emerging applications of technology, the artifact itself represents an experiment. In its execution, we learn about the nature of the problem, the environment, and the possible solutions— hence, the importance of developing and implementing prototype artifacts (<xref ref-type="bibr" rid="R71" id="443" class="deo:Reference">Newell and Simon 1976</xref>).</region>
        <region class="DoCO:TextChunk" id="450" confidence="possible" page="25" column="2">• Design-science research is perishable. Rapid advances in technology can invalidate design-science research results before they are implemented effectively in the business environment or, just as importantly to managers, before adequate payback can be achieved by committing organizational resources to implementing those results. Two examples are the promises made by the artificial intelligence community in the 1980s (<xref ref-type="bibr" rid="R37" id="445" class="deo:Reference">Feigenbaum and McCorduck 1983</xref>) and the more recent research on object-oriented databases (<xref ref-type="bibr" rid="R21" id="446" class="deo:Reference">Chaudhri and Loomis 1998</xref>). Just as important to IS researchers, design results can be overtaken by technology before they even appear in the research literature. How much research was published on the Year 2000 problem before it became a non-event? • Rigorous evaluation methods are extremely difficult to apply in design-science research (<xref ref-type="bibr" rid="R97" id="447" class="deo:Reference">Tichy 1998</xref>; <xref ref-type="bibr" rid="R111" id="448" class="deo:Reference">Zelkowitz and Wallace 1998</xref>). For example, the use of a design artifact on a single project may not generalize to different environments (<xref ref-type="bibr" rid="R68" id="449" class="deo:Reference">Markus et al. 2002</xref>).</region>
        <region class="DoCO:TextChunk" id="459" page="25" column="2">We believe that design science will play an increasingly important role in the IS profession. IS managers in particular are actively engaged in design activities—the creation, deployment, evaluation, and improvement of purposeful IT artifacts that enable organizations to achieve their goals. The challenge for design-science researchers in IS is to inform managers of the capabilities and impacts of new IT artifacts. <marker type="block"/> Much of the research published in MIS Quarterly employs the behavioral-science paradigm. It is passive with respect to technology, often ignoring or “under-theorizing” the artifact itself (<xref ref-type="bibr" rid="R77" id="452" class="deo:Reference">Orlikowski and Iacono 2001</xref>). Its focus is on describing the implications of technology—its impact on individuals, groups, and organizations. It regularly includes studies that examine how people employ a technology, report on the benefits and difficulties encountered when a technology is implemented within an organization, or discuss how managers might facilitate the use of a technology. <xref ref-type="bibr" rid="R79" id="453" class="deo:Reference">Orman (2002)</xref> argues that many of the equivocal results<marker type="page" number="26"/><marker type="column" number="1"/><marker type="block"/> in IS behavioral-science studies can be explained by a failure to differentiate the capabilities and purposes of the studied technology.<marker type="block"/> Design science is active with respect to technology, engaging in the creation of technological artifacts that impact people and organizations. Its focus is on problem solving but often takes a simplistic view of the people and the organizational contexts in which designed artifacts must function. As stated earlier, the design of an artifact, its formal specification, and an assessment of its utility, often by comparison with competing artifacts, are integral to design-science research. These must be combined with behavioral and organizational theories to develop an understanding of business problems, contexts, solutions, and evaluation approaches adequate to servicing the IS research and practitioner communities. The effective presentation of design- science research in major IS journals, such as MIS Quarterly, will be an important step toward integrating the design-science and behavioral- science communities in IS.</region>
        <outsider class="DoCO:TextBox" type="footer" id="455" page="25" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="456" page="25" column="2">99</outsider>
        <outsider class="DoCO:TextBox" type="header" id="457" page="26" column="1">Hevner et al./Design Science in IS Research</outsider>
      </section>
      <section class="deo:Acknowledgements">
        <h1 class="DoCO:SectionTitle" id="460" confidence="possible" page="26" column="1">Acknowledgements</h1>
        <region class="DoCO:TextChunk" id="461" page="26" column="1">We would like to thank Allen Lee, Ron Weber, and Gordon Davis who in different ways each contributed to our thinking about design science in the Information Systems profession and en- couraged us to pursue this line of research. We would also like to acknowledge the efforts of Rosann Collins who provided insightful comments and perspectives on the nature of the relationship between behavioral-science and design-science research. This work has also benefited from seminars and discussions at Arizona State University, Florida International University, Georgia State University, Michigan State University, Notre Dame University, and The University of Utah. We would particularly like to thank Brian Pentland and Steve Alter for feedback and suggestions they provided on an earlier version of this paper. The comments provided by several anonymous editors and reviewers greatly enhanced the content and presentation of the paper.</region>
      </section>
      <section class="DoCO:Bibliography">
        <h1 class="DoCO:SectionTitle" id="462" confidence="possible" page="26" column="2">References</h1>
        <ref-list class="DoCO:BiblioGraphicReferenceList">
          <ref rid="R1" class="deo:BibliographicReference" id="463" page="26" column="2">Aalst, W. “Wolfan: A Petri-Net-Based Workflow Analyzer,” Systems Analysis-Modeling-Simu- lation (34:3), 1999, pp. 345-357.</ref>
          <ref rid="R2" class="deo:BibliographicReference" id="464" page="26" column="2">Aalst, W., and Hee, K. Workflow Management: Models, Methods, and Systems, The MIT Press, Cambridge, MA, 2002.</ref>
          <ref rid="R3" class="deo:BibliographicReference" id="465" page="26" column="2">Aalst, W., and Kumar, A. “XML-Based Schema Definition for Support of Interorganizational Workflow,” Information Systems Research (14:1), March 2003, pp. 23-46.</ref>
          <ref rid="R4" class="deo:BibliographicReference" id="466" page="26" column="2">Aboulafia, M. (ed.). Philosophy, Social Theory, and the Thought of George Herbert Mead (SUNY Series in Philosophy of the Social Sciences), State University of New York Press, Albany, NY, 1991.</ref>
          <ref rid="R5" class="deo:BibliographicReference" id="467" page="26" column="2">Aiken, M. W., Sheng, O. R. L., and Vogel, D. R. “Integrating Expert Systems with Group Decision Support Systems,” ACM Transactions on Information Systems (9:1), January 1991, pp. 75-95.</ref>
          <ref rid="R6" class="deo:BibliographicReference" id="468" confidence="possible" page="26" column="2">Alter, S. “18 Reasons Why IT-Reliant Work Systems Should Replace ‘The IT Artifact’ as the Core Subject Matter of the IS Field,” Communications of the AIS (12), October 2003, pp. 365-394.</ref>
          <ref rid="R7" class="deo:BibliographicReference" id="469" page="26" column="2">Applegate, L. M. “Rigor and Relevance in MIS Research—Introduction,” MIS Quarterly (23:1), March 1999, pp. 1-2.</ref>
          <ref rid="R8" class="deo:BibliographicReference" id="470" page="26" column="2">Basili, V. “The Role of Experimentation in Software Engineering: Past, Current, and Fu- ture,” in Proceedings of the 18 th International Conference on Software Engineering, T. Maibaum and M. Zelkowitz (eds.), Berlin, Germany, March 25-29,1996, pp. 442-449.</ref>
          <ref rid="R9" class="deo:BibliographicReference" id="471" page="26" column="2">Basu, A., and Blanning, R. W. “A Formal Approach to Workflow Analysis,” Information Systems Research (11:1), March 2000, pp. 17-36.</ref>
          <ref rid="R10" class="deo:BibliographicReference" id="472" page="26" column="2">Basu, A., and Blanning, R. W. “Metagraphs: A Tool for Modeling Decision Support Systems,” Management Science (40:12), December 1994, pp. 1579-1600.</ref>
          <ref rid="R11" class="deo:BibliographicReference" id="477" page="26" column="2">Batra, D., Hoffer, J. A., and Bostrom, R. P. “A Comparison of User Performance between the Relational and the Extended Entity Rela- tionship Models in the Discovery Phase of Database Design,” Communications of the ACM (33:2), February 1990, pp. 126-139. <marker type="page" number="27"/><marker type="column" number="1"/><marker type="block"/> Bell, D. A. “From Data Properties to Evidence,” IEEE Transactions on Knowledge and Data Engineering (5:6), December 1993, pp. 965- 969.</ref>
          <ref rid="R13" class="deo:BibliographicReference" id="478" page="27" column="1">Benbasat, I., and Zmud, R. W. “Empirical Research in Information Systems: The Practice of Relevance,” MIS Quarterly (23:1), March 1999, pp. 3-16.</ref>
          <ref rid="R14" class="deo:BibliographicReference" id="479" page="27" column="1">Bhargava, H. K., Krishnan, R., and Piela, P. “On Formal Semantics and Analysis of Typed Modeling Languages: An Analysis of Ascend,” INFORMS Journal on Computing (10:2), Spring 1998, pp. 189-208.</ref>
          <ref rid="R15" class="deo:BibliographicReference" id="480" page="27" column="1">Bodart, F., Patel, A., Sim, M., and Weber, R. “Should the Optional Property Construct be Used in Conceptual Modeling? A Theory and Three Empirical Tests,” Information Systems Research (12:4), December 2001, pp 384- 405.</ref>
          <ref rid="R16" class="deo:BibliographicReference" id="482" page="27" column="1">Boland, R. J. “Design in the Punctuation of Management Action” in Managing as Designing: Creating a Vocabulary for Management Education and Research, R. Boland (ed.), Frontiers of Management Workshop, Weather- head School of Management, June 14-15, 2002 (available online at <ext-link ext-link-type="uri" href="http://design" id="481">http://design</ext-link>. cwru.edu).</ref>
          <ref rid="R17" class="deo:BibliographicReference" id="483" page="27" column="1">Brancheau, J., Janz, B., and Wetherbe, J. “Key Issues in Information Systems Management: 1994-95 SIM Delphi Results,” MIS Quarterly (20:2), June 1996, pp. 225-242.</ref>
          <ref rid="R18" class="deo:BibliographicReference" id="484" page="27" column="1">Brooks, F. P., Jr. “The Computer Scientist as Toolsmith II,” Communications of the ACM (39:3), March 1996, pp. 61-68.</ref>
          <ref rid="R19" class="deo:BibliographicReference" id="485" page="27" column="1">Brooks, F. P., Jr. “No Silver Bullet: Essence and Accidents of Software Engineering,” IEEE Computer (20:4), April 1987, pp 10-19.</ref>
          <ref rid="R20" class="deo:BibliographicReference" id="486" page="27" column="1">Bunge, M. A. Treatise on Basic Philosophy: Volume 7—Epistemology &amp; Methodology III: Philosophy of Science and Technology—Part II: Life Science, Social Science and Technology, D. Reidel Publishing Company, Boston, MA, 1985.</ref>
          <ref rid="R21" class="deo:BibliographicReference" id="487" page="27" column="1">Chaudhri, A., and Loomis, M. Object Databases in Practice, Prentice-Hall, Upper Saddle River, NJ, 1998.</ref>
          <ref rid="R22" class="deo:BibliographicReference" id="488" page="27" column="1">Chaum, D. “Untraceable Electronic Mail, Return Addresses, and Digital Pseudonyms,” Communications of the ACM (24:2), February 1981, pp. 84-87.</ref>
          <ref rid="R23" class="deo:BibliographicReference" id="489" page="27" column="2">Chen, P. P. S. “The Entity-Relationship Model: Toward a Unified View,” ACM Transactions on Database Systems (1:1), 1976, pp. 9-36.</ref>
          <ref rid="R24" class="deo:BibliographicReference" id="490" page="27" column="2">Davis, G. B., and Olson, M. H. Management Information Systems: Conceptual Foundations, Structure and Development (2 nd ed.), McGraw-Hill, New York, 1985.</ref>
          <ref rid="R25" class="deo:BibliographicReference" id="491" confidence="possible" page="27" column="2">DeLone, W. H., and McLean, E. R. “The DeLone and McLean Model of Information Systems Success: A Ten-Year Update,” Journal of Management Information Systems (19:4), Spring 2003, pp. 9-30.</ref>
          <ref rid="R26" class="deo:BibliographicReference" id="492" confidence="possible" page="27" column="2">DeLone, W. H., and McLean, E. R. “Information Systems Success: The Quest for the Dependent Variable,” Information Systems Research (3:1), March 1992, pp. 60-95.</ref>
          <ref rid="R27" class="deo:BibliographicReference" id="493" page="27" column="2">Denning, P. J. “A New Social Contract for Research,” Communications of the ACM (40:2), February 1997, pp. 132-134.</ref>
          <ref rid="R28" class="deo:BibliographicReference" id="494" page="27" column="2">Dennis, A., George, J., Jessup, L., Nunamaker, J., and Vogel, D. “Information Technology to Support Electronic Meetings,” MIS Quarterly (12:4), December 1988, pp. 591-624.</ref>
          <ref rid="R29" class="deo:BibliographicReference" id="495" page="27" column="2">Dennis, A., and Wixom, B. “Investigating the Moderators of the Group Support Systems Use with Meta-Analysis,” Journal of Management Information Systems (18:3), Winter 2001-02, pp. 235-257.</ref>
          <ref rid="R30" class="deo:BibliographicReference" id="496" page="27" column="2">Dey, D., Sarkar, S., and De, P. “A Probabilistic Decision Model for Entity Matching in Heterogeneous Databases,” Management Science (44:10), October 1998, pp. 1379-1395.</ref>
          <ref rid="R31" class="deo:BibliographicReference" id="497" page="27" column="2">Dey, D., Storey, V. C., and Barron, T. M. “Improving Database Design through the Analysis of Relationships,” ACM Transactions on Database Systems (24:4), December 1999, pp. 453-486.</ref>
          <ref rid="R32" class="deo:BibliographicReference" id="498" page="27" column="2">Dickson, G., Partridge, J., and Robinson, L. “Exploring Modes of Facilitative Support for GDSS Technology,” MIS Quarterly (17:2), June 1993, pp. 173-194.</ref>
          <ref rid="R33" class="deo:BibliographicReference" id="499" page="27" column="2">Drucker, P. F. “The Coming of the New Organi- zation,” Harvard Business Review (66:1), January-February 1988, pp. 45-53.</ref>
          <ref rid="R34" class="deo:BibliographicReference" id="500" page="27" column="2">Drucker, P. F. “The New Productivity Challenge,” Harvard Business Review (69:6), November- December 1991, pp. 45-53.</ref>
          <ref rid="R35" class="deo:BibliographicReference" id="506" page="27" column="2">Dym, C. L. Engineering Design, Cambridge University Press, New York, 1994. <marker type="page" number="28"/><marker type="column" number="1"/><marker type="block"/> eMarketer. E-Commerce Trade and B2B Ex- changes, March 2002 (available online at <ext-link ext-link-type="uri" href="http://www.emarketer.com/products/report.p" id="505">http://www.emarketer.com/products/report.p</ext-link> hp?ecommerce_trade).</ref>
          <ref rid="R37" class="deo:BibliographicReference" id="507" page="28" column="1">Feigenbaum, E., and McCorduck, P. The Fifth Generation: Artificial Intelligence and Japan’s Computer Challenge to the World, Addison- Wesley, Inc., Reading, MA, 1983.</ref>
          <ref rid="R38" class="deo:BibliographicReference" id="508" page="28" column="1">Fjermestad, J., and Hiltz, S. R. “An Assessment of Group Support Systems Experimental Research: Methodology and Results,” Journal of Management Information Systems (15:3), Winter 1998-99, pp. 7-149.</ref>
          <ref rid="R39" class="deo:BibliographicReference" id="509" page="28" column="1">Gallupe, R., DeSanctis, G., and Dickson, G. “Computer-Based Support for Group Prob- lem-Finding: An Experimental Investigation,” MIS Quarterly, (12:2), June 1988, pp. 277- 298.</ref>
          <ref rid="R40" class="deo:BibliographicReference" id="510" page="28" column="1">Gavish, B., and Gerdes, J. “Anonymous Mecha- nisms in Group Decision Support Systems Communication,” Decision Support Systems (23:4), October 1998, pp. 297-328.</ref>
          <ref rid="R41" class="deo:BibliographicReference" id="511" page="28" column="1">Geerts, G., and McCarthy, W. E. “An Ontological Analysis of the Primitives of the Extended- REA Enterprise Information Architecture,” The International Journal of Accounting Information Systems (3:1), 2002, pp. 1-16.</ref>
          <ref rid="R42" class="deo:BibliographicReference" id="512" page="28" column="1">Gelernter, D. Machine Beauty: Elegance and the Heart of Technology, Basic Books, New York, 1998.</ref>
          <ref rid="R43" class="deo:BibliographicReference" id="513" confidence="possible" page="28" column="1">Glass, R. “On Design,” IEEE Software (16:2), March/April 1999, pp. 103-104.</ref>
          <ref rid="R44" class="deo:BibliographicReference" id="514" page="28" column="1">Halpin, T. A. Information Modeling and Relational Databases, Morgan Kaufmann Publishers, New York, 2001.</ref>
          <ref rid="R45" class="deo:BibliographicReference" id="515" page="28" column="1">Henderson, J., and Venkatraman, N. “Strategic Alignment: Leveraging Information Technology for Transforming Organizations,” IBM Systems Journal (32:1), 1993.</ref>
          <ref rid="R46" class="deo:BibliographicReference" id="516" confidence="possible" page="28" column="1">ISR. Editorial Statement and Policy, Information Systems Research (13:4), December 2002.</ref>
          <ref rid="R47" class="deo:BibliographicReference" id="517" page="28" column="1">Jarvenpaa, S., Rao, V., and Huber, G. “Computer Support for Meetings of Groups Working on Unstructured Problems: A Field Experiment,” MIS Quarterly (12:4), December 1988, pp. 645-666.</ref>
          <ref rid="R48" class="deo:BibliographicReference" id="518" page="28" column="1">Johansson, J. M. “On the Impact of Network Latency on Distributed Systems Design,” Information Technology Management (1), 2000, pp. 183-194.</ref>
          <ref rid="R49" class="deo:BibliographicReference" id="519" page="28" column="2">Johansson, J. M., March, S. T., and Naumann, J. D. “Modeling Network Latency and Parallel Processing in Distributed Database Design,” Decision Sciences Journal (34:4), Fall 2003.</ref>
          <ref rid="R50" class="deo:BibliographicReference" id="520" page="28" column="2">Kalakota, R., and Robinson, M. E-Business 2.0: Roadmap for Success, Addison-Wesley Pearson Education, Boston, MA, 2001.</ref>
          <ref rid="R51" class="deo:BibliographicReference" id="521" page="28" column="2">Keil, M. “Pulling the Plug: Software Project Management and the Problem of Project Escalation,” MIS Quarterly (19:4) December 1995, pp. 421-447.</ref>
          <ref rid="R52" class="deo:BibliographicReference" id="522" page="28" column="2">Keil, M., Cule, P. E., Lyytinen, K., and Schmidt, R. C. “A Framework for Identifying Software Project Risks,” Communications of the ACM (41:11), November 1998, pp. 76-83.</ref>
          <ref rid="R53" class="deo:BibliographicReference" id="523" page="28" column="2">Keil, M., and Robey, D. “Turning Around Troubled Software Projects: An Exploratory Study of the Deescalation of Commitment to Failing Courses of Action,” Journal of Management Information Systems, (15:4) December 1999, pp. 63-87.</ref>
          <ref rid="R54" class="deo:BibliographicReference" id="524" page="28" column="2">Kernighan, B., and Plauger, P. J. The Elements of Programming Style (2 nd ed.), McGraw-Hill, New York, 1978.</ref>
          <ref rid="R55" class="deo:BibliographicReference" id="525" page="28" column="2">Kim, Y. G., and March, S. T. “Comparing Data Modeling Formalisms,” Communications of the ACM (38:6), June 1995, pp. 103-115.</ref>
          <ref rid="R56" class="deo:BibliographicReference" id="526" page="28" column="2">Klein, H. K., and Myers, M. D. “A Set of Principles for Conducting and Evaluating Interpretive Field Studies in Information Systems,” MIS Quarterly (23:1), March 1999, pp. 67-94.</ref>
          <ref rid="R57" class="deo:BibliographicReference" id="527" page="28" column="2">Kleindorfer, G., O’Neill, L., and Ganeshan, R. “Validation in Simulation: Various Positions in the Philosophy of Science,” Management Science (44:8), August 1998, pp. 1087-1099.</ref>
          <ref rid="R58" class="deo:BibliographicReference" id="528" page="28" column="2">Kruchten, P. The Rational Unified Process: An Introduction (2 nd ed.), Addison-Wesley, Inc., Reading, MA, 2000.</ref>
          <ref rid="R59" class="deo:BibliographicReference" id="529" page="28" column="2">Kuhn, T. S. The Structure of Scientific Revolu- tions (3 rd ed.), University of Chicago Press, Chicago, IL, 1996.</ref>
          <ref rid="R60" class="deo:BibliographicReference" id="530" page="28" column="2">Kumar, A., and Zhao, J. “Workflow Support for Electronic Commerce Applications,” Decision Support Systems (32:3), January 2002, pp. 265-278.</ref>
          <ref rid="R61" class="deo:BibliographicReference" id="531" page="28" column="2">Lee, A. “Inaugural Editor’s Comments,” MIS Quarterly (23:1), March 1999, pp. v-xi.</ref>
          <ref class="deo:BibliographicReference" id="537" page="28" column="2">Lee, A. “Systems Thinking, Design Science, and Paradigms: Heeding Three Lessons from the Past to Resolve Three Dilemmas in the <marker type="page" number="29"/><marker type="column" number="1"/><marker type="block"/> Present to Direct a Trajectory for Future Research in the Information Systems Field,” Keynote Address, Eleventh International Conference on Information Management, Taiwan, May 2000 (available online at <ext-link ext-link-type="uri" href="http://www" id="536">http://www</ext-link>. people.vcu.edu/~aslee/ICIM-keynote-2000).</ref>
          <ref rid="R63" class="deo:BibliographicReference" id="538" page="29" column="1">Leymann, F., and Roller, D. Production Workflow: Concepts and Techniques, Prentice-Hall, Upper Saddle River, NJ, 2000.</ref>
          <ref rid="R64" class="deo:BibliographicReference" id="539" page="29" column="1">Madnick, S. E. “The Challenge: To Be Part of the Solution Instead of Being Part of the Prob- lem,” in Proceedings of the Second Annual Workshop on Information Technology and Systems, V. Storey and A. Whinston (eds.), Dallas, TX, December 12-13, 1992, pp. 1-9.</ref>
          <ref rid="R65" class="deo:BibliographicReference" id="540" page="29" column="1">Marakas, G. M., and Elam, J. J. “Semantic Structuring in Analyst Acquisition and Representation of Facts in Requirements Analysis,” Information Systems Research (9:1), March 1998, pp. 37-63.</ref>
          <ref rid="R66" class="deo:BibliographicReference" id="541" page="29" column="1">March, S. T., Hevner, A., and Ram, S. “Research Commentary: An Agenda for Information Technology Research in Heterogeneous and Distributed Environment,” Information Systems Research (11:4), December 2000, pp. 327-341.</ref>
          <ref rid="R67" class="deo:BibliographicReference" id="542" page="29" column="1">March, S. T., and Smith, G. “Design and Natural Science Research on Information Technology,” Decision Support Systems (15:4), December 1995, pp. 251-266.</ref>
          <ref rid="R68" class="deo:BibliographicReference" id="543" page="29" column="1">Markus, M. L., Majchrzak, A., and Gasser, L. “A Design Theory for Systems that Support Emergent Knowledge Processes,” MIS Quarterly (26:3), September, 2002, pp. 179-212.</ref>
          <ref rid="R69" class="deo:BibliographicReference" id="544" confidence="possible" page="29" column="1">McCarthy, W. E. “The REA Accounting Model: A Generalized Framework for Accounting Systems in a Shared Data Environment,” The Accounting Review (58:3), 1982, pp. 554- 578.</ref>
          <ref rid="R70" class="deo:BibliographicReference" id="545" page="29" column="1">Meehl, P. E. “What Social Scientists Don’t Understand,” in Metatheory in Social Science, D. W. Fiske and R. A. Shweder (eds.), University of Chicago Press, Chicago, IL, 1986, pp. 315-338.</ref>
          <ref rid="R71" class="deo:BibliographicReference" id="547" page="29" column="1">Newell, A., and Simon, H. “Computer Science as Empirical Inquiry: Symbols and Search,” Communications of the ACM (19:3), March 1976, pp. 113-126. <marker type="column" number="2"/><marker type="block"/> Norman, D. The Design of Everyday Things, Currency Doubleday, New York, 1988.</ref>
          <ref rid="R73" class="deo:BibliographicReference" id="548" page="29" column="2">Nunamaker, J., Briggs, R., Mittleman, D., Vogel, D., and Balthazard, P. “Lessons from a Dozen Years of Group Support Systems Research: A Discussion of Lab and Field Findings,” Journal of Management Information Systems, (13:3), Winter 1996-97, pp. 163-207.</ref>
          <ref rid="R74" class="deo:BibliographicReference" id="549" page="29" column="2">Nunamaker, J., Chen, M., and Purdin, T. D. M. “Systems Development in Information Systems Research,” Journal of Management Information Systems (7:3), Winter 1991a, pp. 89-106.</ref>
          <ref rid="R75" class="deo:BibliographicReference" id="550" page="29" column="2">Nunamaker, J., Dennis, A., Valacich, J., Vogel, D., and George, J. “Electronic Meeting Systems to Support Group Work,” Communications of the ACM, (34:7), July 1991b, pp. 40-61.</ref>
          <ref rid="R76" class="deo:BibliographicReference" id="551" page="29" column="2">Orlikowski, W. J. “Using Technology and Con- stituting Structures: A Practice Lens for Studying Technology in Organizations.” Organization Science (11:4), December 2000, pp. 404-428.</ref>
          <ref rid="R77" class="deo:BibliographicReference" id="552" page="29" column="2">Orlikowski, W. J., and Barley, S. R. “Technology and Institutions: What Can Research on Information Technology and Research on Organizations Learn From Each Other?,” MIS Quarterly (25:2), June 2001, pp 145-165.</ref>
          <ref rid="R78" class="deo:BibliographicReference" id="553" page="29" column="2">Orlikowski, W. J., and Iacono, C. S. “Research Commentary: Desperately Seeking the ‘IT’ in IT Research—A Call to Theorizing the IT Artifact,” Information Systems Research (12:2), June 2001, pp. 121-134.</ref>
          <ref rid="R79" class="deo:BibliographicReference" id="554" page="29" column="2">Orman, L. V. “Electronic Markets, Hierarchies, Hubs, and Intermediaries,” Journal of Information Systems Frontiers (4:2), 2002, pp. 207-222.</ref>
          <ref rid="R80" class="deo:BibliographicReference" id="555" page="29" column="2">Pahl, G., and Beitz, W. Engineering Design: A Systematic Approach, Springer-Verlag, Lon- don, 1996.</ref>
          <ref rid="R81" class="deo:BibliographicReference" id="556" confidence="possible" page="29" column="2">Parsons, J., and Wand, Y. “Emancipating Instances from the Tyranny of Classes in Information Modeling,” ACM Transactions on Database Systems (25:2), June 2000, pp. 228-268.</ref>
          <ref rid="R82" class="deo:BibliographicReference" id="557" page="29" column="2">Petroski, H. Invention by Design: How Engineers Get from Thought to Thing, Harvard University Press, Cambridge, MA, 1996.</ref>
          <ref rid="R83" class="deo:BibliographicReference" id="561" page="30" column="1">Purao, S., Storey, V. C., and Han, T. D. “Improving Reuse-Based System Design with Learning,” Information Systems Research (14:3), September 2003, pp. 269-290.</ref>
          <ref rid="R84" class="deo:BibliographicReference" id="562" page="30" column="1">Rittel, H. J., and Webber, M. M. “Planning Problems Are Wicked Problems,” in Developments in Design Methodology, N. Cross (ed.), John Wiley &amp; Sons, New York, 1984.</ref>
          <ref rid="R85" class="deo:BibliographicReference" id="563" page="30" column="1">Robey, D. “Research Commentary: Diversity in Information Systems Research: Threat, Opportunity, and Responsibility,” Information Systems Research (7:4), 1996, pp. 400-408.</ref>
          <ref rid="R86" class="deo:BibliographicReference" id="564" page="30" column="1">Royce, W. Software Project Management: A Unified Framework, Addison-Wesley, Inc., Reading, MA, 1998.</ref>
          <ref rid="R87" class="deo:BibliographicReference" id="565" page="30" column="1">Salton, G. Automatic Text Processing: The Transformation, Analysis, and Retrieval of Information by Computer, Addison-Wesley, Inc., Reading, MA, 1988.</ref>
          <ref rid="R88" class="deo:BibliographicReference" id="566" page="30" column="1">Schneier, B. Applied Cryptography: Protocols, Algorithms, and Source Code in C (2 nd ed.), John Wiley and Sons, New York, January 1996.</ref>
          <ref rid="R89" class="deo:BibliographicReference" id="567" page="30" column="1">Schön, D. A. The Reflective Practitioner: How Professionals Think in Action, Basic Books, New York, 1983.</ref>
          <ref rid="R90" class="deo:BibliographicReference" id="568" page="30" column="1">Seddon, P. B. “A Respecification and Extension of the DeLone and McLean Model of IS Success,” Information Systems Research (8:3), September 1997, pp. 240-253.</ref>
          <ref rid="R91" class="deo:BibliographicReference" id="569" page="30" column="1">Sengupta, K., and Te’eni, D. “Cognitive Feedback in GDSS: Improving Control and Conver- gence,” MIS Quarterly (17:1), March 1993, pp. 87-113.</ref>
          <ref rid="R92" class="deo:BibliographicReference" id="570" page="30" column="1">Silver, M. S., Markus, M. L., and Beath, C. M. “The Information Technology Interaction Model: A Foundation for the MBA Core Course,” MIS Quarterly (19:3), September 1995, pp. 361-390.</ref>
          <ref rid="R93" class="deo:BibliographicReference" id="571" page="30" column="1">Simon, H. A. The Sciences of the Artificial (3 rd ed.), MIT Press, Cambridge, MA, 1996.</ref>
          <ref rid="R94" class="deo:BibliographicReference" id="572" page="30" column="1">Sinha, A. P., and Vessey, I. “An Empirical Inves- tigation of Entity-Based and Object-Oriented Data Modeling: A Development Life Cycle Approach,” in Proceedings of the Twentieth International Conference on Information Systems, P. De and J. I. DeGross (eds.), Charlotte, NC, December 13-15, 1999, pp. 229-244.</ref>
          <ref rid="R95" class="deo:BibliographicReference" id="573" page="30" column="2">Storey, V. C., Chiang, R. H. L., Dey, D., Goldstein, R. C., and Sundaresan, S. “Database Design with Common Sense Business Reasoning and Learning,” ACM Transactions on Database Systems (22:4), December 1997, pp. 471-512.</ref>
          <ref rid="R96" class="deo:BibliographicReference" id="574" confidence="possible" page="30" column="2">Tam, K. Y. “Automated Construction of Knowl- edge-Bases from Examples,” Information Systems Research (1:2), June 1990, pp. 144- 167.</ref>
          <ref rid="R97" class="deo:BibliographicReference" id="575" page="30" column="2">Tichy, W. “Should Computer Scientists Experiment More?” IEEE Computer (31:5), May 1998, pp. 32-40.</ref>
          <ref rid="R98" class="deo:BibliographicReference" id="576" page="30" column="2">Trice, A., and Davis, R. “Heuristics for Recon- ciling Independent Knowledge Bases,” Information Systems Research (4:3), September 1993, pp. 262-288.</ref>
          <ref rid="R99" class="deo:BibliographicReference" id="577" page="30" column="2">Tsichritzis, D. “The Dynamics of Innovation,” in Beyond Calculation: The Next Fifty Years of Computing, P. J. Denning and R. M. Metcalfe (eds.), Copernicus Books, New York, 1998, pp. 259-265.</ref>
          <ref rid="R100" class="deo:BibliographicReference" id="578" page="30" column="2">Venkatesh, V. “Determinants pf Perceived Ease of Use: Integrating Control, Intrinsic Motiva- tion, and Emotion into the Technology Accep- tance Model,” Information Systems Research (11:4), December 2000, pp. 342-365.</ref>
          <ref rid="R101" class="deo:BibliographicReference" id="579" page="30" column="2">Vessey, I., and Glass, R. “Strong Vs. Weak Approaches to Systems Development,” Communications of the ACM (41:4), April 1998, pp. 99-102.</ref>
          <ref rid="R102" class="deo:BibliographicReference" id="580" page="30" column="2">Walls, J. G., Widmeyer, G. R., and El Sawy, O. A. “Building an Information System Design Theory for Vigilant EIS,” Information Systems Research (3:1), March 1992, pp. 36-59.</ref>
          <ref rid="R103" class="deo:BibliographicReference" id="581" page="30" column="2">Wand, Y., and Weber, R. “On the Deep Structure of Information Systems,” Information Systems Journal (5), 1995, pp. 203-233.</ref>
          <ref rid="R104" class="deo:BibliographicReference" id="582" page="30" column="2">Wand, Y., and Weber, R. “On the Ontological Expressiveness of Information Systems Design Analysis and Design Grammars,” Journal of Information Systems (3:3), 1993, pp. 217-237.</ref>
          <ref rid="R105" class="deo:BibliographicReference" id="583" page="30" column="2">Weber, R. “Editor’s Comments: Still Desperately Seeking the IT Artifact,” MIS Quarterly (27:2), June 2003, pp. iii-xi.</ref>
          <ref rid="R106" class="deo:BibliographicReference" id="584" page="30" column="2">Weber, R. Ontological Foundations of Information Systems, Coopers &amp; Lybrand, Brisbane, Australia, 1997.</ref>
          <ref rid="R107" class="deo:BibliographicReference" id="588" page="31" column="1">Weber, R. “Toward a Theory of Artifacts: A Paradigmatic Base for Information Systems Research,” Journal of Information Systems (1:2), Spring 1987, pp. 3-19.</ref>
          <ref rid="R108" class="deo:BibliographicReference" id="589" confidence="possible" page="31" column="1">WfMC. “Workflow Standard—Interoperability Wf- XML Binding,” Document Number WFMC-TC- 1023, Version 1.0, Workflow Management Coalition, 2000.</ref>
          <ref rid="R109" class="deo:BibliographicReference" id="590" page="31" column="1">Winograd, T. Bringing Design to Software, Addison-Wesley, Inc., Reading, MA, 1996.</ref>
          <ref rid="R110" class="deo:BibliographicReference" id="591" page="31" column="1">Winograd, T. “The Design of Interaction,” in Beyond Calculation: The Next 50 Years of Computing, P. Denning and R. Metcalfe (eds.), Copernicus Books, New York, 1998, pp. 149-162.</ref>
          <ref rid="R111" class="deo:BibliographicReference" id="592" page="31" column="1">Zelkowitz, M., and Wallace, D. “Experimental Models for Validating Technology,” IEEE Computer (31:5), May 1998, pp. 23-31.</ref>
          <ref rid="R112" class="deo:BibliographicReference" id="593" page="31" column="1">Zmud, R. “Editor’s Comments,” MIS Quarterly (21:2), June 1997, pp. xxi-xxii.</ref>
        </ref-list>
        <outsider class="DoCO:TextBox" type="page_nr" id="474" page="26" column="2">100</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="475" page="26" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="header" id="476" page="27" column="1">Hevner et al./Design Science in IS Research</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="502" page="27" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="503" page="27" column="2">101</outsider>
        <outsider class="DoCO:TextBox" type="header" id="504" page="28" column="1">Hevner et al./Design Science in IS Research</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="533" page="28" column="2">102</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="534" page="28" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="header" id="535" page="29" column="1">Hevner et al./Design Science in IS Research</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="558" page="29" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="559" page="29" column="2">103</outsider>
        <outsider class="DoCO:TextBox" type="header" id="560" page="30" column="1">Hevner et al./Design Science in IS Research</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="585" page="30" column="2">104</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="586" page="30" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="header" id="587" page="31" column="1">Hevner et al./Design Science in IS Research</outsider>
      </section>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="594" confidence="possible" page="31" column="1">About the Authors</h1>
        <region class="DoCO:TextChunk" id="599" page="31" column="1">Alan R. Hevner is an Eminent Scholar and Professor in the College of Business Administration at the University of South Florida. He holds the Salomon Brothers/Hidden River Corporate Park Chair of Distributed Technology. His areas of research interest include information systems development, software engineering, distributed database systems, and healthcare information systems. He has published numerous research papers on these topics and has consulted for several Fortune 500 companies. Dr. Hevner received a Ph.D. in Computer Science from Purdue University. He has held faculty positions at the University of Maryland at College Park and the University of Minnesota. Dr. Hevner is a member of ACM, IEEE, AIS, and INFORMS. <marker type="block"/> Salvatore T. March is the David K. Wilson Professor of Management at the Owen Graduate School of Management, Vanderbilt University. He received a B.S. in Industrial Engineering and M.S. and Ph.D. degrees in Operations Research from Cornell University. His research interests are in information system development, distributed data-<marker type="column" number="2"/><marker type="block"/> base design, and electronic commerce. His research has appeared in journals such as Communications of the ACM, IEEE Transactions on Knowledge and Data Engineering, and Information Systems Research. He served as the Editor- in-Chief of ACM Computing Surveys and as an associate editor for MIS Quarterly. He is currently a senior editor for Information Systems Research and an associate editor for Decision Sciences Journal.<marker type="block"/> Jinsoo Park is an assistant professor of information systems in the College of Business Administration at Korea University. He was formerly on the faculty of the Carlson School of Management at the University of Minnesota. He holds a Ph.D. in MIS from the University of Arizona. His research interests are in the areas of semantic interoperability and metadata management in interorganizational information systems, heterogeneous information resource management and integration, knowledge sharing and coordination, and data modeling. His published research articles appear in IEEE Computer, IEEE Transactions on Knowledge and Data Engineering, and Information Systems Frontiers. He currently serves on the editorial board of Journal of Database Management. He is a member of ACM, IEEE, AIS, and INFORMS.<marker type="block"/> Sudha Ram is the Eller Professor of MIS at the University of Arizona. She received a B.S. in Science from the University of Madras in 1979, PGDM from the Indian Institute of Management, Calcutta in 1981 and a Ph.D. from the University of Illinois at Urbana-Champaign, in 1985. Dr. Ram has published articles in such journals as Communications of the ACM, IEEE Transactions on Knowledge and Data Engineering, Information Systems Research, and Management Science. Her research deals with interoperability in heterogeneous databases, semantic modeling, data allocation, and intelligent agents for data management. Her research has been funded by IBM, National Institute of Standards and Technology (NIST), National Science Foundation (NSF), National Aeronautics and Space Administration (NASA), and the Office of Research and Development of the Central Intelligence Agency (CIA).</region>
        <outsider class="DoCO:TextBox" type="footer" id="600" page="31" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="601" page="31" column="2">105</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="602" page="32" column="2">106</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="603" page="32" column="2">MIS Quarterly Vol. 28 No. 1/March 2004</outsider>
      </section>
    </body>
  </article>
</pdfx>

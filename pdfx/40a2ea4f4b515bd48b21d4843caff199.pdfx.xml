<?xml version='1.0' encoding='UTF-8'?>
<pdfx xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://pdfx.cs.man.ac.uk/static/article-schema.xsd">
  <meta>
    <job>83583055556f99cb222304d7c813486bf887fc69fa3fcc6dd3c1921dc28640c1</job>
    <base_name>62k6</base_name>
    <doi confidence="possible">10.1145/153571.163265</doi>
    <warning>Original PDF was found to be an image-based/possible OCR document. Output quality may be degraded.</warning>
  </meta>
  <article>
    <front class="DoCO:FrontMatter">
      <title-group>
        <article-title class="DoCO:Title" id="1">PD and joint application design: a transatlantic comparison</article-title>
      </title-group>
      <outsider class="DoCO:TextBox" type="outsider" id="2">QO</outsider>
      <contrib-group class="DoCO:ListOfAuthors">
        <contrib contrib-type="author">
          <name id="3">Erran Carmel</name>
        </contrib>
        <contrib contrib-type="author">
          <name id="4">Randall D. Whitaker</name>
        </contrib>
        <contrib contrib-type="author">
          <name id="5">andJoey E George</name>
        </contrib>
      </contrib-group>
      <region class="unknown" id="6">PD AND JOINT APPLICATION DESIGN: A TRANSATLANTIC COMPARISON</region>
    </front>
    <body class="DoCO:BodyMatter">
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="7" page="1" column="1">Europeans and Americans have often "talked past" e a c h o t h e r a b o u t a s p e c t s o f o r g a n i z a t i o n a l life.</h1>
        <region class="unknown" id="8" page="1" column="1">O n e s u c h a s p e c t is in s y s t e m s d e</region>
      </section>
      <region class="DoCO:TextChunk" id="11" page="1" column="1">The methodologies of Participatory Design (PD) and Joint Application D e s i g n ( J A D ) have established themselves in Scandinavia and North America as. influential thrusts in software development, yet there is virtually no cross-fertilization. PD and J A D are s i m u l t a n e o u s l y similar, complementary, and contradictory. Consequently, a careful analysis and comparison would benefit those who teach and work in information systems development. Klein and Hirschheim [19] refer to such differences as Information Systems methodological pluralism. Plural- ism offers the double-edged sword of offering choices, but leaving the prac- ticing designer/systems analyst in a state of confusion. Like Klein and Hirschheim, we do not believe there is one correct methodology. We present this discussion and comparison of PD and JAD (which some have classi- fied, erroneously, as "polarized views") in order to help researchers with cross-fertilization and to help practitioners understand their choices. JAD and PD are well-known methodologies for operationalizing user involvement and user participation. Both JAD and PD focus on facilitated interactions between users and designers wherein dynamic group techniques are employed for eliciting and refining ideas. They differ in points of user participation, participant identity, participant selection, technical staff and facilitator participation, team orienl-ation, structure, and development :speed. They also differ in their goals---JAD is intended to ac- celerate the design of information systems and promote comprehen- sive, high-quality results, while PD <marker type="column" number="2"/><marker type="block"/> seeks to accentuate the social context of the workplace and promote workers' control over their work and their lives.</region>
      <region class="unknown" id="10" page="1" column="2">u s e r i n v o l v e m e n t v e l o p m e n t .</region>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="12" page="1" column="2">User</h1>
        <section class="DoCO:Section">
          <h2 class="DoCO:SectionTitle" id="13" confidence="possible" page="1" column="2">Involvement</h2>
        </section>
        <section class="DoCO:Section">
          <h2 class="DoCO:SectionTitle" id="68" confidence="possible" page="4" column="1">Flip Charts</h2>
          <region class="DoCO:FigureBox" id="F2">
            <caption class="deo:Caption" id="69" page="4" column="1">Figure 2. The "typical" JAD room (from [261)</caption>
          </region>
          <region class="DoCO:TextChunk" id="70" page="4" column="1">recourse to ideological differences and our review of PD will focus on them.</region>
        </section>
        <section class="DoCO:Section">
          <h2 class="DoCO:SectionTitle" id="71" confidence="possible" page="4" column="1">PD Techniques</h2>
          <region class="DoCO:TextChunk" id="72" page="4" column="1">There seems to be a reluctance to specify and enforce fixed "techniques" in the PD community. This is presumably tied to PD proponents' opposition to engineering scientism. PD efforts in recent years have led to a repertoire of flexible practices and general guidelines. To the extent that PD projects have been docu- mented to date, there is little evi- dence that a "standard" set or order- ing of practices has been decided. Two themes govern practical implementation of PD principles [11]. The first theme is mutual reciprocal learning, in which users and designers teach one another about (respec- tively) work practices and technical possibilities through 'joint experiences" [5, 20]. The "first generation" PD trade union efforts had aimed,</region>
          <region class="DoCO:FigureBox" id="Fx73">
            <image class="DoCO:Figure" src="62k6.page_004.image_04.png" thmb="62k6.page_004.image_04-thumb.png"/>
          </region>
          <region class="unknown" id="74" page="4" column="2">Magnetic Board</region>
        </section>
        <section class="DoCO:Section">
          <h2 class="DoCO:SectionTitle" id="75" confidence="possible" page="4" column="2">Overhead Projector</h2>
          <region class="unknown" id="76" page="4" column="2">by</region>
          <region class="DoCO:TextChunk" id="77" page="4" column="2">a m o n g other things, at familiarizing workers with computers and increasing their skills through training. In mutual learning, this focus is ex- tended to encompass designers' fa- miliarization with their clients' work settings and activities. The second theme is design doing, in which interactive experi- mentation, modeling, and testing support "hands-on design" and "learning by doing." PD practitioners have proved very innovative in en- gaging users in creative design through diverse hands-on practices. To date, both themes have been pursued largely with "low-tech" tools--those with which the users are already familiar, and which they can easily employ themselves. Black- boards, index cards, and Post-It Notes affixed to a wall are common documentation devices during the modeling phase of a project. Later, prototyping is commonly done with cardboard props and (more recently)</region>
          <region class="unknown" id="78" page="4" column="3">~;Gr OOp</region>
        </section>
        <section class="DoCO:Section">
          <h2 class="DoCO:SectionTitle" id="79" confidence="possible" page="4" column="3">over!~rod~</h2>
          <region class="DoCO:TextChunk" id="82" page="4" column="3">HyperCard prototypes. The flexibility inherent in such PD practices challenges the flexibility of current CASE tools, and work is under way toward developing the sorts of software support needed to rapidly in- corporate the results of mutual learning exercises [20]. Selected PD techniques are de- scribed in the following subsections. These are divided (arbitrarily, we admit) according to: 1) modeling/ specification formulation or 2) iterative evaluation of prototypes for the envisioned system. Unless noted otherwise, this sample is drawn from the articles in [13]. (A shorter treat- ment of PD techniques is found in [18].) <marker type="block"/> focuses attention on the historical background to users' work activities to facilitate them in discussing their individual skills, knowledge, and judgement. Immer- sion of designers and facilitators in the target workplace (e.g., via hands-</region>
          <region class="unknown" id="81" page="4" column="3">Modeling I: Visualizing the Current Workplace Historical aspects</region>
          <outsider class="DoCO:TextBox" type="footer" id="83" page="4" column="3">COMIMUNICATIOI4S O1: THIE ACM June 1993/Vo1.36, No.4</outsider>
          <outsider class="DoCO:TextBox" type="page_nr" id="84" page="4" column="3">43</outsider>
          <region class="unknown" id="85" page="5" column="1">T a b l e 2. T h e G e n e r a t i o n s Of JAD</region>
          <region class="unknown" id="86" page="5" column="1">T a b l e 3. C o m p a r i s o n of JAD and PD</region>
          <region class="DoCO:TextChunk" id="87" confidence="possible" page="5" column="1">Current practice Consultancy for profit</region>
          <region class="DoCO:TextChunk" id="88" confidence="possible" page="5" column="1">Focal activity</region>
          <region class="DoCO:TextChunk" id="89" confidence="possible" page="5" column="1">The meeting: --delimited by time --set agenda</region>
          <region class="unknown" id="90" page="5" column="1">~S~ ~) ~,~. . . . . . . . . . . .</region>
          <region class="DoCO:TextChunk" id="91" confidence="possible" page="5" column="1">Perspective on users</region>
          <region class="DoCO:TextChunk" id="92" confidence="possible" page="5" column="1">--Both operational workers and managers are considered "users" â€¢ ~ U s e r selection based on competence criteria --Users are viewed as one source of knowledge</region>
          <region class="DoCO:TextChunk" id="93" page="5" column="1">on apprenticeship) allows direct experience o f the activities the information system must support. For example, in one library automation project designers worked briefly as librarians. (;ames (structured activities and interactions) have long served as means for articulating workplace ]practices, and they are good devices for winning initial user c o m m i t m e n t to the participatory process. O n e g r o u p o f PD designers developed a game t h e y called Car- pentryopoly.</region>
          <region class="unknown" id="94" page="5" column="1">M o d e l i n g I1: Visualizing the Possible Workplace Future workahops</region>
          <region class="DoCO:TextChunk" id="95" confidence="possible" page="5" column="1">are a means for fo-</region>
          <region class="DoCO:FigureBox" id="Fx96">
            <image class="DoCO:Figure" src="62k6.page_005.image_05.png" thmb="62k6.page_005.image_05-thumb.png"/>
          </region>
          <region class="DoCO:TextChunk" id="97" confidence="possible" page="5" column="2">Consultancy on principle</region>
          <region class="unknown" id="98" page="5" column="2">~ /~ ~ ~ i~</region>
          <region class="DoCO:TextChunk" id="99" confidence="possible" page="5" column="2">Group processes: ~satisfaction delimited --agenda negotiable</region>
          <region class="unknown" id="100" page="5" column="2">~ ..... ~,~ ~</region>
          <region class="DoCO:TextChunk" id="102" page="5" column="2">--"Users" are the operational/users. Managers are grouped separately --User participation/s mandatory --Users are viewed as primary source of knowledge <marker type="block"/> cusing designers and users on visions of a future workplace [10]. This process typically comprises three steps:</region>
          <disp-formula class="DoCO:FormulaBox" id="F1">
            <label class="DoCO:Label" id="103">1</label>
            <content class="DoCO:Formula" id="104" page="5" column="2">critique (drawing out c u r r e n t</content>
          </disp-formula>
          <region class="DoCO:TextChunk" id="112" page="5" column="2">problems); (2) fantasy (creating what-if scenarios); and (3) implementation (determining the re- sources n e e d e d for change t h r o u g h user action and to-do lists). Metaphor- baaed design generates m e t a p h o r s for the c u r r e n t work situation and projects them into the future as a sort o f conceptual prototyping process. Site visits allow users to see alternatives in action. For example, users who are graphics designers are taken to visit various printing facilities to see a va- riety o f c o m p u t e r - s u p p o r t systems. <marker type="column" number="3"/><marker type="block"/> This is a simple but powerful way of getting users to u n d e r s t a n d the range o f possibilities (sort o f immer- sion-in-reverse). O t h e r techniques have included storyboarding [21] (known from advertising and car- tooning); video productions; brainstorming; improvisational theatre and role-playing; and various types o f graphic illustration.<marker type="block"/> involves the users m o r e than the traditional modes o f prototyping, in that they actually work with a prototype a n d experience it. W h e n a b r e a k d o w n<marker type="page" number="6"/><marker type="column" number="1"/><marker type="block"/> occurs, users and designers actively discuss the reason for the break- down. Prototyping also supports mutual learning by promoting cooperative communication. Props and mock-ups of available materials (e.g., cardboard) are frequently used, in- spired by the industrial design notion that the artifact is much more tangi- ble than the idea.</region>
          <region class="unknown" id="106" page="5" column="3">................</region>
          <region class="unknown" id="107" page="5" column="3">~ ~ ~ ~ ~ . ~ . . . ~ . . . . ~ . . ,</region>
          <region class="unknown" id="109" page="5" column="3">Prototyplng: Presentation and Evaluation of Concrete Options Cooperative prototyping</region>
          <outsider class="DoCO:TextBox" type="footer" id="111" page="5" column="3">J u n e 1993/Vol,36, No.4 C O M M U N I C A T I O N S Oil THII ACM</outsider>
        </section>
      </section>
      <region class="DoCO:TextChunk" id="35" page="1" column="2">The Information Systems (IS) community subscribes to the notion that the success of a system is propor- tional to the degree to which the "users" of that system are "involved" in its design and development. This is seen as axiomatic in the IS community and has become one of the six myths that systems developers use as a guide to design [15]. There is little empirical proof of this truism [16], but the notion of user involvement intrigues IS researchers, since it ad- dresses a confluence of complex social factors [ <xref ref-type="bibr" rid="R2" id="14" class="deo:Reference">2</xref>]. An unambiguous definition of "user" is impossible. T h e North American reader understands "user" to mean any non-IS/nontechnical individual in the organization who is affected by the system--this includes managers. T h e Scandinavian reader understands "user" to mean any operational worker who is affected by the system--this does not include managers. We shall return to this dis- tinction later. T h e primary difference between various user involvement methodologies and techniques lies in the degree to which the users participate in (and therefore influence and are sat- isfied with) the emerging system design. This range of variation is well illustrated by Mumford [23], who delineates a continuum of involvement covering three main styles:<marker type="block"/> â€¢ Consultative design leaves decision- making power to the IS staff. Users<marker type="column" number="3"/><marker type="block"/> are simply sources of information with little to no influence or control. This is descriptive of the one-on-one interviewing approaches still in com- moil use, in which users are involved at discrete points in the System Development Life Cycle (SDLC) via sign-off meetings, managerial reviews, steering committees, and user liaisons.<marker type="block"/> â€¢ Representative design involves selected user representatives in the ac- tual design formulation and decision making. JAD falls into this category.<marker type="block"/> â€¢ Consensus design assigns responsibility for the system development process to the users. T h e users are continually involved throughout the design process. We place PD in this category (with some qualification: for PD 'compromise' is more descriptive than 'consensus,' but the thrust of this category is appropriate).<marker type="page" number="2"/><marker type="column" number="1"/><marker type="block"/> methodological implementation factors. Since JAD is not as well known as PD, we shall devote a relatively larger share of our background review to its introduction.<marker type="block"/> JAD has become, perhaps, the most common user-involvement methodology in North America for two reasons: First, IS organizations realized that a methodology with a high degree of user involvement would lead to better systems, and they found that solution in JAD; second--by and large--it is perceived as working well. The essence of getting the users involved in the JAD methodology is the structured meeting (the session). T h e JAD user meeting becomes the event around which all other system development activities revolve. The methodology is participatory in that the users are queried more, and hence involved more, than users typically were before the advent of JAD. The innovation in JAD, as it has developed today, is that the user meeting is structured, disciplined, and is a foundation of the SDLC. JAD is said to lead to increased quality, reduced costs, and life-cycle time reduction. JAD originated at IBM in the late 1970s 1 and began receiving industry attention several years later [8, 24]. The interest in JAD has remained exclusively in industry, where, by our estimates, there have now been tens of thousands of meetings labeled JAD (or one of its close cousins that have appeared in the marketplace2). JAD is diffused in the community through manuals [14], books [1, 26], and continued exposure in the trade press (e.g., [6]). As JAD has matured it has become part of industry's "new thinking" about systems development methodologies, along with CASE (Computer-Aided Software Engineering), rapid prototyping and others. JAD is one of Yourdon's "ele- ven silver bullets" [27] and is the fundamental methodological basis for Martin's Rapid Application Development [22]. We suspect the reason for absence of academic interest is that JAD developed and flourished completely outside the academic world. The theoretical basis of JAD is minimal. T h e<marker type="column" number="2"/><marker type="block"/> JAD meeting methodology has been influenced by the group dynamics discipline and the study of group work and meetings. This makes JAD's contribution one of behavioral underpinnings supporting a technical goal. Indeed, the focus of re- ported gains, as seen in <xref ref-type="table" rid="T1" id="29" class="deo:Reference">Table 1</xref>, are those of technical progress. The methodologies used for most of the findings in the data are not available and cannot be verified. Some seem to be post-hoc estimates by method advo- cates.<marker type="block"/> There is no one structure or definition for JAD. Over the yearsJAD has evolved to become a framework for "how to run a meeting" (Note the "typical" JAD room shown in <xref ref-type="fig" rid="F2" id="32" class="deo:Reference">Figure 2</xref>). Users attend the meeting to define or design an information system. JAD can be viewed as both a technique and a methodology. It is a technique because it is a structure for conducting a design meeting with user participants. It is a methodology because when introduced into the SDLC, JAD meetings form the core around which all activities revolve. The JAD methodology emphasizes structure and agenda. This is evident in the JAD literature that reads somewhat like cookbooks [1, 14, 26]. Everything is explained in great detail: "to do" lists are included, as are masters of useful forms. There are four necessary building blocks for a well-run JAD meeting: 1. Facilitation. A designated leader (or leaders) manages the meeting. Some JAD practitioners consider the meeting leader to be key to process success, even more so than the act of gathering the users in one place, the essence of JAD. 2. Agenda setting~structure. The meeting must have a plan of action. 3. Documentation. One or more designated scribes carefully document everything in the meeting. Various lists are rigorously maintained. 4. Group Dynamics. Group dynamics techniques are used for inspiring creativity (e.g., brainstorming), re- solving disagreements (e.g., airing facts, documenting them as "issues," taking notes), and handling speaking<marker type="column" number="3"/><marker type="block"/> protocols (e.g., enforcing "only one conversation at a time").<marker type="block"/> T h e conduct of the JAD meeting changes at different points in the SDLC. JAD meetings early in the SDLC deal with higher-level issues: defining objectives, decomposing the domain into smaller functions, defining boundaries and scope. In these meetings, participants begin to com- pile a list of assumptions, constraints and open issues; to target specific people and organizations for tasks; and construct timelines. Lists and other text are often maintained on wall charts, so that, by the end of the meeting, the walls are covered with flip-chart paper. Some facilitators encourage the users to roam around the room and fill in the wall charts while the more classical approach allows only the facilitator writing privi- leges. Once JAD meetings get into the latter p h a s e - - t h e design p h a s e - the users are asked to provide ever- increasing detail. At this stage meetings are often longer in duration, perhaps 3 to 5 days, compared to 1 to 2 days in earlier stages. The roles that participants play are revealing of the JAD methodology. For example, the roles in the "classic" IBM JAD methodology defined here are fairly strict: Users. Users are people who will use the system or are affected by it. The 'users', in typical North American IS parlance, include operational users (end users) as well as their managers. T h e users most knowl- edgeable about the use of the system should be present at the meetings(s).</region>
      <region class="unknown" id="20" page="1" column="3">This continuum is illustrated in</region>
      <region class="DoCO:FigureBox" id="F1">
        <caption class="deo:Caption" id="21" confidence="possible" page="1" column="3">Figure 1. Note that these three approaches are differentiated with re- spect to the relative engagement and influence of users. As such, there is no strict mapping between these three categories and other well- known design and development methodologies (socio-technical design, soft systems methodology, criti- cal systems thinking, and separately, prototyping). This article focuses on the practical implementation of the methodologies in question--hence our interest is in how to operationalize the ab- stract notion of user involvement, that is, which methods and techniques to use to get the users involved. Thus, our focus is on the</caption>
      </region>
      <outsider class="DoCO:TextBox" type="page_nr" id="22" page="1" column="3">40</outsider>
      <outsider class="DoCO:TextBox" type="footer" id="23" page="1" column="3">June 1993/7ol.36, NoA- C O M M U N I C A ' I r O O N S</outsider>
      <outsider class="DoCO:TextBox" type="footer" id="24" page="1" column="3">O1: THE ItCH</outsider>
      <region class="unknown" id="26" page="2" column="1">JAD</region>
      <region class="DoCO:FigureBox" id="Fx28">
        <image class="DoCO:Figure" src="62k6.page_002.image_02.png" thmb="62k6.page_002.image_02-thumb.png"/>
      </region>
      <region class="unknown" id="31" page="2" column="2">JAD Techniques</region>
      <region class="DoCO:TextChunk" id="36" confidence="possible" page="2" column="3">IMore on the history of JAD: JAD was con- ceived by Chuck Morris and Tony Crawford of IBM in 1977. The JAD approach was loosely derived from another IBM methodology--BSP (Business Systems Planning). The first JAD meetings were held at IBM's Raleigh, N.C. of- rices in design of a distribution system called Distribution Center Operations Workshop. This project used the same basic JAD concepts still used today: user participant meetings, magnetic visual displays, and careful documentation of the meeting. JAD was adapted by IBM Can- ada and further refined, later migrating back across the border to the U.S. in the early 1980s.</region>
      <region class="DoCO:TextChunk" id="37" confidence="possible" page="2" column="3">2Generic names for JAD include: Joint Application Development, Joint Application Design, Joint Application Requirements, Joint Requirements Planning, Interactive JAD, Interactive design, Group design, Accelerated design, Team analysis, Facilitated team techniques.</region>
      <outsider class="DoCO:TextBox" type="footer" id="38" page="2" column="3">COMMUHICAI'IONSOFTHIIACMJune 1993/Vol.36, No.4 4 1</outsider>
      <outsider class="DoCO:TextBox" type="header" id="39" page="3" column="1">r'~D</outsider>
      <region class="DoCO:TextChunk" id="40" page="3" column="1">Executive Sponsor. T h e (user) spon- sor defines the overall project pur- pose and direction, but is usually not present for the entire meeting, if at all. Facilitator~Meeting Leader. A neu- tral facilitator leads the meeting, carefully controlling all discussions, guiding and i n t e r r u p t i n g where necessary. T h e facilitator (a m e m b e r o f neither the IS team nor the user group) is specifically trained to lead such meetings (many firms provide training specifically for J A D facilitators). T h e facilitator should have training in g r o u p dynamics (or an instinctive flair) in systems develop- m e n t methodologies. T h e meeting leader is responsible for all activities: the agenda, the discussion, and documentation o f the meeting results. Scribe. T h e scribe captures the proceedings o f the meeting: charts, flows, lists and definitions. T h e</region>
      <region class="unknown" id="41" page="3" column="1">T a b l e 1. R e p o r t e d b e n e f i t s Of JAD</region>
      <region class="unknown" id="42" page="3" column="1">Times Savings:</region>
      <region class="DoCO:TextChunk" id="43" confidence="possible" page="3" column="1">--Repair effort per defect is only 10% in JAD phase as compared with system test phase [171 --30-40% in design and 20-30% in implementation --15% cycle reduction [14] - - 8 hrs/Function Point for traditional method vs. 2.5 hrs/Function Point for JAD [8] - - 4 to 6 weeks time saved in a project at Western-Southern Life [26]</region>
      <region class="unknown" id="44" page="3" column="1">Cost:</region>
      <region class="DoCO:TextChunk" id="45" confidence="possible" page="3" column="1">--Cost aw)idance of $500,000 in a project at Texas Instruments [26]</region>
      <region class="unknown" id="46" page="3" column="1">Completeness:</region>
      <region class="DoCO:TextChunk" id="47" confidence="possible" page="3" column="1">--JAD removes 50% of the defects of the requirements phase and 25% in design phase (percentages are not cumulative) [17] --25% increase in number of Function Points in a project at CNA Insurance [141 Subjective, Evaluation: --99% of users would do it again at Texas Instruments [14] --94% of users said they had a better understanding of the system at American Airlines [14] --100% of the users said the system would be at least "good" at American Airlines [141</region>
      <region class="unknown" id="48" page="3" column="1">T l q e u s e r involvement spectrum</region>
      <region class="unknown" id="49" page="3" column="1">Walk-through Review Steering Committee Sign-off User Liaison</region>
      <region class="unknown" id="50" page="3" column="1">JAD</region>
      <region class="unknown" id="51" page="3" column="1">Low ~; r~ ,o, ~,, ..,,,,.,~,~. ,,v~.,,o,~,~,~ ~ ~,~,~;~~~,~;H ~ ~~ ~,~~ ~~ ~~ user involvement</region>
      <region class="unknown" id="52" page="3" column="1">Consultative Representative</region>
      <region class="DoCO:FigureBox" id="Fx53">
        <image class="DoCO:Figure" src="62k6.page_003.image_03.png" thmb="62k6.page_003.image_03-thumb.png"/>
      </region>
      <region class="DoCO:TextChunk" id="62" page="3" column="2">"group memory" o f the meeting is the scribe's responsibility. IS Project Team. T h e IS staff includes analysts, project managers, database personnel, and technical experts. T h e use o f creative visual aids is broadly recognized as helpful for users, many o f whom are c o m p u t e r novices, in visualizing the software. For example, one J A D consulting firm offers a $400 suitcase o f custom-designed, magnetic, color- coded presentation symbols for use on a whiteboard. T h e J A D methodology has evolved over the years, as illustrated in <xref ref-type="table" rid="T2" id="54" class="deo:Reference">Table 2</xref>, with p e r h a p s the greatest controversy a m o n g J A D practitioners being c o m p u t e r s u p p o r t at J A D meetings. Today, some parts of some J A D meetings are conducted using CASE tools: graphic tools for depict- ing data-flow diagrams, Entity-Rela-<marker type="column" number="3"/><marker type="block"/> tionship diagrams, state transitions and other d i a g r a m m i n g techniques, and screen painters. A n o t h e r technology gaining adherents in the J A D community is g r o u p w a r e [<xref ref-type="bibr" rid="R4" id="59" class="deo:Reference">4</xref>]. In contrast to those seeking technological solutions, some J A D practitioners try to minimize the technology that is b r o u g h t into the J A D meeting r o o m in o r d e r to keep the meetings simple and n o n t h r e a t e n i n g [6].<marker type="block"/> PD [11, 1 3 ] - - o f t e n t e r m e d the "Scandinavian a p p r o a c h " to systems d e v e l o p m e n t - - a d v o c a t e s a much stronger form o f user involvement than that o f JAD, one in which workers actively engage in designing the c o m p u t e r systems they will eventu- ally employ. PD, as we know it today, represents a "second generation" o f thinking a i m e d at developing a design methodology based on the w i n ciples outlined in the "first generation" o f t r a d e union inquiries into the effect o f information systems on the workplace [25]. This lineage is a p p a r e n t in the tenets used by Czyzewski, et al. [7] to characterize PD: I. Workers should be given better tools instead o f having their work or their skills automated. 2. Users are best qualified to " . . . d e t e r m i n e how to improve their work and their work life." 3. Users' perceptions and feelings about technology are as i m p o r t a n t as technical specifications or perfor- mance indices. 4. I n f o r m a t i o n technology can only be a p p r o p r i a t e l y addressed within the context o f the workplace. PD is still in its infancy in North America, receiving attention primar- ily in academic circles (e.g., a now biyearly PD conference). It remains an open question to what degree principles e n g e n d e r e d in the Scandinavian socio-political context can be employed in North America. Green- b a u m [12] lists four American perceptions that interfere with PD ac- ceptance in North America: 1) PD is too idealistic; 2) PD is biased toward workers; 3) PD lacks m e t h o d or model; and 4) PD designers need to rely strictly on experience. These last two issues may be addressed without</region>
      <region class="unknown" id="56" page="3" column="2">PD</region>
      <region class="unknown" id="57" page="3" column="2">~ High</region>
      <region class="unknown" id="58" page="3" column="2">Consensus</region>
      <region class="unknown" id="61" page="3" column="3">PO</region>
      <outsider class="DoCO:TextBox" type="page_nr" id="63" page="3" column="3">42</outsider>
      <outsider class="DoCO:TextBox" type="footer" id="64" page="3" column="3">June 1993/Vol.36, No.4 I = O I W M U N I I I A T I O N S J OF THE ACM</outsider>
      <region class="unknown" id="65" page="4" column="1">ORDER PROCESSING OVERVIEW</region>
      <region class="DoCO:TextChunk" id="66" confidence="possible" page="4" column="1">I</region>
      <region class="unknown" id="67" page="4" column="1">AGENDA 1. Overview 2. Assumptions 3. Work Flow 4. Data Elements 5. Screens 6. Processing 7. Reports 8. Open Issues 9. Distribution</region>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="113" page="6" column="1">Comparison of JAD and PD</h1>
        <region class="DoCO:TextChunk" id="144" page="6" column="1">It is first worthwhile noting the similarities between PD and JAD. Both methodologies stress a high degree of user involvement as imperative to good design of information systems. Both represent new thinking on the traditional forms of user involvement. Both involve the users in workshops that, to various degrees, encourage creativity and new thinking. Practitioners in both JAD and PD often employ simple, low-level documentation and visualization methods in their workshops. Each acknowledge the central goals of the o t h e r - - J A D proponents speaking of increased worker empowerment and involvement, PD proponents citing benefits of higher quality systems. The similarities are not just in the approach but in the contexts. Both PD and JAD face considerable obsta- cles to implementation. There is a reluctance on the part of both IS professionals and executives to increase user involvement or to experi- ment with new methods and techniques. Once either PD or JAD is accepted, there are numerous local problems in successful implementation: managerial resistance, user con- servatism, lackluster workshops and poor facilitators. Getting user participation is always a test of persever- ance; the managers are too busy, the workers are not given approval to spend much time away from their jobs. Finally, as well-intentioned as both methodologies may be, the users themselves can be uncoopera- tive and unmotivated. <xref ref-type="table" rid="T3" id="114" class="deo:Reference">Table 3</xref> illustrates some contrasts between the two approaches. The software engineering approach that effectively serves as the basis for development in North America is based on fixed requirements, communication through documentation, and<marker type="column" number="2"/><marker type="block"/> rules of work enforced through methods--functional foci which are deemphasized or dismissed in the PD literature. Conversely, the PD thrusts of mutual learning, joint experiences, and workplace democratiza- t i o n - w h a t might be termed "social" f o c i - - d o not receive explicit mention in JAD. With reference to the methodologies' histories, we might say that JAD represents a movement toward more collaborative practices<marker type="block"/> to enhance the viability of given technical goals. In contrast, PD represents a movement toward more technical practices to enhance the viability of given social goals. Several points of departure in the two techniques are discussed in the following paragraphs.<marker type="block"/> In theory, both PD and JAD support the entire SDLC. Meetings and workshops with the users can be conducted at all points with great fre- quency. In practice, however, participation points are not apparent. We have found that JAD meetings are most often used in the requirements stage of the SDLC. The requirements stage is that in which the JAD meeting benefits are considered<marker type="column" number="3"/><marker type="block"/> greatest. However, JAD practitioners stress that multiple JAD meetings need to be run throughout the S D L C - - a t many points along the timeline. Indeed, JAD meetings also take place at other points along the SDLC: for IS Planning (in which we include Enterprise and Business modeling); for the design stage; to help select software packages; for system test planning. In an iterative approach (e.g., prototyping), the JAD meetings are convened at multiple times as newer versions are re- viewed. PD, like JAD, stresses continuous involvement of the users. In one of its forms, cooperative prototyping, this would indeed be a continuous form of development. However, the PD literature does not position itself compared to the SDLC and some experiences indicate that PD participation points were intermittent (once every week or two in [<xref ref-type="bibr" rid="R5" id="121" class="deo:Reference">5</xref>]). PD does not lend itself to the "IS Planning" stage, which as typically defined has a strong managerial/executive flavor.<marker type="block"/> In theory, PD and JAD support user involvement of all parties affected by the information system. In practice, however, each approach excludes a certain set o f affected parties. Gener- ally, the JAD approach has two rules for selecting user representatives (the term "user" does not indicate rank or position, but simply organizational affiliation). First, all areas of relevant expertise should be repre- sented, minimizing potential for an issue being irresolvable owing to in- sufficient authority or expertise on hand. Second, JAD user participants should be those the organization can least spare from day-to-day operations. As the expression goes: "If you can't afford to lose the person for three days, then that's the person we want." In short, selected users participate by contributing breadth and depth of expertise to the team. In practice, we have found many JAD meetings involve low- and middle- level m a n a g e r s - - t h e employees presumably empowered with decision- making authority over a project in a North American context. When the<marker type="page" number="7"/><marker type="column" number="1"/><marker type="block"/> JAD facilitator has enough influence the managers and supervisors are augmented by nonmanagerial, operational user :representatives. PD focuses on lower-level, operational users--often excluding management from the process [<xref ref-type="bibr" rid="R5" id="126" class="deo:Reference">5</xref>]. In the Scandinavian context, empowerment (for project decisions) extends to the operational staff due to codetermi- nation agreements. As such, presence of decision-making authority does not distinguish the two methodologies. PD practitioners presume that operational users are the most qualified authorities on improving their workp]Laces [7]. B6dker, et al. [<xref ref-type="bibr" rid="R3" id="127" class="deo:Reference">3</xref>] suggest workshops be composed of people from similar levels to limit any imbalance in power, but some- times workshops of mixed levels (i.e., with management involved) are una- voidable.<marker type="block"/> T h e "classic:" IBM JAD approach suggests the IS technical staff not directly participate in the meeting, so as not to intimidate users or shoot down good ideas. At most, some IS personnel can be allowed to sit in on JAD meetings as silent observers. Many JAD practitioners now emphasize cooperation between IS staff and users as merabers of an ongoing involved through JAD meetings in a continuous dialogue [22]. As for PD, the technical presence is limited to designers acting as both facilitators and technical advisors--which leads to the next point of difference.<marker type="block"/> While facilitators are of pivotal im- portance in both PD and JAD, their roles are subtly but significantly different. T h e JAD facilitator tightly controls the meetings and dictates their pace. PD does not use the term "facilitator" but, rather, the term "designer." T h e dual role of designers in PD as both facilitators and technical ;advisors contrasts with JAD, where these functions generally remain distinct and specialized. PD designers typically try to (1) collabo- rate as peers rather than controllers (e.g., [10]) and (2) promote maxi- m u m independent activity by user- participants. Yet, B6dker et al. [<xref ref-type="bibr" rid="R3" id="133" class="deo:Reference">3</xref>]<marker type="column" number="2"/><marker type="block"/> suggest (in a paradox they acknowledge) that PD workshop rules be strictly enforced, claiming that strict usage of novel communications breaks traditional patterns and allows time for more people to speak and interact.<marker type="block"/> The PD workshop and the JAD meeting both foster a sense of cohe- sion a m o n g the group of workers, users, facilitators, designers, and technical staff; yet the goals of collaboration are differently defined. JAD practitioners emphasize cooperation in the form of a "team." Current North American team-oriented approaches call for self-managed teams in which the individuals in the team are interdependent, interdiscipli- nary, and hold authority and responsibility for accomplishing a given goal. From the PD (socio-political) perspective, Ehn [9] argues that the "American" concept of team is a poor compromise that takes from workers without giving them anything in return. On the other hand, PD strongly promotes a mutual learning process between members of the group: designers and workers. As the design progresses, both workers and designers are transformed by learning from one another.<marker type="block"/> While JAD is a very structured approach, in which manuals and guides are reminiscent of cookbooks, PD does not insist on invariant structure. PD practitioners criticize the ration- alistic approach of systems design with its roots in scientific objectivism and the central notion of analysis through decomposition. They specifically avoid presenting any "step-by- step" PD approach, urging designers to improvise and focus on the process aspects of designing. More specifically, PD does not structure the entire time span commonly covered by JAD. T h e PD techniques are practices defining sessions, not entire project phases. The most highly developed activity plans in PD are those leading to modeling the current workplace and visualizing a future alternative--only a fraction of the total SDLC.<marker type="column" number="3"/><marker type="block"/> JAD proponents typically claim that the design and implementation phases are shortened and that main- tenance is reduced (<xref ref-type="table" rid="T1" id="142" class="deo:Reference">Table 1</xref>), al- though we have spoken to some JAD practitioners who concede that JAD incre.ases overall design time. T h e PD community has not consistently discussed timeframes for their practices, which are typically defined with regard to achieving stepwise goals irrespective of deadlines. BOdker et al. [<xref ref-type="bibr" rid="R3" id="143" class="deo:Reference">3</xref>] concede the PD approach probably lengthens the design phase.</region>
        <region class="DoCO:FigureBox" id="Fx116">
          <image class="DoCO:Figure" src="62k6.page_006.image_06.png" thmb="62k6.page_006.image_06-thumb.png"/>
        </region>
        <region class="unknown" id="119" page="6" column="2">A t what point(s) do the users participate?</region>
        <region class="unknown" id="123" page="6" column="3">W h o a r e t h e users and how are they selected?</region>
        <outsider class="DoCO:TextBox" type="footer" id="125" page="6" column="3">Â¢OI~MUNICAT|OJllSOleTHIEAiCMJuJaC 1993/Vol.36, No.4 4S</outsider>
        <region class="unknown" id="129" page="7" column="1">Are the IS technical staff involved?</region>
        <region class="unknown" id="130" page="7" column="1">team,</region>
        <region class="unknown" id="132" page="7" column="1">Facilitators and their roles</region>
        <region class="DoCO:FigureBox" id="Fx135">
          <image class="DoCO:Figure" src="62k6.page_007.image_07.png" thmb="62k6.page_007.image_07-thumb.png"/>
        </region>
        <region class="unknown" id="137" page="7" column="2">The team and its interaction</region>
        <region class="unknown" id="139" page="7" column="2">Structure</region>
        <region class="unknown" id="141" page="7" column="3">Speed of Development</region>
      </section>
      <section class="deo:Conclusion">
        <h1 class="DoCO:SectionTitle" id="145" page="7" column="3">Conclusions</h1>
        <region class="DoCO:TextChunk" id="151" page="7" column="3">This article does not attempt to bridge the plentiful ideological differences between PD and JAD. In- stead, we conclude by highlighting areas in which each of the two methodologies can benefit from the other (mutual learning in PD parlance). We begin with two areas in the J A D approach that can benefit from PD principles (participant selection and creativity), then discuss one area in which the PD approach can benefit from JAD (structure). The User Participants. Whether or not one adopts PD's workplace de- mocratization ideal, we have ob- served numerous North American JAD meetings in which operational employees are overlooked as participants. This results in a meeting room filled with middle managers and supervisors unable to specify details of day-to-day operations (e.g., what 17 fields are needed to fill out form A345). This organizational failure stems in part from an unjustified lack of confidence that "front-line" workers can meaningfully contribute to the design process. If PD benefits could be more clearly demonstrated, this would provide a basis for open- ing up JAD to increased worker participation. Creativity. JAD practitioners utilize many creative techniques and para- phernalia in the design process, from magnetic displays that can be moved around a whiteboard, to prototypes of various kinds. However, all t o o often, these are minimal, and in practice there are many JAD practitioners that utilize the old methods of long documentation, tedious text, and excessive reliance on flow-chart- <marker type="page" number="8"/><marker type="column" number="1"/><marker type="block"/> ing techniques. It is perhaps difficult for many practitioners to be creative in a J A D workshop, just as many teachers lack the flair to be creative in the classroom. PD practitioners tend to display a flair for creativity that many people in the systems development field simply do not ex- hibit. Such creativity is not unique to PD, but can be f o u n d in diverse sources that emphasize "good design." This suggests JAD's creative potential can be enhanced t h r o u g h facilitator creativity training. Structure. T h e J A D a p p r o a c h emphasizes structure, while the PD approach devotes almost no guidelines to structure. This partially stems from the different set o f underlying values that drives the two methodologies. Nevertheless, structure has merits; as noted in [13], structure can actually enhance creativity when introduced properly. Introduction o f a PD structure summarized in a cook-</region>
        <outsider class="DoCO:TextBox" type="page_nr" id="147" page="7" column="3">46</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="148" page="7" column="3">June 1993/Vol.36, No.4 I I O I I I M U H i l I A T I O N S</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="149" page="7" column="3">OF THE AÂ¢1~1</outsider>
        <outsider class="DoCO:TextBox" type="header" id="150" page="8" column="1">t-~D</outsider>
        <region class="DoCO:TextChunk" id="152" confidence="possible" page="8" column="1">PD: A P e r s o n a l Statement Joan Greenbaum CITY UNIVERSITY OF NEW YORK hree different perspectives for the need for PD approaches-- pragmatic, theoretical and polit- ical-represent major discussions that often get in the way of how people talk to one another. We believe this summary could help people identify which arguments they are using, so they can com- municate more directly with each other. Our argument, organized around these three perspectives, is rooted in Scandinavian experiences, but is, we believe, adaptable cross-culturally. â€¢ A pragmatic perspective. One would obviously argue for getting the job done better. For example, it is generally ac- knowledged that approximately 60- to 80% of all problems can be traced to poor or inadequate requirement specifications. Obviously, computer systems need to better suit people's working practices. Since those who do the work know how it is done, we need to involve the designers Of the systems with day- to-day work experience early in the project, when the basic design choices are made. For systems developers, PD techniques could mean fostering an environment in which people can express their ideas, for</region>
        <region class="DoCO:FigureBox" id="Fx153">
          <image class="DoCO:Figure" src="62k6.page_008.image_08.png" thmb="62k6.page_008.image_08-thumb.png"/>
        </region>
        <region class="DoCO:TextChunk" id="154" page="8" column="2">book format which (to continue the analogy) suggests a dozen ways to cook chicken, would present an im- p o r t a n t step forward. A PD cook- book would preserve the contextual flexibility that PD practitioners consider important, while at the same time serving to democratize the PD movement by pushing it f u r t h e r into the hands o f the average designer/ systems analyst in industry. In closing, we have a t t e m p t e d a comparative examination o f two leading user involvement methodologies: PD and JAD. Although there exist contextual differences in their origins and implementation, strong correspondences exist between them. T h e similarities we have noted suggest a basis for future mutual development, while contrasts suggest points o f mutual learning.</region>
        <region class="DoCO:TextChunk" id="155" confidence="possible" page="8" column="2">Acknowledgments We thank J o n a t h a n Grudin and</region>
        <region class="DoCO:TextChunk" id="156" confidence="possible" page="8" column="2">instance by using techniques like a Future Workshop--a technique that helps people generate ideas about the future use of technology at their workplace. Applying techniques such as participatory prototyping, offers an up-front way to reduce errors otherwise not found until the final system is put into use. Participation In design projects offers pragmatic possibilities for both systems developers and management. For systems developers, PD offers an opportunity to build systems that work better. For management, PD offers a way to increase product and service quality. â€¢ A theoretical perspective. There are many theoretical arguments supporting the need for PP. Here we develop one from a philosophical perspective. Witt- genstein, for example, argues that "If a lion could speak we wouldn't be able to understand it." Since human beings and lions do not live the same lives we are not able to understand each other. Since systems developers and people at workplaces do not experience the same things, thiS limits how well they can understand each other's experiences. One way of getting around this dilemma is to apply a PD approach to prototyping which emphasizes providing people with hands-on experience in a work-like setting. Turning to the philosophy of Heideg- ger we may observe that "Involved</region>
        <region class="DoCO:TextChunk" id="157" page="8" column="3">Diane Lockwood for their thoughtful comments. []</region>
      </section>
      <section class="DoCO:Bibliography">
        <h1 class="DoCO:SectionTitle" id="158" confidence="possible" page="8" column="3">References</h1>
        <ref-list class="DoCO:BiblioGraphicReferenceList">
          <ref rid="R1" class="deo:BibliographicReference" id="159" confidence="possible" page="8" column="3">1. August, J.H. Joint Application Design: The Group Session Approach to System Design. Yourdon "Press, Englewood Cliffs, N.J., 1991.</ref>
          <ref rid="R2" class="deo:BibliographicReference" id="160" confidence="possible" page="8" column="3">2. Barki, H. and Hartwick, J. Rethink- ing the concept of user involvement. Manage. Inf. Syst. Q. 13, 1 (1989), 52- 63.</ref>
          <ref rid="R3" class="deo:BibliographicReference" id="161" confidence="possible" page="8" column="3">3. B6dker, S., Greenbaum, J. and Kyng M. Setting the stage for design as action. In Design at Work: Cooperative Design of Computer Systems, Greenbaum, J. and Kyng, M., Eds., Lawrence Erlbaum, Hillsdale, N.J., 1991, pp. 139-155.</ref>
          <ref rid="R4" class="deo:BibliographicReference" id="162" confidence="possible" page="8" column="3">4. Carmel, E., George, J.F. and Nunamaker, J.F. Supporting joint application development with elec- tronic meeting systems: A field study. Thirteenth International Conference on Information Systems (Dec. 1992), pp. 223-232.</ref>
          <ref rid="R5" class="deo:BibliographicReference" id="163" confidence="possible" page="8" column="3">5. Clement, A. Griffiths, M. and van</ref>
        </ref-list>
        <region class="DoCO:TextChunk" id="164" confidence="possible" page="8" column="3">acting--not detached reflection--is our fundamental way Of being." For design this implies that the best way for people to relate to a prototype is by use In a, perhaps simulated, work situation. â€¢ A political perspective. Political discussions reflect people's beliefs. Coming from a Scandinavian tradition, we believe that in a democracy people have the right to influence their own work place, Including the use of computer technology. AS systems developers we have the obligation to provide people with the opportunity to influence their own lives. We believe it is our professional responsibility not only to build systems that are cost-effective but that also Improve the quality of work life. involving people early in project organization, before fundamental design decisions are made, is sound from a political perspective. Applying techniques like Future Workshops and participatory pro- retyping are ways of designing to meet the needs of the people who are even- tually going to use the systems. From all three of the preceding perspectives, PD iS relevant outside Scandinavia. The pragmatic look at things and the theoretical reflections are largely independent of cultural conditions. The political discussions clearly differ among countries, but we cOuld argue that PD supports workplace democracy and that it is time for this argument to be heard. [ ]</region>
        <outsider class="DoCO:TextBox" type="footer" id="165" page="8" column="3">COMInUlIICATIONIII OP T H I ACM June 1993/Vol.36, No.4 4 7</outsider>
        <region class="DoCO:TextChunk" id="166" confidence="possible" page="9" column="1">den Besselaar, P. Participatory design projects: A retrospective look. Commun. ACM 36, 6 (June 1993). 6. Crawford, T. People considerations for a more successful JAD. Am. Pro- gram. 4 (Jan. 1991). 7. Czyzewski, P., Johnson, J. and Rob- erts, E. Introduction: Purpose of PDC-90. In Proceedings of Conference on Participatory Design, PDC'90 (Seattle, 1990) Palo Alto, Calif., Computer Professionals for Social Responsibil- ity. 8, EDP Analyzer. Developing high quality systems faster. Vol 24, 6 (june 1986), 1 9. Ehn, P. Speech at Conference on Participatory Design, PDC'90 (Seattle, Wash., 1990). Author's notes. 10. Ehn, P., M611eryd, B. and Sj6gren, D. Playing in reality: A paradigm case. Scandinavian J. Inf. Syst. 2 (1990), 101-120. 11. Floyd, C., Mehl, W., Reisen, F., Schmidt, G. and Wolf, G. Out of Scandinavm: Alternative approaches to software design and system development. Human-Comput. Inter. 4 (1989), 253-350. 12. Greenbaum, J. Panel presentation, Conference on Participatory Design-- PDC'90, (Seattle, Wash., 1990). Author's notes. 13. Greenbaum, J. and Kyng, M., Eds. Design at work: Cooperative design of computer Systems. Lawrence Erlbaum Hillsdale, N.J., 1991. 14. Guide Joim application design, Guide International Inc., GPP-147. Chi- cago, IL, 1986.</region>
        <region class="DoCO:TextChunk" id="167" confidence="possible" page="9" column="1">The Time H a s Came... ...to send for the latest copy of the free Consumer Information Catalog. It lists more than 200 free or low-cost govern- ment publications on topics like money, food, jobs, children, cars, health, and federal benefits. Don't waste another minute, send today for the latest free Catalog and a free sample booklet. Send your name and address to: Consumer Information Department TH Pueblo, Colorado 81009 A public service of this publication and the Consumer Information Center of the U.S. General Services Administration.</region>
        <region class="DoCO:FigureBox" id="Fx168">
          <image class="DoCO:Figure" src="62k6.page_009.image_09.png" thmb="62k6.page_009.image_09-thumb.png"/>
        </region>
        <region class="DoCO:TextChunk" id="169" confidence="possible" page="9" column="2">15. Hirschheim, R.A. and Newman, M. Symbolism and information systems development: Myth, metaphor and magic. Inf. Syst. Res. 2, 1 (Mar. 1991), 29-62. 16. Ives, B. and Olson, M. User involvement and MIS success: A review of research. Manage. Sci. 30 (1984), 586- 603. 17. Jones, C. Applied Software Measure- ment. McGraw Hill, New York, 1991. 18. Kensing, F. and Munk-Madsen, A. Participatory design: Structure in a toolbox. In Proceedings of the Participatory Design Conference, PDC'92. (Cam- bridge, Mass., Nov. 1992). 19. Klein, H.K. and Hirschheim, R.A. Social change and the future of information systems development. In Crit- ical Issues in Information Systems Re- search, R.J. Boland and R.A. Hirschheim Eds. Wiley, New York, 1987. 20. Kyng, M. Designing for cooperation: cooperating in design. Commun. ACM, 34, 12 (Dec. 91), 65-73. 21. Madsen, K.H. and Aiken P. Some experiences with cooperative interactive storyboard prototyping. Commun. ACM (June 1993). 22. Martin, J. Rapid Application Development. MacMillan, New York, 1991. 23. Mumford, E. Participative systems design: A structure and method. Syst. Object, Solutions I, 1 (1981), 5-19. 24. Rush, G. A fast way to define system requirements. Computerworld (Oct. 7, 1985), 11-12. 25. Whitaker, R., Essler, U. and Oestberg, O. Participatory business</region>
        <region class="DoCO:TextChunk" id="170" confidence="possible" page="9" column="2">Center</region>
        <region class="DoCO:TextChunk" id="174" confidence="possible" page="9" column="3">modeling. Lule~i Technical University (Sweden), TULEA Report 1991: 31. 26. Wood, J. and Silver, D. Joint Application Design: How to Design Quality Systems in 40% Less Time. Wiley, New York, 1989. 27. Yourdon E. The Decline and Fall of the American Programmer. Yourdon Press, Englewood Cliffs, N.J., 1992. CR Categories and Subject Descrip- tors: C.4 [Computer Systems Organiza- tion]: Performance of Systems; D.2.2 [Software]: Software Engineering--Tools and Techniques; K.6.1 [Management of Computing and Information Systems]: Project and People Management General Terms: Design Additional Key Words and Phrases: Case study, cooperative design, coordina- tion, CSCW, evaluation, user involvement About the Authors: ERRAN CARMEL is assistant professor at the Kogod College of Business Administration at The American University in Washington, D.C. Current research interests include development practices in software startups, design methodologies, and group support systems. Author's Present Address: Department of Management, Kogod College of Business Administration, The American University, Washington, D.C. 20016; emaih <email id="171">ecarmel@american.edu</email> RANDALL D. WHITAKER is a postdoc- toral researcher at Ume~ University. Current research interests include enactive cognitive science and interactional models for collaboration. Author's Present Address: ADB, Ume~ Universitet, 901 87 Ume~ Sweden; emaih <email id="172">rwhit@cs.umu.se</email> JOEY F. GEORGE is an assistant professor of management information systems in the MIS department at the University of Arizona. Current research interests include use of information systems in the workplace, including computer-based monitoring, desktop computing, and group support systems. Author's Present Address: Department of MIS, College of Business and Public Administration, University of Arizona, Tucson, AZ 85721; email: <email id="173">george@bpa.arizona.edu</email> Permission to copy without fee all or part of this material is granted provided that the copiesare not made or distributed for directcommercialadvantage, the ACM copyrightnotice and the title of the publication and its date appear, and notice is give that copying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, requires a fee and/or specificpermission. Â© ACM 0002-0782/93/0600-040 $1.50</region>
        <outsider class="DoCO:TextBox" type="footer" id="175" page="9" column="3">48 June 1993/~o1.36,NoA- I I O M M U N I C A T I O N S</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="176" page="9" column="3">OF 'rile AÂ¢lkl</outsider>
      </section>
    </body>
  </article>
</pdfx>

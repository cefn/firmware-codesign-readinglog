<?xml version='1.0' encoding='UTF-8'?>
<pdfx xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://pdfx.cs.man.ac.uk/static/article-schema.xsd">
  <meta>
    <job>9633da910b07b227362081e2f40cd66af5ee3e693ec3f45b0cf6dfff0f78d388</job>
    <base_name>62oz</base_name>
    <doi>http://dx.doi.org/10.1007/3-540-57433-6_51</doi>
  </meta>
  <article>
    <front class="DoCO:FrontMatter">
      <title-group>
        <article-title class="DoCO:Title" id="1">A WIZARD OF OZ PLATFORM FOR THE STUDY OF MULTIMODAL SYSTEMS</article-title>
      </title-group>
      <contrib-group class="DoCO:ListOfAuthors">
        <contrib contrib-type="author">
          <name id="2">Daniel Salber</name>
        </contrib>
        <contrib contrib-type="author">
          <name id="3">Joëlle Coutaz</name>
        </contrib>
      </contrib-group>
      <region class="unknown" id="6">Laboratoire de Génie Informatique, IMAG B.P. 53 X, 38041 Grenoble Cedex, France Phone: +33 76 51 44 40, E-mail: <email id="4">salber@imag.fr</email>, <email id="5">joelle@imag.fr</email></region>
      <abstract class="DoCO:Abstract" id="7">The Wizard of Oz (WOz) technique is an experimental evaluation mechanism. It allows the observation of a user operating an apparently fully functioning system whose missing services are supplemented by a hidden wizard. In the absence of generalizable theories and models for the design and evaluation of multimodal systems, the WOz technique is an appropriate approach to the identification of sound design solutions. We show how the WOz technique can be extended to the study of multimodal interfaces and we introduce the Neimo platform as an illustration of our early experience in the development of such platforms.</abstract>
      <region class="DoCO:TextChunk" id="8" confidence="possible">Oz,</region>
      <abstract class="DoCO:Abstract" id="9">KEYWORDS: Multimodal interaction, Wizard of Evaluation techniques.</abstract>
    </front>
    <body class="DoCO:BodyMatter">
      <section class="deo:Introduction">
        <h1 class="DoCO:SectionTitle" id="10" page="1" column="1">INTRODUCTION</h1>
      </section>
      <region class="DoCO:TextChunk" id="13" page="1" column="1">Evaluation techniques and user observation provide ways to improve the design of interactive systems. Predictive evaluation techniques such as GOMS [<xref ref-type="bibr" rid="R2" id="11" class="deo:Reference">2</xref>] or KRI [<xref ref-type="bibr" rid="R6" id="12" class="deo:Reference">6</xref>] are based on predictions from theory, and so, they may be limited in scope when the case study (e.g., multimodal interaction) is not supported by the underlying theory. In addition, the setting and interpretation of such models are sometimes complex and as time consuming as an effective implementation. At the opposite, experimental techniques deal with real data observed from real users accomplishing real tasks, and operating a physical artefact. Artefacts may be paper scenarios, mockups, computer system prototypes, or Wizard of Oz systems. In this short paper, we investigate how the Wizard of Oz (WOz) experimental evaluation technique can be extended to the evaluation of multimodal interfaces and we introduce the Neimo platform as an illustration of our early experience in the development of WOz platforms for the study of multimodal systems.</region>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="14" page="1" column="1">WIZARD OF OZ SYSTEMS</h1>
      </section>
      <region class="DoCO:TextChunk" id="22" page="1" column="1">A WOz system allows the observation of a user operating an apparently fully functioning system whose missing services are supplemented by a hidden wizard. The user is not aware of the presence of the wizard and is led to believe <marker type="column" number="2"/><marker type="block"/> that the computer system is fully operational. The wizard observes the user through a dedicated computer system connected to the observed system over a network. When the user invokes a function that is not available in the observed system, the wizard simulates the effect of the function. Through the observation of users’ behavior, designers can identify users’ needs when accomplishing a particular set of relevant tasks and evaluate the particular interface used to accomplish the tasks. During a WOz experiment, the data exchanged between the observed user and the wizard is recorded for further analysis by interface evaluation experts. Most of the existing WOz systems have been developed to study the usage of natural language for retrieval information systems such as telephone information services or databases [<xref ref-type="bibr" rid="R5" id="16" class="deo:Reference">5</xref>, <xref ref-type="bibr" rid="R7" id="17" class="deo:Reference">7</xref>] as well as dialogues with expert systems [<xref ref-type="bibr" rid="R3" id="18" class="deo:Reference">3</xref>]. These WOz systems involve the simulation of only one input medium (spoken or typed natural language, for example). Apart from the results of the WOz experiments themselves, these experiments led to interesting results for the design of WOz systems. The main point of interest is that wizards’ tasks, although apparently simple, are cognitively expensive. The realism of the simulation requires wizards’ actions to be consistent in content, style, and pace. To achieve an acceptable consistent behavior, wizards must be thoroughly trained at well defined tasks.<marker type="block"/> In order to alleviate cognitive overload, recent studies suggest a two-wizard configuration where one wizard is specialized in I/O whereas the second one performs task level processing [<xref ref-type="bibr" rid="R1" id="20" class="deo:Reference">1</xref>]. The I/O wizard acquires the observed user’s requests and transmits simulated answers. The task wizard interprets the requests translated by the I/O wizard and generates the answers to be formulated by the I/O wizard. This collaborative task sharing is more likely to guarantee consistency. It doesn’t add noticeably to the response time provided that the wizards are appropriately trained. Another experiment using a two-wizard configuration has proven to be successful [<xref ref-type="bibr" rid="R4" id="21" class="deo:Reference">4</xref>].</region>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="23" page="1" column="2">PARTICULARITIES OF A MULTIMODAL WOZ</h1>
      </section>
      <region class="DoCO:TextChunk" id="27" page="1" column="2">From the wizard’s perspective, multimodality (i.e., the user can use more than one input medium at the same time) increases the complexity of the task as well as information bandwidth. Thus, a single wizard might not be able to achieve a realistic and consistent simulation. Hence, we propose to have many wizards, each being specialized in the <marker type="page" number="2"/><marker type="column" number="1"/><marker type="block"/> simulation of a specific part of the interaction. A multiwizard configuration is an answer to the problems of task complexity and high information bandwidth in the case of multimodal interaction. However, since many wizards are involved in the simulation process, consistency might be more difficult to achieve. Thus, we feel the need for a specialized wizard who would act as a supervisor. This superwizard would not accomplish any regular wizard task but would regulate the wizards’ behavior and monitor the WOz session.<marker type="block"/> Task allocation among wizards is a major issue. It strongly depends on the peculiarities of the experiment, but general rules could be applied. For example, we have found useful to consider having one wizard specialized in I/O and other wizards performing task level processing as suggested in [<xref ref-type="bibr" rid="R1" id="26" class="deo:Reference">1</xref>]. Another approach is to assign to each wizard the simulation of a single modality, but in this case the combination of modalities may require an extra wizard specialized in the fusion of modalities.</region>
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="28" page="2" column="1">THE NEIMO PROJECT: A MULTIMODAL WIZARD OF OZ PLATFORM</h1>
        <region class="DoCO:TextChunk" id="32" page="2" column="1">The Neimo platform is a prototype of a Wizard of Oz system for the study of multimodal interaction. It has been designed to allow experiments involving many wizards for the simulation. Moreover, the Neimo platform provides some original features: • flexibility: since the allocation of tasks among wizards is still a field of study, the Neimo platform allows for any number of wizards; wizards’ tasks are dynamically redefinable, even during an experiment, and a wizard can play many roles, at once or successively during the experiment. This feature will allow us to try and study various wizards configurations. • reusability: any software can be easily adapted to the Neimo platform to be studied within a WOz experiment. If the software requires the simulation of special functionalities, the necessary simulation tools can be added without modifying the Neimo platform itself. • genericity: the studied software can request the simulation of functionalities of any level. This allows the designers to use the WOz experiments at any stage of the development process. For example, for designing software involving a handwriting recognizer, the WOz platform could first be used for the study of the integration of handwriting in the interface; at this stage, the recognizer would be entirely simulated by the wizards. In a further step, the designers could setup another experiment, with a functional handwriting recognizer; the WOz platform would then be used to confirm the results of the first experiment, and could also be used to check the accuracy of the recognizer. • extensibility: the Neimo platform has been designed to allow the simulation of any functionality and any modality by the wizards. To meet this requirement, the Neimo system consists in two main parts. On one hand a communication framework handles the circulation of requests from the observed software to the wizards, and of simulation actions from the wizards towards the observed <marker type="column" number="2"/><marker type="block"/> software. This communication framework can convey any information, regardless of its contents. On the other hand, plug-in modules are in charge of all aspects that are specific to the studied software requests or to the wizards’ tasks. Thus, the addition of a new functionality (e.g., the simulation of a new modality) only requires the development of a new plug-in module on the wizards side.<marker type="block"/> During a WOz experiment with the Neimo platform, all the interactions between the observed user and the wizards are collected in an history. This material can then be used by interface evaluation experts to replay and analyze the session. Since a multimodal WOz experiment can represent a huge amount of data, we plan to provide analysis tools to help the evaluation experts’ task, and possibly services to automate parts of the analysis process.<marker type="block"/> The Neimo system is developed on Apple Macintosh Quadra workstations using MacApp, an object-oriented application framework.</region>
      </section>
      <section class="deo:Conclusion">
        <h1 class="DoCO:SectionTitle" id="33" page="2" column="2">CONCLUSION AND PERSPECTIVES</h1>
        <region class="DoCO:TextChunk" id="34" page="2" column="2">We exposed how the WOz technique can be extended to the study of multimodal interaction, and we presented Neimo, a multimodal WOz platform. Two major areas still need further research. First, the organization of the wizards’ work requires a lot of testing and experiments; we intend to define a set of rules that would help configurate the wizards’ operations. Second, we plan to work on the partial automation of the analysis of the data collected during a WOz experiment.</region>
      </section>
      <section class="DoCO:Bibliography">
        <h1 class="DoCO:SectionTitle" id="35" page="2" column="2">REFERENCES</h1>
        <ref-list class="DoCO:BiblioGraphicReferenceList">
          <ref rid="R1" class="deo:BibliographicReference" id="36" page="2" column="2">1. R. Amalberti and C. Valot: “Le Magicien d’Oz”, internal presentation, CERMA, 1992.</ref>
          <ref rid="R2" class="deo:BibliographicReference" id="37" page="2" column="2">2. S.K. Card, T.P. Moran and A. Newell: “The Psychology of Human-Computer Interaction”, Lawrence Erlbaum Associates, 1983.</ref>
          <ref rid="R3" class="deo:BibliographicReference" id="38" page="2" column="2">3. D. Diaper: “The Wizard’s Apprentice: A Program to Help Analyse Natural Language Dialogues”, People and Computers V, proceedings of the 5th Conference of the British Computer Society, 1989.</ref>
          <ref rid="R4" class="deo:BibliographicReference" id="39" page="2" column="2">4. J.-M. Francony, E. Kuijpers and Y. Polity: “Towards a methodology for Wizard of Oz experiments”, Third Conference on Applied Natural Language Processing, Trento, Italy, 31 march - 3 april 1992.</ref>
          <ref rid="R5" class="deo:BibliographicReference" id="40" page="2" column="2">5. A. Jönsson and N. Dahlbäck: “Talking to A Computer is Not Like Talking To Your Best Friend”, Proceedings of the Scandinavian Conference on Artificial Intelligence ‘88, pp. 53-68.</ref>
          <ref rid="R6" class="deo:BibliographicReference" id="41" page="2" column="2">6. J. Löwgren and T.Nordqvist: “A Knowledge-Based Tool for User Interface Evaluation and its Integration in a UIMS”, Interact ‘90, pp. 395-400.</ref>
          <ref rid="R7" class="deo:BibliographicReference" id="42" page="2" column="2">7. M. Richards &amp; K. Underwood: “How Should People and Computers Speak to Each Other”, Proceedings of Interact ‘84, pp. 268-273.</ref>
        </ref-list>
      </section>
    </body>
  </article>
</pdfx>

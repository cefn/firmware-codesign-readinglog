<?xml version='1.0' encoding='UTF-8'?>
<pdfx xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://pdfx.cs.man.ac.uk/static/article-schema.xsd">
  <meta>
    <job>50afcbf6d315cf0b293cb222bc6e749e20f3ade648096792e095ce71038a06ba</job>
    <base_name>62ei</base_name>
    <doi confidence="possible">http://dx.doi.org/10.1145/291224.291229</doi>
  </meta>
  <article>
    <front class="DoCO:FrontMatter">
      <region class="unknown" id="1">C ONTEXTUAL D ESIGN</region>
      <contrib-group class="DoCO:ListOfAuthors">
        <contrib contrib-type="author">
          <name id="2">HUGH BEYER AND KAREN H O LT Z B L AT T</name>
        </contrib>
      </contrib-group>
      <title-group>
        <article-title class="DoCO:Title" id="3" confidence="possible">Contextual Design is a state-of-the-art approach to designing products directly from a</article-title>
      </title-group>
      <region class="DoCO:TextChunk" id="4" confidence="possible">C designer’s marriage of understanding a designer’s detailed of how understanding the customer of works. a customer’s Great product need and ideas his come or her from in-depth the understanding of the possibilities introduced by technology. The best product designs result when the product’s designers are involved in collecting and interpreting customer data and appreciate what real people need. Contextual Design gives designers the tools to do just that.</region>
      <region class="unknown" id="5">Don Bishop ©1997 Artville, LLC</region>
      <outsider class="DoCO:TextBox" type="page_nr" id="6">32</outsider>
      <outsider class="DoCO:TextBox" type="footer" id="7">interactions...january + february 1999</outsider>
      <outsider class="DoCO:TextBox" type="header" id="8">article</outsider>
      <region class="DoCO:TextChunk" id="9" confidence="possible">Contextual Design starts by recognizing that any system embodies a way of working. A system’s function and structure force users to accept particular strategies, language, and work flow. Successful systems offer a way of working that customers want to adopt. Contextual Design is a method that helps a cross- functional team come to agreement on what their customers need and how to design a system for them. According to the Contextual Design approach, data gathered from customers is the base criterion for deciding which needs to address, what the system should do, and how it should be structured. The process guides the design team in understanding and redesigning customers’ work, using those decisions to help define computer systems to support them. By explicitly defining the work and the system,</region>
      <region class="DoCO:FigureBox" id="Fx10">
        <image class="DoCO:Figure" src="62ei.page_002.image_02.png" thmb="62ei.page_002.image_02-thumb.png"/>
      </region>
      <region class="unknown" id="11">The Contextual Design process, showing the parts and where they fit.</region>
      <outsider class="DoCO:TextBox" type="sidenote" id="12">Inc. 301</outsider>
      <region class="unknown" id="15">Hugh Beyer Karen Holtzblatt InContext Enterprises, 249 Ayer Road, Suite Harvard, MA 01451 +1-888-892-0800 Fax: +1-508-772-6907 <email id="13">context@incent.com</email> <ext-link ext-link-type="uri" href="http://www.incent.com" id="14">http://www.incent.com</ext-link></region>
      <region class="DoCO:TextChunk" id="16" confidence="possible">Contextual Design unifies design, marketing, delivery, and support in a coherent response to the customer. It gives a team activities focused on the customers and their work, rather than leaving team members to argue over personal opinion, anecdotes, or unverifiable claims about “what customers would like.” When a team begins work, it has to decide how to approach the task of deciding what to build. Design methods define a coherent series of actions that lead a team, we hope, to a well-designed system. But every problem is different, and every team and organizational system are different; any design method must accommodate specific needs. Because Contextual Design deals with the front end of design, from finding out who your customers are to testing a specific solution for them, it offers a useful framework for tailoring a design pro-</region>
      <outsider class="DoCO:TextBox" type="footer" id="17">interactions...january + february 1999</outsider>
      <outsider class="DoCO:TextBox" type="page_nr" id="18">33</outsider>
      <region class="unknown" id="19">cess. Individual steps can be shortened or omitted if they aren’t applicable, or a step can be elaborated with additional techniques if it is important. Every part of Contextual Design exists for a reason, either to further the design process, maintain a shared purpose and direction in the team, or help the design team coordinate with the larger organization. To change a process means having to understand how each part of the process fits and what problems it solves. Following is a summary of Contextual Design, with a description of the purpose of the part, the problem it solves, and how to get it adopted by your organization. The parts are as follows: Contextual Inquiry: Talk to individual customers in their workplace while they work; Work Modeling: Draw models representing the work of the customers you talk to; Consolidation: Create a single statement of the work practice of your market or organization; Work Redesign: Invent and develop better ways to work; User Environment Design: Represent the entire system for product planning, marketing, UI design, and specification; Mockup and Test with Customers: Test and iterate the design with customers using rough paper mockups.</region>
      <region class="unknown" id="20">Contextual Inquiry ®</region>
      <region class="DoCO:FigureBox" id="Fx21">
        <image class="DoCO:Figure" src="62ei.page_003.image_03.png" thmb="62ei.page_003.image_03-thumb.png"/>
      </region>
      <region class="DoCO:TextChunk" id="22" confidence="possible">Reveals the details and motivations implicit in people’s work ® Makes the customer and their work needs real to the designers ® Introduces customer data as the basis for making decisions ® Creates a shared understanding of the data throughout the team The first problem for designers is to understand the customers: their needs, their desires, their approach to the work. Often the work has become so habitual to the people who do it that they often have difficulty articu- lating exactly what they do and why they do it. Contextual inquiry is an explicit step for understanding who the customers really are and how they work day to day. The design team conducts</region>
      <region class="unknown" id="23">“When I was coding I was behind a mirror... but when I sat together with the user in front of the system, I felt like I was looking through the mirror and becoming aware that there was a human being on the other side.” — Contextual Design user</region>
      <region class="DoCO:TextChunk" id="48">one-on-one field interviews with customers in their workplace to discover what matters in the work. A contextual interviewer observes users as they work and asks about the users’ actions step by step to understand their motivations and strategy. Through dis- cussion, the interviewer and user develop a shared interpretation of the work. Team interpretation sessions bring together a cross-functional team to hear the whole story of an interview and glean the insights and learning relevant to their design problem. An interpretation session lets everyone on the team bring his or her unique perspective to the data, sharing design, marketing, and business implications. Through these discussions, the team captures issues, draws work models, and develops a shared view of the customer whose data is being interpreted and their needs. <marker type="block"/> Changing the organization Clients repeatedly tell us that the most sig- nificant thing we do is put the designer in<marker type="page" number="4"/><marker type="column" number="1"/><marker type="block"/> front of the user. The experience of sitting with the customer, seeing what she strug- gles with daily, forces the designer to change his perspective and appreciate what the issues are and why they matter. Don’t limit contact with the users to “user interaction” specialists—or usability profes- sionals, or human factors experts. Make sure all the designers of the system—developers, marketers, program managers, and even customers (if you’re developing an internal system and have customers on the team)—have a chance to conduct or assist with some interviews. It’s much easier if all stakeholders have a chance to see the issues for themselves than to try to make them all believe you.<marker type="block"/> The quick hit If you apply only one technique from Contextual Design, contextual inquiry should be the one. Decide on your focus: Are you inter- ested in fixing UI glitches? Finding the 10 top show-stoppers before shipping? Interview four to six users on the particular part of the system you care about. Run an interpretation session with the designers of that part—take notes of key findings, but don’t bother with work models—and report the results. Looking for opportunities for new products? Conduct interviews with 15 to 20 users across the market you hope to address. The insights from your interpretation sessions will give you a starting point—but you’ll probably want to see a better picture of your whole market, so draw work models of the customers you interview.<marker type="block"/> Work Modeling ® Provides a language for talking about work that can be shared across teams ® Shows structure of work and makes data from interview coherent ® Grounds the team conversation in explicit representations People’s work is complex and full of detail. It’s also intangible—there’s no good way to write down or talk about work practice. Design teams seldom have the critical skill of seeing the structure of work done by others, looking past the surface detail to see the intents, strategies, and motivations that<marker type="column" number="2"/><marker type="block"/> control how work is done. Work models show the work of individuals and organizations in diagrams. Five different models provide five perspectives on how work is done: (1) the flow model shows com- munication and coordination, (2) the cultural model shows culture and policy, (3) the sequence model shows the detailed steps performed to accomplish a task, (4) the physical model shows the physical environ- ment as it supports the work, and (5) the artifact model shows how artifacts are used and structured in doing the work.<marker type="block"/> Changing the organization Work models are a convenient and compact way to represent a user’s work. Being picto- rial, they are easy to scan; they don’t have to be read, like a scenario or trip summary. They’ll help you communicate what you learned. If you’ve drawn work models during an interpretation session, you can use them to describe the customers’ work to people who missed the session. Contextual Design teams depend on sharing work models to keep everyone informed on every interview. In the end, however, each team member has to design for the whole market—not just the customers they happened to visit. Furthermore, work models help you take the next leap in understanding—from knowing the work of individual customers to understanding the fundamental structure of work for a whole customer population.<marker type="block"/> The quick hit If you’re focused on understanding a single task or designing a single piece of the system, start by drawing sequence and artifact models during the interpretation session. These models reveal how a task is structured and give immediate guidance on designing an interface to support the task. If you’re developing a new product, or looking for product opportunities, you want a deeper understanding of your market’s overall work practice. Develop all the mod- els—the flow, cultural, and physical models will be particularly important for seeing the big picture of how your customers’ work fits together.<marker type="page" number="5"/><marker type="column" number="1"/><marker type="block"/> Consolidation ® Provides a map of the customer population ® Makes sense of vast amounts of qualita- tive data quickly ® Identifies the needs of the customer ® Shows underlying structure of work across customers without losing variation ® Results in corporate data that can be reused by future projects Systems are seldom designed for a single customer. But designing for a whole customer population—the market, depart- ment, or organization that will use the system—depends on seeing the common aspects of the work different people do. Consolidation collects data from individual customer interviews so the team can see common patterns and structure without los-<marker type="column" number="2"/><marker type="block"/> ing individual variation. The affinity diagram maps issues and insights across all customers into a wall-sized, hierarchical diagram to reveal the scope of the problem. Consolidat- ed work models bring together each different type of work model separately to reveal common strategies and intents while retain- ing and organizing individual differences. Together, the affinity diagram and consolidated work models produce a single picture of the customer population a design will address. They give the team a focus for the design conversation, showing how the work functions as a whole rather than breaking it up in lists. They show what matters in the work and guide the structuring of a coherent response, including system focus and features, business actions, and delivery mechanisms.<marker type="page" number="6"/><marker type="column" number="1"/><marker type="block"/> Changing the organization An affinity diagram and set of consolidated models are a picture of your market, or of your internal customer population. They are a resource to be used and reused. People will come back to us years later to say that the data they collected are still guiding<marker type="column" number="2"/><marker type="block"/> their design. Take advantage of your consolidations by D Publicizing them. Invite developers, marketers, and other project teams addressing the same population to peruse them. Create events in which another group reads and discusses</region>
      <outsider class="DoCO:TextBox" type="page_nr" id="26">34</outsider>
      <outsider class="DoCO:TextBox" type="footer" id="27">interactions...january + february 1999</outsider>
      <outsider class="DoCO:TextBox" type="header" id="28">article</outsider>
      <outsider class="DoCO:TextBox" type="footer" id="35">interactions...january + february 1999</outsider>
      <outsider class="DoCO:TextBox" type="page_nr" id="36">35</outsider>
      <region class="DoCO:FigureBox" id="Fx37">
        <image class="DoCO:Figure" src="62ei.page_005.image_04.png" thmb="62ei.page_005.image_04-thumb.png"/>
      </region>
      <outsider class="DoCO:TextBox" type="sidenote" id="38">A</outsider>
      <region class="unknown" id="39">flow model showing whom a user interacted with during the course of an interview.</region>
      <outsider class="DoCO:TextBox" type="page_nr" id="42">36</outsider>
      <outsider class="DoCO:TextBox" type="footer" id="43">interactions...january + february 1999</outsider>
      <outsider class="DoCO:TextBox" type="header" id="44">article</outsider>
      <region class="DoCO:FigureBox" id="Fx46">
        <image class="DoCO:Figure" src="62ei.page_006.image_05.png" thmb="62ei.page_006.image_05-thumb.png"/>
      </region>
      <region class="unknown" id="47">A cultural model showing the culture and policy constraining how work is done.</region>
      <outsider class="DoCO:TextBox" type="footer" id="49">interactions...january + february 1999</outsider>
      <outsider class="DoCO:TextBox" type="page_nr" id="50">37</outsider>
      <region class="DoCO:TextChunk" id="51" confidence="possible">the implications of the models for them. Invite upper management to review the key points from the models and discuss the implications for product and business direction. D Teaching people how to use the models. Clean them up for easy read- ing. Introduce them to people, describing the models themselves, what they say about your customer population, and the design implications they suggest. D Putting the models on your intranet. These days, a 4’ x 6’ diagram on a wall is invisible; a picture on your internal Web site will attract interest from all over the company. Organize the site with a description of the project and the data, and give people a means of browsing it.</region>
      <region class="DoCO:TextChunk" id="74">The quick hit If you’re looking to simply identify the pri- <marker type="column" number="2"/><marker type="block"/> mary issues in a domain, you may be satis- fied with listing key points and making an affinity diagram. The affinity diagram will collect similar issues and show where you have problems. If you’re focused on a single task or piece of your system, building and consolidating sequence and artifact models show how that task is structured. Use these models as a guide for your design—build storyboards or scenarios from them, or move straight to paper prototypes, and if you are planning an object-oriented implementation, to use cases. Pull information from the consolidated models to talk to other teams and management about what you discovered. Get the key points of a slide presentation from the affinity diagram or from issues you identified in a consolidated model. Identi- fy and communicate the “three key strate- gies” or the “four central roles” for your product.<marker type="page" number="8"/><marker type="column" number="1"/><marker type="block"/> Work Redesign ® Focuses the team on improving work, not delivering technology ® Ensures that systems, business alliances, and services fit into the customers’ overall work practice ® Collects and integrates ideas from the whole team Any successful system improves its users’ work practice. A design team’s challenge is to invent and structure a system that will improve customers’ work in ways they care about. Work redesign brings the designers together to discuss the consolidated data and how technology can improve the work. This focuses the conversation on how technology helps people get their jobs done, rather than on what could be done with technology without considering the impact on people’s real lives. The redesigned work practice is portrayed in a vision, a story of how customers will do their work in the new world we invent. A vision includes the system, its delivery, and support structures to make the new work practice successful. The team develops the details of the vision in storyboards, ”freeze- frame” sketches showing scenarios of how people will work with the new system.<marker type="block"/> Changing the organization The vision itself is a high-level statement of what you intend your project to accomplish in its impact on the customer. The vision is a summary orienting a manager, developer, or new team member to your project. It will keep you focused on what matters to the customer, by showing your impact on their work. It’s hard to argue with your vice pres- ident when he or she has fallen in love with some design solution—but if you have concrete customer data backing you up, you stand a better chance. Different parts of the vision will be important to different groups. Even before you’ve started working on the details, marketing can develop market messages and business plans from the vision. Development can start investigating the underlying technology the vision depends on. Delivery and<marker type="column" number="2"/><marker type="block"/> support have a heads-up on what will be expected of them. After the vision is formed, the different functions will start to pursue their separate issues in parallel. Storyboards show how your proposed system will actually be used. Designers spin sto- ries of use all the time—“first the user will do this, then they’ll go here, then...” Storyboards show the conversation and make it concrete, giving your team an external artifact to represent the design conversation. It’s a technique you can use anytime you’re try- ing to sort out the details of a design.<marker type="block"/> The quick hit Use visions to quickly come together on a shared direction. They distill your ideas and help you see how they can fit together. Once you have a vision, you can quickly order which parts to roll out first and who will have to do what to make it happen. Storyboards act like scenarios, but also like high-level use cases, showing what happens when people interact with the system. Use them to think through the principal sit- uations your system will have to support. Let them be the context for your initial UI design, and check the results against your consolidated sequences. When you make use cases, use your storyboards as a guide, and you’ll be better tied to your customer.<marker type="block"/> User Environment Design ® Maintains coherence of the system from the user’s point of view ® Captures the structure, function, and flow of the system ® Focuses the design team on what the system does, not the user interface or implementation ® Allows for planning and keeps team members focused on the whole system, not just their part The new system must have the appropriate function and structure to support a natural flow of work through the system. Just as architects draw floor plans to see the structure and flow of a house, designers need to see the “floor plan” of their new system— hidden behind user interface drawings, implemented by an object model, and<marker type="page" number="9"/><marker type="column" number="1"/><marker type="block"/> responding to the customer work. This floor plan is typically not made explicit in the design process. The User Environment Design (UED) shows the floor plan of the new system. It shows each part of the system, how it supports the user’s work, exactly what function is available in that part, and how the user gets to and from other parts of the system—without tying this structure to any particular user interface. Using an explicit User Environment Design, a team can make sure the structure is right for the user, plan how to introduce new features in a series of releases, and manage the work of the project across engi- neering teams. Using a diagram that focuses on keeping the system coherent for the user counterbalances the other forces that would sacrifice coherence for ease of implementation or delivery.<marker type="block"/> Changing the organization Don’t limit the User Environment Design to creating new systems. If you have usability problems with an existing system, creating a reverse UED for it can quickly reveal many structural problems. Use the reverse UED as a focus for follow-on contextual inquiries. If you’re extending an existing system, the same sort of diagram will show you what you’re starting with. It will help you keep the system coherent while extending it and will be an ally against feature creep. The User Environment Design is also a good way to analyze competitive systems. It strips away the detail of a UI so that you can compare systems at a structural level. How well does your system compare in function? More important, does your competitor match the customers’ work better than you do?<marker type="block"/> The quick hit Use informal User Environment Designs to reveal the structure in current and proposed systems. Use it to help make sense of the huge spec sitting on your desk. Then show the result to the designers so they can see the structure of their proposal. Sketch small, informal User Environment Designs during design meetings to visualize your design discussions and keep avoid getting in the<marker type="column" number="2"/><marker type="block"/> details of a UI. Address structural problems at this level and you’ll have less to do when you get to the UI.<marker type="block"/> Mockup and Test with Customers ® Finds and fixes errors in the new design before any commitment to code ® Makes users a design partner in developing the new system ® Shortens arguments in the team through a quick way to resolve disagreements ® Keeps the team from arguing over user interface detail before the basic structure is right Testing is an important part of any systems development. It’s generally accepted that the sooner problems are found, the less it costs to fix them. So, it’s important to test and iterate a design early, before anyone becomes invested in the design and before anyone spends time writing code. The sim- pler a testing process you have, the more you can do multiple iterations to work out the detailed design with your users. Paper prototyping develops rough mockups of the system using Post-it® notes to represent windows, dialog boxes, buttons, and menus. The design team tests these prototypes with users in their workplace, replaying real work events in the proposed system. When the user discovers problems, they and the designers redesign the prototype together to fit their needs. Rough paper prototypes of the system design test the structure of a User Environment Design and initial user interface ideas before anything is committed to code. If you’ve built a User Environment Design from customer data, your base structure should be good and you’ll quickly be able to focus on the UI. Otherwise, you’ll spend longer working out the base structure on paper. Paper prototypes support continuous iteration of the new system, keeping it faith- ful to the users’ needs. Refining the design with users gives designers a customer-centered way to resolve disagreements and work out the next layer of requirements. The team uses several paper prototype sessions to improve the system and drive detailed user interface design.<marker type="page" number="10"/><marker type="column" number="1"/><marker type="block"/> Changing the organization Paper prototypes are always popular and always successful. They’re quick to build and easy to run. You’ll sometimes run into ner- vousness in your company—someone will be afraid they look like a kindergarten project, not like the product of a responsible organi- zation—but these fears dissolve after the first few interviews. Customers love paper prototypes, because they give customers an opportunity to understand a new design and contribute to it.<marker type="block"/> The quick hit You can create a paper prototype at any time. Customer data-gathering, storyboard- ing, and User Environment Design save you time because they improve your first prototype. But if even you didn’t do that work, mock up and test your design ideas anyway. If you’re stuck arguing over design alterna- tives, mock them up and test them with users. You can prepare a decent mockup, run the interview, and interpret the results in 48 hours—surely more effective than rerunning the argument every week until you ship. Then, when you’ve got the team in the habit of going to the customer to test their ideas, you can ease them into continuing the customer visits as they decide what to build in the next version.</region>
      <region class="DoCO:FigureBox" id="Fx53">
        <image class="DoCO:Figure" src="62ei.page_007.image_06.png" thmb="62ei.page_007.image_06-thumb.png"/>
      </region>
      <outsider class="DoCO:TextBox" type="page_nr" id="55">38</outsider>
      <outsider class="DoCO:TextBox" type="footer" id="56">interactions...january + february 1999</outsider>
      <outsider class="DoCO:TextBox" type="header" id="57">article</outsider>
      <outsider class="DoCO:TextBox" type="footer" id="63">interactions...january + february 1999</outsider>
      <outsider class="DoCO:TextBox" type="page_nr" id="64">39</outsider>
      <outsider class="DoCO:TextBox" type="page_nr" id="70">40</outsider>
      <outsider class="DoCO:TextBox" type="footer" id="71">interactions...january + february 1999</outsider>
      <outsider class="DoCO:TextBox" type="header" id="72">article</outsider>
      <region class="unknown" id="75">After the primary Contextual Design process, a team moves into implementation.</region>
      <region class="DoCO:FigureBox" id="Fx76">
        <image class="DoCO:Figure" src="62ei.page_010.image_08.png" thmb="62ei.page_010.image_08-thumb.png"/>
      </region>
      <region class="unknown" id="77">A reverse User Environment Design for Microsoft Outlook 97 showing the underlying structure of the product.</region>
      <region class="unknown" id="78">Many designs are too complex to deliver in a single release and need to be divided into a series of releases, each addressing a coherent task or role. You can use an ordering process based on the vision and the User Environment Design to decide what subset of the design will give them the most impact for the least effort. And when a team will be using an object-oriented implementation, you can create use cases and object models from the User Environment Design and storyboards. Contextual Design works because it helps a team think about the design issues while han- dling the interpersonal problems that get in the way. Using concrete, customer-centered</region>
      <region class="DoCO:FigureBox" id="Fx79">
        <image class="DoCO:Figure" src="62ei.page_010.image_07.png" thmb="62ei.page_010.image_07-thumb.png"/>
      </region>
      <region class="unknown" id="80">A paper prototype for a shop-at-home system. The hand-drawn look encourages redesign during the interview.</region>
      <outsider class="DoCO:TextBox" type="footer" id="81">interactions...january + february 1999</outsider>
      <outsider class="DoCO:TextBox" type="page_nr" id="82">41</outsider>
      <outsider class="DoCO:TextBox" type="sidenote" id="83">P HARD WORK USE IS</outsider>
      <outsider class="DoCO:TextBox" type="sidenote" id="84">MADE</outsider>
      <outsider class="DoCO:TextBox" type="sidenote" id="85">FULL T O TO</outsider>
      <region class="unknown" id="86">techniques leads to a team’s shared, concrete understanding of the customers’ work and the system’s response. These techniques give a ERMISSION TO MAKE DIGITAL OR design team the chance to design a coherent COPIES OF ALL OR PART OF THIS FOR PERSONAL OR CLASSROOM system that works for customers and can be GRANTED WITHOUT FEE delivered by the organization. PROVIDED THAT COPIES ARE NOT OR DISTRIBUTED FOR PROFIT OR COMMERCIAL ADVANTAGE AND THAT COPIES BEAR THIS NOTICE AND THE CITATION ON THE FIRST PAGE . COPY OTHERWISE , TO REPUBLISH , POST ON SERVERS OR TO REDIS TRIBUTE TO LISTS , REQUIRES PRIOR SPECIFIC PERMISSION AND / OR A FEE . ACM 1072-5220/99/0100 $5.00</region>
      <outsider class="DoCO:TextBox" type="sidenote" id="87">©</outsider>
      <region class="DoCO:TextChunk" id="88" confidence="possible">Further Reading Anthes, G. Clear Vision, Computerworld 31, 20 (May 19, 1997), 81. Beyer, H. and Holtzblatt, K. Contextual Design: Defin- ing Customer-Centered Systems. Morgan Kaufmann Pub- lishers Inc., San Francisco, 1997. Beyer, H. Where Do the Objects Come From? In Proceed- ings of Software Development (Boston, August 1993). Beyer, H. Calling Down the Lightning. IEEE Software 11, 5 (September 1994), 106.</region>
      <region class="DoCO:TextChunk" id="89" confidence="possible">You’ve got a project, you want to get customer data for it, but you don’t know where to start or how much of Contextual Design to use? Here are some quick guidelines. FAST FEEDBACK You’re in field test. Your manager wants Perform contextual inquiries with four to eight users at a to know, “What are the 10 most impor- minimum of four field test sites. Conduct interpretation ses- tant problems to fix before we ship?” sions, capturing notes but no models. Create an affinity dia- Or you have a product in the field. You gram to view the issues and write a report. are asked, “What are the key usability problems in this part of the interface?”</region>
      <region class="unknown" id="90">Next Version You’re working on the next version of your product. You know you want to support a certain task better, or extend to support a new task.</region>
      <outsider class="DoCO:TextBox" type="sidenote" id="91">it</outsider>
      <region class="DoCO:TextChunk" id="92" confidence="possible">Interview 8 to 12 users playing two or three roles in all at four to six sites. Take notes during your interpretation sessions, as well as sequence, artifact, and physical models. Consolidate the sequence models to see the structure of the task. If they are interesting, consolidate the artifact models to see strategies and intents. Create a low-level vision and storyboard, showing details of the users’ interaction with the system. Design the UI and test it with paper prototypes.</region>
      <region class="DoCO:TextChunk" id="93" confidence="possible">New Product You’re designing a new product for a Follow the whole process, including the affinity diagram and market. all models. If you lack the time, skip building a User Environment Design and go straight to UI design and paper prototypes. New Market You’re defining a product strategy for a Follow the whole process using a vision. Conduct 15 to 20 market you’ve never addressed. interviews, covering as many different roles as you can—go for breadth, not depth, of understanding. End with a vision defining various products you might deliver. Analyze the vision to decide which products to pursue, and conduct another round of in-depth interviews to design them.</region>
      <region class="DoCO:TextChunk" id="94" confidence="possible">Holtzblatt, K. and Beyer, H. Making Customer-Centered Design Work for Teams. Communications of the ACM (October 1993). Holtzblatt, K. If We’re a Team, Why Don’t We Act Like One? interactions 1, 3 (July 1994) 17. Holtzblatt, K. and Beyer, H. Representing Work for the Purpose of Design (L. Suchman, ed.). In Representations of Work. Hawaii International Conference on System Sciences, January 1994. Holtzblatt, K. and Beyer, H., eds. Requirements Gath- ering: The Human Factor. Communications of the ACM 38, 5 (May 1995). Winograd, T. Bringing Design to Software. ACM Press, New York, 1996. Wixon, D. and Ramey, J., eds. Field Methods Case Book for Product Design. John Wiley &amp; Sons, Inc., New York, 1996.</region>
      <outsider class="DoCO:TextBox" type="page_nr" id="95">42</outsider>
      <outsider class="DoCO:TextBox" type="footer" id="96">interactions...january + february 1999</outsider>
    </front>
    <body class="DoCO:BodyMatter"/>
  </article>
</pdfx>

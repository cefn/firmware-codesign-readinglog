<?xml version='1.0' encoding='UTF-8'?>
<pdfx xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://pdfx.cs.man.ac.uk/static/article-schema.xsd">
  <meta>
    <job>f1bcecdb82c5a8983cc1d3e82c1caae84e527b6bf04b520a7529233522e7a286</job>
    <base_name>62nx</base_name>
    <doi>http://dx.doi.org/10.4135/9781412950657.n257</doi>
    <warning>Original PDF was found to be an image-based/possible OCR document. Output quality may be degraded.</warning>
  </meta>
  <article>
    <front class="DoCO:FrontMatter">
      <outsider class="DoCO:TextBox" type="header" id="1">BOOK REVIEW</outsider>
      <title-group>
        <article-title class="DoCO:Title" id="2">Designing with the User</article-title>
      </title-group>
      <contrib-group class="DoCO:ListOfAuthors">
        <contrib contrib-type="author">
          <name id="3">LUCY SUCHMAN Xerox Palo Alto Research Center</name>
        </contrib>
      </contrib-group>
      <region class="DoCO:TextChunk" id="4" confidence="possible">Review of Computers and Democracy: A Scandinavian Challenge, G. Bjerknes, P. Ehn, and M. Kyng, Eds. Gower Press, Brookfield, Vt, 1987.</region>
      <abstract class="DoCO:Abstract" id="8" confidence="possible">Anyone who has taken on the task of critically questioning prevailing assumptions about some aspect of the social world knows how much easier it is to mount the critique than to formulate an alternative. The domain of computers in the workplace is no exception to this rule. Many of us have felt deeply dissatisfied with the assumptions that underlie standard representations of human work practices in relation to technology, for example, that such practices are organized normatively by the functional requirements of a given task or are usefully modeled as disembodied data flow. Critical analysts of new technology have pointed to the abuse of computerization by employers who believe that company profitability can be increased by decreasing employee autonomy (see, e.g., [l], [<xref ref-type="bibr" rid="R2" id="5" class="deo:Reference">2</xref>], [<xref ref-type="bibr" rid="R5" id="6" class="deo:Reference">5</xref>], and [<xref ref-type="bibr" rid="R6" id="7" class="deo:Reference">6</xref>]). Expressing our dissatisfaction and articulating such dangers are prerequisite to developing alternative theories and agendas for the design of information technology. But although necessary, such critiques are not sufficient. We need to develop as well a vision of how things could be different-of how, given the necessary time, resources, participants, and perspectives, we might begin to shape a new approach to the design of workplace technology. In Computers and Democracy: A Scandinavian Challenge we begin to see the outlines of what an alternative, genuinely human-centered approach to the design of new technology could be. Notwithstanding the enormous complexity of social relations, professional identities, and conflicting values that characterize the settings described, the prospect of a new way of understanding and negotiating those complexities is, to me, profoundly exciting. The book is the product of a conference held in 1986 at the Computer Science Department of Aarhus University in Denmark on “Computers and the Democratization of Work.” The papers comprise a festschrift or writing in celebration of Kristen Nygaard, professor of computer science at the Institute of Informatics in Oslo, Norway, and the moving force behind the Scandinavian perspective that the book represents. The 22 papers collected here report work carried out over the past 10 years by researchers in Scandinavia, other European countries, and the United States. They include programmatic and empirical discussions of system design; institutional and</abstract>
    </front>
    <body class="DoCO:BodyMatter">
      <section class="DoCO:Section">
        <h1 class="DoCO:SectionTitle" id="9" confidence="possible" page="1" column="1">Author’s address: Xerox Palo Alto Research Center, 3333 Coyote Hill Road, Palo Alto, CA 94304. Permission to copy without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage, the ACM copyright notice and the title of the publication and its date appear, and notice is given that copying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, requires a fee and/or specific permission. 0 1988 ACM 0734-2047/88/0400-0173 $01.50</h1>
        <outsider class="DoCO:TextBox" type="footer" id="10" page="1" column="1">ACM Transactions on Office Information Systems, Vol. 6, No. 2, April 1988, Pages 173-183.</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="11" page="2" column="1">174</outsider>
        <outsider class="DoCO:TextBox" type="header" id="12" page="2" column="1">l Lucy Suchman</outsider>
        <region class="DoCO:TextChunk" id="38" page="2" column="1">professional politics; expertise, skill, and automation; computerization and traditional women’s employment; and the potential benefits of new technology for particular communities (e.g., the retired, the disabled). Since limited space makes it impossible to do justice to all of these, I shall focus on a sampling that I believe conveys the spirit and substance of the collection. <marker type="block"/> COLLECTIVE RESOURCES For readers raised on the peculiarly American brand of computer science and system design that prevails in the United States, the international perspectives provided here open a new horizon of practical experience and theoretical possi- bility. The title of this book presents what to U.S. researchers is an odd juxtaposition, “computers” and “democracy” in our view being only incidentally related through computerized voting machines or future fantasies of brave new worlds where computers oppress us or information sets us free. By and large, we are taught to view the political and the technological as separate spheres, the former having to do with values, ideology, power, and the like, and the latter with physical artifacts exempt from such vagaries of social life. But social theorists like Jordan [<xref ref-type="bibr" rid="R3" id="14" class="deo:Reference">3</xref>], Latour [<xref ref-type="bibr" rid="R4" id="15" class="deo:Reference">4</xref>], and Winner [<xref ref-type="bibr" rid="R8" id="16" class="deo:Reference">8</xref>] define the politics of technology quite differently: not as a specialized arena in which two basically unrelated concerns come together, but as the social relations directly inscribed in and mediated by technical artifacts. Recognizing such a central role for technology in the constitution of the social world and for the social world in the constitution of technology leads to a view of democracy in the sense invoked here, namely, as participation in decisions regarding the design and use of technology that directly affect one’s working life. In their paper “The Collective Resource Approach to Systems Design,” Pelle Ehn and Morten Kyng quote a visitor to Scandinavia who remarks that in the United States “democracy stops at the office door and the factory gate” [p. 211. Our national preoccupation with democracy notwithstanding, at work we take it for granted that others-those who pay us-have the right to make decisions that affect our lives. In Western Europe in general and in Scandinavia in particular, the employer-employee relationship is viewed as more in conflict, but also as more symmetrical, than in the United States. Employees have rights to representation in a much wider arena of decisions regarding those aspects of the operation that directly affect their lives and work, including the introduction of new technologies. Because it is assumed that employers and employees will not always share perspectives on those aspects of operation, the decision-making process is a negotiated one. For U.S. readers perhaps the most controversial aspect of the view of technology design presented in this book is the emphasis on unions as central participants in the research and development process. Over the last 15 years in Scandinavia, a small network of computer scientists and system designers have developed a strong, if complex and sometimes problematical, relationship to national trade unions. Beginning with the Norwegian Iron and Metal Workers project in 1970, a collaboration between the union and Kristen Nygaard and colleagues at the Norwegian Computing Center, designers have worked with unions to develop skill-enhancing, democratizing applications for computers in a range of professions. The goal has been the participation by workers in decisions regarding the<marker type="page" number="3"/><marker type="block"/> design and implementation of new technology. That goal, in turn, has led to an emphasis on union-sponsored educational programs to provide workers with the understanding they need to make those decisions wisely. Whereas the presence of powerful unions is treated as a given by Scandinavian researchers, that presence raises the question of how we in the United States should understand the relation between unionization and the perspectives that the book presents. Ehn and Kyng sketch the lines of comparison and difference between Scandinavia and the United States in this regard. As members of advanced economies extensively involved in the international economic order, “the forces of rationalization of work and technology that [Scandinavian] workers and their trade unions meet are basically the same as in other capitalist econo- mies” [p. 211. On the other hand, the history and politics of unionization in Scandinavia stand in contrast to that in the United States in terms of the strength of unions and their role in national politics. The strength of the unions backed by federal law means that people who would otherwise have little voice in decisions governing new technology are in a position to negotiate mutually satisfactory agreements with their employers regarding how the process will go. And beyond their traditional concern with wages, benefits, and the like, the unions have discretionary control over resources through which they can fund their own independent research projects and educational programs in the area of new technology. However limited, it is those resources and the independent projects and programs unions have seeded over the past 15 years that has forged the alliance between computer researchers and trade unions. Ehn and Kyng argue persuasively that Scandinavian trade unions at both, the local and central levels should continue their commitment not only to participation in decisions regarding the implementation of new technology, but to self-determined, independent initiatives in system research and development.<marker type="block"/> THE SYSTEM DEVELOPMENT PROCESS Although this book leaves open the question of the relation between Scandinavian unionization and the possibilities for participatory design in the United States, the perspectives represented open up a radically new way for us to understand the system development process. In this respect, the centerpiece of the book is Christiane Floyd’s “Outline of a Paradigm Change in Software Engineering.” Drawing on her own experiences as a professor of computer science at the Technical University of Berlin, Floyd characterizes the difference between what she calls “product” and “process-oriented” perspectives on software design as “an ongoing controversy between rivalling ideas and attitudes underlying our scientific and technical work in software engineering” [p. 1931. In the United States, I believe, the product-oriented perspective that she describes has been less one side of a debate than a set of unquestioned assumptions in the software engineering community. In articulating those assumptions and the alternative process-oriented view, her paper systematizes and deepens the debate. As Floyd describes it, the “product” perspective views software as essentially a program and associated documentation and rests upon the following assumptions [p. 1991: (1) For the design of high-quality computer programs, it is sufficient to consider (formalized) information-processing aspects of the usage context. They<marker type="page" number="4"/><marker type="block"/> can be considered on their own, other aspects being ignored (“abstracted from”). These other aspects include the importance of social communication and coop- eration for meaningful work, the role of our body and our senses in dealing with real objects rather than with their computer-simulated counterparts, and the environmental conditions under which we perform our work. (2) Human information processing and decision making is largely equivalent to the functioning of computer programs. The division of work between people and computers is therefore arbitrary and should be determined by technical feasibility. There are no guidelines as to what should and should not be automated from a human point of view. (3) The suitability of a program in the context of work processes is determined by the information it produces. There is no consideration of how this information can be meaningfully used in communicative action.<marker type="block"/> Floyd contrasts a partial list of related concepts from each perspective to show more specifically how they differ [pp. 196-2071; for example, the assessment of a program’s relevance with respect to its setting (the process perspective) is contrasted with the assessment of its correctness with respect to abstract speci- fications (the product perspective). (With regard to this contrast see also [<xref ref-type="bibr" rid="R7" id="27" class="deo:Reference">7</xref>].) She contrasts “quality” in the product perspective, defined by looking from the program to the user (to assess the former’s inherent level of “user friendliness”) with “quality” in the process perspective, defined by looking from the user to the program (to assess the program’s “relevance” or “adequacy” with respect to a particular form of work) [p. 2001. The product perspective defines people’s competence in relation to their use of a given technology rather than, as they themselves do, in relation to their own professional practice. Users are catego- rized, from the point of view of the designer, according to their competence at operating the system. In contrast, Floyd advocates that we take competence to be professional practice, and practitioners’ competence as users of technology to be continually changing, each occasion of use being part of a learning process. Errors, viewed as “one of a class of quite different human situations ranging from simple mistakes to mismatches between user expectation and program functions,” are a precondition for learning [p. 2021. In the product perspective, the interaction between the program and its environment is considered to be prescribed by the program’s design. The “referent system” or “the part of the real world which we take into account when developing programs” is preselected for aspects relevant to the software, but the software development process itself is outside the bounds of the analysis. In the process perspective, by contrast, the referent system is composed of “human work, learning and communication” [p. 1941, which are assumed to be subject to continual development in relation to the software system, and vice versa. The interaction between program and environment on this view must continually change as designers and users change their relation to the technology and as the software is modified to meet new situations and changing work processes. In place of linear “phases” of system development, the work of defining objectives, establishing requirements, specifying functionality, and designing, implementing,<marker type="page" number="5"/><marker type="block"/> and evaluating comprises different “universes of discourse” that meet through the collaborative interaction of participants in a complex set of activities “inter- woven in time” [p. 2021. An essential ingredient for a process-oriented perspective exists in this country already in the form of what is commonly called “rapid prototyping.” Yet precisely because that method enjoys increasingly widespread acceptance, it runs the risk of undermining attempts to introduce real change into the system development process. The response “Oh, but we already do that,” or “Of course, everyone knows that” mistakes perspective for technique and creates blindness to the radically different process in which, for Scandinavian designers, the method of prototyping is embedded. In their contribution to this volume, Kristen Nygaard and Pal Sorgaard point out that<marker type="block"/> One implication of Floyd’s analysis is a radical change in the way we view the knowledge and skills that go into system design; namely, that we view those prospective users of the technology as central and that we incorporate into the design process as sophisticated an understanding of the social world as of the technology involved. Such a change could be achieved by having social theory and methods be a serious rather than extracurricular part of the discipline of software engineering or, more realistically perhaps, through collaborations between social scientists and designers. The interactions of designers with social scientists and of both with users must then be a process of mutual education, taken seriously by all sides and respecting the special chosen skills and craft of the various participants while providing each with some insight into the work of the others. The words “oriented” and “perspective” are chosen by Floyd to convey the sense not of an opposition or mutually exclusive disjunction but of prioritization:<marker type="block"/> Her call is for a reprioritization, a kind of affirmative action for the process perspective and its associated concerns. The process perspective focuses designers’ attention on the particular settings, activities, and interactions between people and relations between people and machines that Floyd calls the “living human world” [p. 1931. More important, it directs our attention to the problem</region>
        <outsider class="DoCO:TextBox" type="footer" id="18" page="2" column="1">ACM Transactions on Office Information Systems, Vol. 6, No. 2, April 1988.</outsider>
        <region class="DoCO:FigureBox" id="Fx19">
          <image class="DoCO:Figure" src="62nx.page_002.image_02.png" thmb="62nx.page_002.image_02-thumb.png"/>
        </region>
        <outsider class="DoCO:TextBox" type="header" id="20" page="3" column="1">Designing with the User . 175</outsider>
        <outsider class="DoCO:TextBox" type="footer" id="23" page="3" column="1">ACM Transactions on Office Information Systems, Vol. 6, No. 2, April 1988.</outsider>
        <region class="DoCO:FigureBox" id="Fx24">
          <image class="DoCO:Figure" src="62nx.page_003.image_03.png" thmb="62nx.page_003.image_03-thumb.png"/>
        </region>
        <outsider class="DoCO:TextBox" type="header" id="25" page="4" column="1">176 - Lucy Suchman</outsider>
        <region class="unknown" id="29" page="4" column="1">ACM Transactions on Office Information Systems, Vol. 6, No. 2, April 1988.</region>
        <region class="DoCO:FigureBox" id="Fx30">
          <image class="DoCO:Figure" src="62nx.page_004.image_04.png" thmb="62nx.page_004.image_04-thumb.png"/>
        </region>
        <outsider class="DoCO:TextBox" type="header" id="31" page="5" column="1">Designing with the User</outsider>
        <outsider class="DoCO:TextBox" type="header" id="32" page="5" column="1">l</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="33" page="5" column="1">177</outsider>
        <region class="unknown" id="35" page="5" column="1">A method seldom contains explicit statements about its perspective. The perspective is instead embedded implicitly in its guidelines, techniques and tools. For this reason a major objective in any education in system development should be to teach the students to analyse every method they are exposed to with the purpose of identifying its embedded perspective. [P. 3771</region>
        <region class="unknown" id="37" page="5" column="1">[I]n this paper I have contrasted two perspectives and not two communities of people holding these perspectives. We all argue and act from both of these perspectives. The criticism implied in my argumentation refers to the fact that existing methods and scientific ap- proaches in software engineering embody the product-oriented view almost exclusively. Working towards overcoming this is both highly imperative, considering the role of information technology in the living human world, and also inspiring since it will provide the opportunity for deep insights into the nature of cognitive processes, for richer relations with the people we meet in our work, and thus for personal development and growth while doing high-quality work in technology. [p. 2081</region>
        <region class="unknown" id="39" page="5" column="1">ACM Transactions on Office Information Systems, Vol. 6, No. 2, April 1988.</region>
        <region class="DoCO:FigureBox" id="Fx40">
          <image class="DoCO:Figure" src="62nx.page_005.image_05.png" thmb="62nx.page_005.image_05-thumb.png"/>
        </region>
        <outsider class="DoCO:TextBox" type="header" id="41" page="6" column="1">178 - Lucy Suchman</outsider>
        <region class="DoCO:TextChunk" id="42" confidence="possible" page="6" column="1">of developing a systematic, nonreductionist, experientially based way of designing technology to fit that world.</region>
        <region class="DoCO:TextChunk" id="74" page="6" column="1">SOCIOTECHNICS Probably the best-known approach to the sociology of system development is the “sociotechnical,” reviewed in this collection by one of its early proponents, Enid Mumford of the Manchester Business School. The approach was developed by a company of researchers that coalesced immediately following World War II at the Tavistock Institute of Human Relations in London and concerns the appli- cability of individual therapeutic psychology to small groups. According to Mumford, “the Tavistock approach is based on the notion of the small, independent work group, handling a set of tasks with high variety, and managing their own activities” [p. 731. Further influenced by systems theory, the Institute launched a number of field projects in 1949 in the British Coal Industry. There the researchers (including one of their members who had been a South Yorkshire coal miner before joining the Institute) integrated technology into their theories and developed the notion that each production unit in the mines comprised a “sociotechnical system” [p. 621. From this perspective they observed that the newly implemented “longwall method” of mining disrupted the existing social organization of the miners, and with it their only source of self-determination and mutual support; “The team began to recognise that if the technical system is optimized at the expense of the human system, the results obtained will be sub-optimal” [p. 631. The Tavistock group remained outside the arena of technology design itself, however, until the early 1960s when Eric Trist, Fred Emery, and Einar Thorsrud began a collaboration with the Norwegian Institute for Social Research on problems in “industrial democracy.” The perspectives developed out of that and subsequent work were combined with the “human relations” school of management in the United States, an academic literature arguing that participative and humanistic styles of management were more effective than traditional authori- tarian ones. The emphasis then was on individual “participation, productivity and learning,” to which end the Tavistock group developed a set of “steps” for work design based on traditional social science analysis combined with proposals for action that could “contribute to both the production and the social objectives of the system” [p. 681. The use of these methods, in turn, led to a set of principles for good design, including the principle that “design is an interactive and continuous process” [p. 701. Mumford reviews the critiques of the Tavistock approach. Two complaints from the trade unions have been, first, that workers and unions are not involved in the research as active participants but only as the object of interviewers interested in their perceptions of change and, second, that the technology on the market is taken for granted by sociotechnical studies, which limit their goals to adapting the local work organization and workers to a given technology. The Scandinavian approach to system development has tried to answer both of these complaints. User participation in the design process in these projects means active collaboration between designers and practitioners from the point of basic research. <marker type="page" number="7"/><marker type="block"/> In her paper Floyd argues that the product perspective is accompanied by an attitude on the part of designers that leads us “to act as if we were solving well- defined problems, rather than taking part and being instrumental in processes of change” [p. 2081. The alternative to that attitude is summed up by Ehn and Kyng in the slogan, “Design should be done with users, neither for nor by them” [p. 541. Elitism and specialization in the U.S. technological professions, however, has produced (and maintains) a mystique of authoritative knowledge accessible only to technologists. Nygaard and Sorgaard identify the power of the systems analyst as a source of disenfranchisement of other professionals: “The systems analyst exercises perspective power and establishes a perspective monopoly by insisting upon, and achieving, the exclusive use (in the development process) of facts, experiences, concepts, techniques, and tools that are meaningful within the framework of a system perspective” [p. 3741. Workers in industries in which computerization is in progress consequently restrict their involvement to the defense of familiar territory such as wages and job security, and technologists point to the technological ignorance of workers as grounds for their exclusion from any serious role in the development process. At the end of that process, technologists point to workers’ resistance to new technology as evidence of their innate conservatism, while remaining blind to the exclusion that creates that resistance. An alternative to this vicious cycle is provided by the UTOPIA project, described by Bodker, Ehn, Kammersgaard, Kyng, and Sundblad as “a Scandinavian research project on trade-union-based development of, and training in, computer technology and work organization” [p. 2541. The project, sponsored by the Swedish Center for Working Life and the Nordic Graphic Workers’ Union, took place from 1981 to 1984. Directed at page makeup and image processing in the newspaper industry, the goal of the UTOPIA project was to move beyond a defensive stance and concern with reducing the negative effects of computerization in the workplace, to a positive experiment in using the introduction of new technology to improve the efficacy of both tools and work organization. The requirements for the system were ambitious, including (1) to capture the best of the previous technologies used in graphics work, (2) to overcome some of the limits of previous technologies, (3) to preserve and build upon existing skills, and (4) to restructure the “borderlands” or relations between professionals in ways that served product quality and work efficiency while respecting the professional identity of the various trades involved. Ultimately, for the UTOPIA project it was this negotiation of “demarcation disputes” at the borderland between, for example, journalists and graphic workers that proved the most difficult design requirement to meet. The “tool perspective” views prospective users of new technology as experts skilled in the use of an existing technology. A major goal in system design is to enhance skills by providing a new tool that is more powerful but also maintains the qualities on which the professional practice is based. In the case of UTOPIA, the computer represents a “third generation” of graphics technologies, the first being based in wood and metal and the second in paper. The UTOPIA analysis associates the first generation of tools with precision and stability, and the second<marker type="page" number="8"/><marker type="block"/> with flexibility but an accompanying loss of precision. The goal for the project was to recapture the precision and stability of the first generation while extending the power of the second. That required, however, finding ways around the limitations of the computer (e.g., poor resolution) while exploiting its strengths. The former were addressed through a series of “lenses” providing multiple and alternative views of a page from overall layout to the actual text of a particular piece. The UTOPIA project and its successors rely heavily upon “use models” or mock-ups that simulate as flexibly and inexpensively as possible system functionality and user interface design. The basis for the mock-up is not a model of “the user” but of the activity. Instead of a static model that prescribes the task, the use of the mock-up provides a context for collaboration or “mutual learning” between domain and computer professionals:<marker type="block"/> The tacit knowledge and skills of the user, in this view, are not available in any form other than the craft itself; in particular, they cannot be explicated and formalized. In that sense (and in contrast to the “expert systems” perspective), computer tools do not incorporate expertise, they serve it.<marker type="block"/> COMMUNICATION AND MUTUAL LEARNING The focus shifts from tools to communication in the case of “Florence,” a Norwegian research project on the application of computers to the everyday work of nursing. As reported by Gro Bjerknes and Tone Bratteteig, two researchers at the University of Oslo, the focus of the Florence project emerged over time as description, but not in the usual sense of diagrammatic representations of information flow, task requirements, or specialist knowledge. Rather the project of describing what it is that nurses do, on the one hand, and what it is that computer systems can do, on the other, provided the grounds for a dialogue between nurses and computer scientists. An example drawn from the authors’ early attempts to computerize the nurses’ patient records, or Kardex system, gives a tangible sense of how the mutual learning occurred. Limits on screen size made it necessary to reconstruct the Kardex form on two screens. The computer scientists on the project (Bjerknes and Bratteteig, the paper’s authors) reasoned that it would be convenient if the most frequently altered fields of the form, those having to do with medicines and other routine treatments, appeared on the first “page” of the electronic record form. This decision served to uncover a general misunderstanding on their part about the patient record and its use. Specifically, they discovered only on presenting this proposal that nurses read the record first not for details of medication, but as a kind of overview of the patient. In that context, a blank field-for example the field recording reactions to special medicines-could be<marker type="page" number="9"/><marker type="block"/> crucial. For the nurse looking at the form with this purpose, “no information is also information.” The salience of the fields derived from their place in a larger activity of assessing overall the condition of the patient. The reorganization of the form transformed its usefulness with respect to that activity.<marker type="block"/> WOMEN AND COMPUTERIZATION Florence is distinctive among medical information systems projects in its focus on nurses rather than on either the hospital administration or the decision- making procedures of doctors. Sally Hacker reviews liberal, socialist, and radical feminist perspectives on women and technology in the workplace. Hacker was coordinator of the National Organization for Women’s participation in the organization of women workers at AT&amp;T in the late 1960s and reports on research of the time that documented that in the telecommunications industry among others, “jobs undergoing technological change were held first by white males, then minority males, white females, and then minority females, who gave way to the machine” [p. 1801. A lawsuit against AT&amp;T charging sex discrimina- tion resulted in a settlement of millions of dollars in back pay to thousands of women-the largest civil rights settlement to that date. Nonetheless, the preoccupation with job opportunity failed to address more fundamental questions like “Who decides on technological innovation, and why? Who decides when to introduce it and when to tell the workers?” [p. 1811. The answers to these questions require a more radical analysis, one that leads to issues of gender, ideology, and relations between women and men. Hacker’s own research questions led her to examine engineering education and the relation of engineering to military institutions. The term “civil” engineering, she points out, emerged during the eighteenth century to denote an engineer whose work was not primarily the design of weapons or fortifications. From the standpoint of a radical feminist analysis, Hacker argues that the emergence of engineering in the context of agendas, ideology, and forms of social organization characteristic of the military has had a profound effect on the role of technology in the society in general, and in relation to women in particular. As in the case of gender, to change the way we think about technology would mean to reconsider the values and relations of power to which the current order of things technological is bound.<marker type="block"/> LOCAL PRACTICE AND SYSTEM EVOLUTION In their report on a pilot project in Norway on system design for municipal planning departments, Tom Chr. Pape and Kari Thoresen take on an interesting problem: “How to design a system which a) gives opportunities for local variations and freedom of action, b) is a tool for information handling in complex information environments and c) economizes with the development resources” [p. 3031. Their project raises the issue of “tailorability” or common substrates that support local ongoing redesign. Both logic and experience indicate that there will inevitably be a gap between designers’ projections of usage scenarios and the situations in which technology is actually used. Through better understanding of a technology’s prospective settings, that gap can be lessened. However, the gap is always only finally closed on occasions of actual use as people appropriate a<marker type="page" number="10"/><marker type="block"/> technology to their particular circumstances. Pape and Thoresen point out that “data systems which intend to formalize and standardize work unnecessarily may be looked upon as another way of ‘working to rule,’ a well known tactic for ineffective work” [p. 3001. They adopt instead a view of office work as case based and necessarily responsive to unforeseeable contingencies. Rob Kling, in “Computerization As An Ongoing Social and Political Process,” suggests that our experience of and familiarity with architectural and urban design can be a resource for the problem of “how to design pro-social artifacts in pluralistic settings” [p. 1231. Viewing computerization in the large, as complex packages of equipment, skills, procedures, and resources as well as software, he argues that<marker type="block"/> CONCLUSION For the researchers whose work is reported in this collection, the design of office information systems seems neither an academic exercise nor a feat of technological prowess carried out for the benefit of professional colleagues. Information systems from this perspective are the latest in a long line of human technologies that organize and give character to the everyday settings in which many of us spend the majority of our waking hours throughout our working lives. Our use of technology is, in large measure, the stuff of which our working lives are made; a resource with which we organize our relations to other people and through which we experience ourselves as powerful, competent, and productive human beings. The question is how, and by whom, should new technology be shaped. The answer, according to this book, is by those who will use it. As researchers and designers our job is to uncover, with them, the horizon of technological possibilities.</region>
        <region class="unknown" id="44" page="6" column="1">ACM Transactions on Office Information Systems, Vol. 6, No. 2, April 1988.</region>
        <region class="DoCO:FigureBox" id="Fx45">
          <image class="DoCO:Figure" src="62nx.page_006.image_06.png" thmb="62nx.page_006.image_06-thumb.png"/>
        </region>
        <outsider class="DoCO:TextBox" type="header" id="46" page="7" column="1">Designing with the User</outsider>
        <outsider class="DoCO:TextBox" type="header" id="47" page="7" column="1">l</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="48" page="7" column="1">179</outsider>
        <region class="unknown" id="49" page="7" column="1">THE TOOL PERSPECTIVE</region>
        <region class="unknown" id="51" page="7" column="1">ACM Transactions on Office Information Systems, Vol. 6, No. 2, April 1988.</region>
        <region class="DoCO:FigureBox" id="Fx52">
          <image class="DoCO:Figure" src="62nx.page_007.image_07.png" thmb="62nx.page_007.image_07-thumb.png"/>
        </region>
        <outsider class="DoCO:TextBox" type="page_nr" id="53" page="8" column="1">180</outsider>
        <outsider class="DoCO:TextBox" type="header" id="54" page="8" column="1">l Lucy Suchman</outsider>
        <region class="unknown" id="56" page="8" column="1">The tool perspective is deeply influenced by the way the design of tools has taken place within traditional crafts. The idea is that a new tool is developed as an extension of the accumulated knowledge of tools and materials within the domain. As a consequence of this, design must be carried out by common efforts of skilled, experienced users and computer professionals. Users possess the tacit skills necessary as [a] basis for analysis and design, but to develop their technical imagination they have to gain insight into technical possibilities as well. [p. 2611</region>
        <region class="unknown" id="59" page="8" column="1">ACM Transactions on Office Information Systems, Vol. 6, No. 2, April 1988.</region>
        <region class="DoCO:FigureBox" id="Fx60">
          <image class="DoCO:Figure" src="62nx.page_008.image_08.png" thmb="62nx.page_008.image_08-thumb.png"/>
        </region>
        <outsider class="DoCO:TextBox" type="header" id="61" page="9" column="1">Designing with the User</outsider>
        <outsider class="DoCO:TextBox" type="header" id="62" page="9" column="1">l</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="63" page="9" column="1">181</outsider>
        <region class="unknown" id="67" page="9" column="1">ACM Transactions on Office Information Systems, Vol. 6, No. 2, April 1988.</region>
        <region class="DoCO:FigureBox" id="Fx68">
          <image class="DoCO:Figure" src="62nx.page_009.image_09.png" thmb="62nx.page_009.image_09-thumb.png"/>
        </region>
        <outsider class="DoCO:TextBox" type="page_nr" id="69" page="10" column="1">182</outsider>
        <outsider class="DoCO:TextBox" type="header" id="70" page="10" column="1">l</outsider>
        <outsider class="DoCO:TextBox" type="header" id="71" page="10" column="1">Lucy Suchman</outsider>
        <region class="unknown" id="73" page="10" column="1">A [computer-based package] is best called a ‘tool’ for some group when they can shape it to serve their interests and discard it easily when it is ineffective or too costly. In contrast, an ‘institution’ refers to some social arrangement which persists, even when it is not working well for some of its participants . . . . [Computer-based packages] can be tools for groups that have power over their shape and use, and appear as institutions for those who are limited in their abilities to negotiate the conditions of their use. [p. 1251</region>
        <region class="unknown" id="75" page="10" column="1">ACKNOWLEDGMENT</region>
        <region class="DoCO:TextChunk" id="76" confidence="possible" page="10" column="1">Thanks to Randy Trigg for helpful comments.</region>
      </section>
      <section class="DoCO:Bibliography">
        <h1 class="DoCO:SectionTitle" id="77" confidence="possible" page="10" column="1">REFERENCES</h1>
        <ref-list class="DoCO:BiblioGraphicReferenceList">
          <ref rid="R1" class="deo:BibliographicReference" id="78" confidence="possible" page="10" column="1">1. GREGORY, J. AND NUSSBAUM, K. Office automation: A threat to the job satisfaction and well- being of women office workers. In Proceedings of the Office Automation Conference (Houston, Tex.). American Federation of Information Processing Societies, Reston, Va., 1981.</ref>
          <ref rid="R2" class="deo:BibliographicReference" id="79" confidence="possible" page="10" column="1">2. HOWARD, R. Brave New Workplace. Viking Press, New York, 1985.</ref>
          <ref rid="R3" class="deo:BibliographicReference" id="80" confidence="possible" page="10" column="1">3. JORDAN, B. High technology: The case of obstetrics. World Health Forum 8,3 (1987), 312-319.</ref>
          <ref rid="R4" class="deo:BibliographicReference" id="81" confidence="possible" page="10" column="1">4. LATOUR, B. Visualization and Cognition: Thinking with Eyes and Hands. In Knowledge and Society, vol. 6, JAI Press, Greenwich, Conn., 1986, l-40.</ref>
          <ref rid="R5" class="deo:BibliographicReference" id="82" confidence="possible" page="10" column="1">5. NOBLE, D. Forces of Production: A Social History of Industrial Automation. Alfred A. Knopf, New York, 1984.</ref>
          <ref class="deo:BibliographicReference" id="83" confidence="possible" page="10" column="1">ACM Transactions on Office Information Systems, Vol. 6, No. 2, April 1988.</ref>
          <ref rid="R6" class="deo:BibliographicReference" id="88" confidence="possible" page="11" column="1">6. SHAIKEN, H. Work Transformed: Automation and Labor in the Computer Age. Holt, Rinehart &amp; Winston, New York, 1984.</ref>
          <ref rid="R7" class="deo:BibliographicReference" id="89" confidence="possible" page="11" column="1">7. SMITH, B. C. Limits to correctness. Tech. Rep. CSLI-85-36, Stanford Univ., Stanford, Calif., 1985.</ref>
          <ref rid="R8" class="deo:BibliographicReference" id="90" confidence="possible" page="11" column="1">8. WINNER, L. Do artifacts have politics? Daedalus 109, (1980), 121-136.</ref>
          <ref class="deo:BibliographicReference" id="91" confidence="possible" page="11" column="1">Received January 1988; revised February 1988; accepted March 1988</ref>
          <ref class="deo:BibliographicReference" id="92" confidence="possible" page="11" column="1">ACM Transactions on Office Information Systems, Vol. 6, No. 2, April 1988.</ref>
        </ref-list>
        <region class="DoCO:FigureBox" id="Fx84">
          <image class="DoCO:Figure" src="62nx.page_010.image_10.png" thmb="62nx.page_010.image_10-thumb.png"/>
        </region>
        <outsider class="DoCO:TextBox" type="header" id="85" page="11" column="1">Designing with the User</outsider>
        <outsider class="DoCO:TextBox" type="header" id="86" page="11" column="1">l</outsider>
        <outsider class="DoCO:TextBox" type="page_nr" id="87" page="11" column="1">183</outsider>
        <region class="DoCO:FigureBox" id="Fx93">
          <image class="DoCO:Figure" src="62nx.page_011.image_11.png" thmb="62nx.page_011.image_11-thumb.png"/>
        </region>
      </section>
    </body>
  </article>
</pdfx>
